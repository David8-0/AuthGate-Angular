var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.011,1,0.641]],["body/components/AppComponent.html",[0,0.018,1,1.107,2,0.982,3,0.195,4,0.195,5,0.783,6,0.783,7,0.783,8,0.167,9,3.188,10,0.604,11,1.617,12,2.306,13,1.51,14,1.51,15,2.651,16,0.806,17,0.7,18,1.045,19,4.257,20,1.037,21,1.037,22,1.107,23,1.037,24,1.037,25,3.766,26,1.045,27,5.004,28,1.045,29,5.004,30,0.38,31,0.554,32,5.634,33,0.224,34,0.023,35,0.69,36,0.69,37,0.604,38,2.861,39,0.486,40,3.747,41,0.687,42,0.347,43,1.426,44,3.747,45,3.747,46,3.747,47,3.747,48,2.82,49,3.747,50,3.747,51,2.82,52,1.727,53,3.747,54,3.747,55,3.747,56,0.195,57,0.38,58,0.783,59,1.045,60,1.045,61,0.783,62,1.256,63,0.783,64,0.338,65,0.783,66,0.69,67,0.783,68,0.69,69,0.783,70,0.69,71,0.783,72,0.69,73,0.783,74,0.783,75,0.69,76,0.783,77,1.045,78,0.69,79,0.783,80,0.69,81,0.783,82,0.783,83,0.69,84,0.783,85,0.783,86,0.69,87,0.783,88,0.783,89,0.69,90,0.783,91,0.69,92,0.604,93,1.045,94,0.69,95,0.783,96,0.69,97,0.783,98,0.783,99,0.69,100,0.783,101,0.69,102,0.554,103,0.69,104,0.783,105,0.735,106,0.783,107,0.783,108,0.016,109,0.016]],["title/injectables/AuthenticationService.html",[110,1.248,111,1.248]],["body/injectables/AuthenticationService.html",[3,0.166,4,0.166,8,0.142,15,1.696,30,0.325,31,0.497,33,0.391,34,0.024,35,1.091,36,0.827,37,0.724,39,0.861,41,0.681,42,0.296,43,1.218,56,0.166,57,0.325,64,0.426,102,0.742,105,0.881,108,0.014,109,0.014,110,1.609,111,1.609,112,1.696,113,2.723,114,3.051,115,0.675,116,2.967,117,4.788,118,3.38,119,4.492,120,4.492,121,4.492,122,4.492,123,0.881,124,2.173,125,3.821,126,3.22,127,2.776,128,3.051,129,2.75,130,2.216,131,2.392,132,4.492,133,0.948,134,0.64,135,3.051,136,3.201,137,3.525,138,3.201,139,0.948,140,4.173,141,3.201,142,1.126,143,3.201,144,2.75,145,3.201,146,2.408,147,3.201,148,3.201,149,1.819,150,3.201,151,2.967,152,3.201,153,2.723,154,3.201,155,3.525,156,3.201,157,2.38,158,3.201,159,3.525,160,3.201,161,4.492,162,3.201,163,3.492,164,1.515,165,2.173,166,1.428,167,0.852,168,3.201,169,3.201,170,3.201,171,3.201,172,2.408,173,1.218,174,1.83,175,2.173,176,3.201,177,1.788,178,2.173,179,1.83,180,3.201,181,4.492,182,3.906,183,3.201,184,3.525,185,3.201,186,2.173,187,3.201,188,2.216,189,4.492,190,4.492,191,5.19,192,5.19,193,3.201,194,3.201,195,2.558,196,3.201,197,3.201,198,3.201,199,3.201,200,3.201,201,3.201,202,3.201,203,2.723,204,3.201,205,3.201,206,3.201,207,3.201,208,3.201,209,3.201,210,3.201,211,3.201,212,3.201,213,3.201,214,4.492,215,3.201,216,3.201,217,3.201]],["title/components/AuthorizeComponent.html",[0,0.011,66,0.641]],["body/components/AuthorizeComponent.html",[0,0.016,1,0.523,2,0.809,3,0.148,4,0.148,5,0.593,6,0.593,7,0.593,8,0.126,10,0.458,13,1.472,14,1.472,16,0.665,17,0.577,18,0.593,20,0.523,21,0.523,22,0.523,23,0.523,24,0.523,26,0.862,28,0.862,30,0.288,31,0.456,33,0.338,34,0.024,35,0.523,36,0.981,37,0.859,38,2.358,39,0.826,41,0.634,42,0.263,43,1.081,56,0.148,57,0.288,58,0.593,59,0.862,60,0.862,61,0.593,62,1.114,63,0.593,64,0.383,65,0.593,66,0.981,67,0.593,68,0.523,69,0.593,70,0.523,71,0.593,72,0.523,73,0.593,74,0.593,75,0.523,76,0.593,77,0.862,78,0.523,79,0.593,80,0.523,81,0.593,82,0.593,83,0.523,84,0.593,85,0.593,86,0.523,87,0.593,88,0.593,89,0.523,90,0.593,91,0.523,92,0.982,93,0.862,94,0.523,95,0.593,96,0.523,97,0.593,98,0.593,99,0.523,100,0.593,101,0.523,102,0.691,103,0.523,104,0.593,105,0.557,106,0.593,107,0.593,108,0.013,109,0.013,111,1.74,115,0.62,123,0.809,126,1.762,127,2.396,130,2.035,131,2.238,133,0.427,134,0.288,139,0.801,142,1.481,149,1.671,166,0.903,167,0.756,177,1.799,179,1.624,188,2.035,218,2.417,219,1.165,220,1.57,221,1.78,222,5.331,223,4.125,224,4.125,225,2.801,226,2.801,227,4.444,228,4.239,229,2.159,230,2.029,231,2.417,232,3.104,233,2.186,234,2.096,235,3.104,236,3.299,237,4.125,238,2.841,239,2.841,240,2.841,241,2.841,242,2.841,243,2.035,244,2.841,245,1.57,246,2.841,247,1.226,248,1.505,249,1.929,250,1.929,251,1.401,252,2.841,253,2.841,254,1.624,255,1.929,256,1.929,257,2.417,258,1.624,259,2.138,260,4.125,261,1.401,262,1.081,263,2.841,264,4.125,265,2.841,266,1.929,267,2.841,268,2.841,269,2.841,270,2.841,271,4.125,272,2.841,273,2.841,274,2.035,275,2.559,276,2.841,277,2.417,278,2.417,279,1.929,280,2.841,281,1.762,282,2.841,283,1.624,284,2.801,285,2.801,286,4.535,287,3.51,288,3.51,289,4.125,290,4.125,291,4.125,292,2.186,293,3.104,294,4.125]],["title/components/DashboardComponent.html",[0,0.011,68,0.641]],["body/components/DashboardComponent.html",[0,0.019,1,0.75,2,1.037,3,0.212,4,0.212,5,0.851,6,0.851,7,0.851,8,0.181,10,0.656,13,1.52,14,1.52,16,0.852,17,0.739,18,1.105,19,4.498,20,0.75,21,0.75,22,0.75,23,0.75,24,0.75,26,1.105,28,1.105,34,0.023,41,0.537,42,0.377,43,1.55,56,0.212,57,0.413,58,0.851,59,1.105,60,1.105,61,0.851,62,1.298,63,0.851,64,0.357,65,0.851,66,0.75,67,0.851,68,1.143,69,0.851,70,0.75,71,0.851,72,0.75,73,0.851,74,0.851,75,0.75,76,0.851,77,1.105,78,0.75,79,0.851,80,0.75,81,0.851,82,0.851,83,0.75,84,0.851,85,0.851,86,0.75,87,0.851,88,0.851,89,0.75,90,0.851,91,0.75,92,0.656,93,1.105,94,0.75,95,0.851,96,0.75,97,0.851,98,0.851,99,0.75,100,0.851,101,0.75,102,0.585,103,0.75,104,0.851,105,0.799,106,0.851,107,0.851,108,0.017,109,0.017,295,3.466,296,5.286,297,3.59,298,3.59,299,5.287,300,5.287,301,4.073,302,2.608,303,4.498]],["title/pipes/DeleteFilterPipe.html",[304,1.605,305,2.162]],["body/pipes/DeleteFilterPipe.html",[3,0.254,4,0.254,8,0.217,10,0.786,16,0.954,17,0.828,33,0.291,34,0.023,35,1.089,37,0.954,39,0.633,41,0.601,42,0.452,56,0.254,57,0.495,64,0.431,102,0.751,108,0.019,109,0.019,115,0.733,133,0.733,134,0.495,139,0.733,166,1.549,195,2.104,219,1.377,302,2.92,304,2.727,305,3.673,306,3.025,307,5.036,308,4.148,309,5.919,310,3.025,311,4.454,312,4.876,313,4.02,314,4.876,315,5.919,316,5.919,317,5.036,318,5.919]],["title/components/DeveloperComponent.html",[0,0.011,70,0.641]],["body/components/DeveloperComponent.html",[0,0.011,1,0.313,2,0.544,3,0.088,4,0.088,5,0.355,6,0.355,7,0.355,8,0.076,10,0.274,13,1.376,14,1.376,16,0.446,17,0.388,18,0.355,20,0.313,21,0.313,22,0.313,23,0.313,24,0.313,26,0.579,28,0.579,30,0.172,31,0.307,33,0.101,34,0.023,35,0.313,36,0.313,37,0.274,39,0.36,41,0.172,42,0.157,56,0.088,57,0.172,58,0.355,59,0.579,60,0.579,61,0.355,62,1.295,63,0.355,64,0.187,65,0.355,66,0.313,67,0.355,68,0.313,69,0.355,70,0.746,71,0.355,72,0.313,73,0.355,74,0.355,75,0.313,76,0.355,77,0.579,78,0.313,79,0.355,80,0.313,81,0.355,82,0.355,83,0.313,84,0.355,85,0.355,86,0.313,87,0.355,88,0.355,89,0.313,90,0.355,91,0.313,92,0.274,93,0.579,94,0.313,95,0.355,96,0.313,97,0.355,98,0.355,99,0.313,100,0.355,101,0.313,102,0.307,103,0.313,104,0.355,105,0.333,106,0.355,107,0.355,108,0.009,109,0.009,115,0.416,139,0.255,142,0.426,164,1.366,182,3.049,195,2.676,243,2.599,319,1.445,320,2.771,321,2.771,322,2.771,323,4.052,324,4.052,325,1.698,326,2.771,327,3.012,328,4.052,329,2.771,330,2.771,331,5.606,332,5.269,333,5.269,334,2.771,335,4.789,336,2.771,337,2.316,338,3.447,339,2.771,340,2.771,341,2.771,342,2.771,343,4.052,344,4.052,345,2.771,346,4.052,347,4.052,348,2.771,349,2.771,350,2.771,351,2.771,352,2.771,353,4.789,354,2.771,355,2.771,356,2.771,357,2.771,358,2.771,359,2.771,360,2.771,361,2.771,362,2.771,363,2.771,364,1.698,365,1.698,366,1.698,367,2.358,368,2.085,369,5.606,370,5.606,371,4.769,372,5.468,373,5.468,374,4.769,375,4.769,376,5.468,377,4.769,378,4.769,379,5.606,380,5.606,381,5.606,382,6.427,383,6.427,384,6.427,385,5.606,386,6.427,387,5.606,388,5.606,389,5.606,390,5.606,391,5.606,392,5.606,393,5.606,394,5.606,395,5.606,396,5.606,397,5.606,398,5.606,399,5.606,400,6.427,401,5.606,402,5.606,403,5.606,404,5.606,405,5.606,406,5.606,407,5.606,408,5.606,409,5.606,410,5.606,411,5.606,412,5.606,413,5.606,414,5.606,415,6.427,416,5.606,417,5.606,418,5.606,419,5.606,420,5.606,421,5.606,422,2.771,423,2.771,424,2.771,425,2.771,426,2.085,427,2.771,428,2.085,429,2.771]],["title/components/ErrorComponent.html",[0,0.011,72,0.641]],["body/components/ErrorComponent.html",[0,0.018,1,0.662,2,0.955,3,0.187,4,0.187,5,0.752,6,0.752,7,0.752,8,0.16,10,0.58,13,1.505,14,1.505,16,0.784,17,0.681,18,0.752,20,0.662,21,0.662,22,0.662,23,0.662,24,0.662,26,0.752,28,1.017,30,0.365,31,0.539,33,0.329,34,0.023,36,0.662,37,0.58,39,0.768,41,0.56,42,0.333,43,1.369,56,0.187,57,0.365,58,0.752,59,1.017,60,1.017,61,0.752,62,1.236,63,0.752,64,0.373,65,0.752,66,0.662,67,0.752,68,0.662,69,0.752,70,0.662,71,0.752,72,1.088,73,0.752,74,0.752,75,0.662,76,0.752,77,1.017,78,0.662,79,0.752,80,0.662,81,0.752,82,0.752,83,0.662,84,0.752,85,0.752,86,0.662,87,0.752,88,0.752,89,0.662,90,0.752,91,0.662,92,0.58,93,1.017,94,0.662,95,0.752,96,0.662,97,0.752,98,0.752,99,0.662,100,0.752,101,0.662,102,0.539,103,0.662,104,0.752,105,0.706,106,0.752,107,0.752,108,0.016,109,0.016,115,0.732,123,0.706,130,1.775,131,2.543,133,0.541,134,0.365,139,0.541,142,1.221,167,0.957,179,2.056,219,1.375,221,2.382,229,2.395,245,1.369,262,1.853,428,3.664,430,3.061,431,2.244,432,3.597,433,4.869,434,5.914,435,3.597,436,4.869,437,3.597,438,1.457,439,3.597,440,3.597,441,3.597,442,3.597,443,2.056,444,3.597,445,3.597,446,3.597,447,1.775,448,3.597,449,3.597,450,3.597,451,3.597,452,4.142,453,4.142,454,4.142,455,4.142,456,4.869,457,3.306,458,3.306,459,4.869]],["title/components/FooterComponent.html",[0,0.011,23,0.641]],["body/components/FooterComponent.html",[0,0.017,1,0.612,2,0.905,3,0.173,4,0.173,5,0.694,6,0.694,7,0.694,8,0.148,10,0.535,13,1.494,14,1.5,16,0.743,17,0.645,18,0.694,20,0.612,21,0.612,22,0.612,23,1.053,24,0.612,26,0.963,28,0.963,30,0.337,31,0.51,33,0.316,34,0.023,36,0.849,37,0.743,38,3.27,39,0.742,41,0.58,42,0.308,56,0.173,57,0.337,58,0.694,59,0.963,60,0.963,61,0.694,62,1.195,63,0.694,64,0.358,65,0.694,66,0.612,67,0.694,68,0.612,69,0.694,70,0.612,71,0.694,72,0.612,73,0.694,74,0.694,75,0.612,76,0.694,77,0.963,78,0.612,79,0.694,80,0.612,81,0.694,82,0.694,83,0.612,84,0.694,85,0.694,86,0.612,87,0.694,88,0.694,89,0.612,90,0.694,91,0.612,92,0.535,93,0.963,94,0.612,95,0.694,96,0.612,97,0.694,98,0.694,99,0.612,100,0.694,101,0.612,102,0.688,103,0.612,104,0.694,105,0.652,106,0.694,107,0.694,108,0.015,109,0.015,111,1.897,115,0.693,116,3.27,123,0.652,133,0.499,134,0.337,139,0.499,142,1.156,149,1.867,166,1.056,167,0.884,219,1.302,220,2.016,230,2.177,232,2.5,245,2.177,247,1.434,254,1.899,257,2.827,262,1.755,277,2.827,302,2.275,337,2.636,443,1.899,457,3.131,460,2.827,461,4.611,462,4.611,463,4.611,464,2.827,465,4.611,466,3.323,467,3.323,468,1.761,469,2.062,470,2.5,471,2.443,472,4.611,473,4.611,474,4.611,475,4.611,476,4.611,477,3.923,478,5.291,479,3.923,480,5.72,481,4.611,482,4.611,483,4.611,484,3.923,485,4.611,486,4.611,487,4.611,488,4.611,489,4.611,490,4.611,491,3.923,492,4.611,493,4.611,494,4.611]],["title/components/GithubCallbackComponent.html",[0,0.011,75,0.641]],["body/components/GithubCallbackComponent.html",[0,0.017,1,0.588,2,0.881,3,0.166,4,0.166,5,0.668,6,0.668,7,0.668,8,0.142,10,0.515,13,1.489,14,1.489,16,0.723,17,0.628,18,0.668,20,0.588,21,0.588,22,0.588,23,0.588,24,0.588,26,0.938,28,0.938,30,0.324,31,0.496,33,0.354,34,0.023,35,0.588,36,0.955,37,0.836,39,0.819,41,0.601,42,0.296,43,1.217,56,0.166,57,0.324,58,0.668,59,0.938,60,0.938,61,0.668,62,1.175,63,0.668,64,0.351,65,0.668,66,0.588,67,0.668,68,0.588,69,0.668,70,0.588,71,0.668,72,0.588,73,0.668,74,0.668,75,1.035,76,1.367,77,0.938,78,0.588,79,0.668,80,0.588,81,0.668,82,0.668,83,0.588,84,0.668,85,0.668,86,0.588,87,0.668,88,0.668,89,0.588,90,0.668,91,0.588,92,0.515,93,0.938,94,0.588,95,0.668,96,0.588,97,0.668,98,0.668,99,0.588,100,0.668,101,0.588,102,0.622,103,0.588,104,0.668,105,0.627,106,0.668,107,0.668,108,0.014,109,0.014,111,1.858,115,0.675,123,0.881,130,2.214,131,2.39,133,0.48,134,0.324,139,0.675,142,1.41,151,2.566,167,0.851,177,1.648,179,1.827,219,1.267,220,1.708,221,1.937,229,2.278,230,2.141,233,2.748,234,2.427,235,3.377,236,3.522,243,2.214,245,2.141,247,1.38,248,1.694,251,1.577,258,1.827,259,2.405,262,1.708,283,1.827,327,2.965,468,1.694,469,2.785,495,5.479,496,5.479,497,2.405,498,3.819,499,3.818,500,3.818,501,2.72,502,3.818,503,3.818,504,2.72,505,2.72,506,2.72,507,2.72,508,2.72,509,2.72,510,2.72,511,2.72,512,1.827,513,2.72,514,2.405,515,2.72,516,2.72,517,2.72,518,2.72,519,2.171,520,2.171,521,1.827,522,3.818]],["title/components/GoogleCallbackComponent.html",[0,0.011,78,0.641]],["body/components/GoogleCallbackComponent.html",[0,0.017,1,0.588,2,0.881,3,0.166,4,0.166,5,0.668,6,0.668,7,0.668,8,0.142,10,0.515,13,1.489,14,1.489,16,0.723,17,0.628,18,0.668,20,0.588,21,0.588,22,0.588,23,0.588,24,0.588,26,0.938,28,0.938,30,0.324,31,0.496,33,0.354,34,0.023,35,0.588,36,0.955,37,0.836,39,0.819,41,0.601,42,0.296,43,1.217,56,0.166,57,0.324,58,0.668,59,0.938,60,0.938,61,0.668,62,1.175,63,0.668,64,0.351,65,0.668,66,0.588,67,0.668,68,0.588,69,0.668,70,0.588,71,0.668,72,0.588,73,0.668,74,0.668,75,0.588,76,0.668,77,0.938,78,1.035,79,1.367,80,0.588,81,0.668,82,0.668,83,0.588,84,0.668,85,0.668,86,0.588,87,0.668,88,0.668,89,0.588,90,0.668,91,0.588,92,0.515,93,0.938,94,0.588,95,0.668,96,0.588,97,0.668,98,0.668,99,0.588,100,0.668,101,0.588,102,0.622,103,0.588,104,0.668,105,0.627,106,0.668,107,0.668,108,0.014,109,0.014,111,1.858,115,0.675,123,0.881,130,2.214,131,2.39,133,0.48,134,0.324,139,0.675,142,1.41,151,2.566,167,0.851,177,1.648,179,1.827,219,1.267,220,1.708,221,1.937,229,2.278,230,2.141,233,2.748,234,2.427,235,3.377,236,3.522,243,2.214,245,2.141,247,1.38,248,1.694,251,1.577,258,1.827,259,2.405,262,1.708,283,1.827,327,2.965,468,1.694,469,2.785,497,2.405,498,3.819,499,3.818,500,3.818,501,2.72,502,3.818,503,3.818,504,2.72,505,2.72,506,2.72,507,2.72,508,2.72,509,2.72,510,2.72,511,2.72,512,1.827,513,2.72,514,2.405,515,2.72,516,2.72,517,2.72,518,2.72,519,2.171,520,2.171,521,1.827,522,3.818,523,5.479,524,5.479]],["title/components/HomeComponent.html",[0,0.011,80,0.641]],["body/components/HomeComponent.html",[0,0.016,1,0.582,2,0.874,3,0.165,4,0.165,5,0.661,6,0.661,7,0.661,8,0.141,10,0.51,13,1.488,14,1.488,16,0.718,17,0.623,18,0.931,20,0.582,21,0.582,22,1.03,23,0.582,24,0.582,26,0.931,28,0.931,34,0.023,38,2.548,41,0.524,42,0.293,56,0.165,57,0.321,58,0.661,59,0.931,60,0.931,61,0.661,62,1.17,63,0.661,64,0.301,65,0.661,66,0.582,67,0.661,68,0.582,69,0.661,70,0.582,71,0.661,72,0.582,73,0.661,74,0.661,75,0.582,76,0.661,77,0.931,78,0.582,79,0.661,80,1.03,81,0.661,82,0.661,83,0.582,84,0.661,85,0.661,86,0.582,87,0.661,88,0.661,89,0.582,90,0.661,91,0.582,92,0.51,93,0.931,94,0.582,95,0.661,96,0.582,97,0.661,98,0.661,99,0.582,100,0.661,101,0.582,102,0.493,103,0.582,104,0.661,105,0.621,106,0.661,107,0.661,108,0.014,109,0.014,116,3.201,310,3.201,337,1.809,371,4.764,372,4.764,373,4.764,374,4.764,375,4.764,376,4.764,377,4.764,378,4.764,447,1.561,457,3.026,478,3.791,484,3.791,491,4.764,525,2.692,526,4.457,527,4.457,528,3.165,529,2.692,530,5.599,531,3.165,532,4.457,533,4.457,534,2.692,535,3.165,536,3.165,537,3.165,538,3.165,539,3.165,540,4.457,541,5.158,542,3.165,543,3.165,544,3.165,545,4.457,546,4.457,547,4.457,548,4.457,549,4.457,550,5.599,551,6.423,552,5.599,553,5.599,554,5.599,555,6.423,556,5.599,557,5.599,558,5.599,559,5.599,560,5.599,561,6.423,562,5.599,563,5.599,564,5.599,565,5.599,566,5.599,567,5.599,568,5.599]],["title/components/LoaderComponent.html",[0,0.011,24,0.641]],["body/components/LoaderComponent.html",[0,0.018,1,0.662,2,0.955,3,0.187,4,0.187,5,0.752,6,0.752,7,0.752,8,0.16,10,0.58,13,1.505,14,1.505,16,0.784,17,0.681,18,0.752,20,0.662,21,0.662,22,0.662,23,0.662,24,1.088,26,1.017,28,1.017,30,0.365,31,0.539,33,0.329,34,0.023,36,0.896,37,0.784,39,0.802,41,0.56,42,0.333,56,0.187,57,0.365,58,0.752,59,1.017,60,1.017,61,0.752,62,1.236,63,0.752,64,0.373,65,0.752,66,0.662,67,0.752,68,0.662,69,0.752,70,0.662,71,0.752,72,0.662,73,0.752,74,0.752,75,0.662,76,0.752,77,1.017,78,0.662,79,0.752,80,0.662,81,0.752,82,0.752,83,0.662,84,0.752,85,0.752,86,0.662,87,0.752,88,0.752,89,0.662,90,0.752,91,0.662,92,0.58,93,1.017,94,0.662,95,0.752,96,0.662,97,0.752,98,0.752,99,0.662,100,0.752,101,0.662,102,0.539,103,0.662,104,0.752,105,0.706,106,0.752,107,0.752,108,0.016,109,0.016,115,0.732,123,0.706,133,0.541,134,0.365,139,0.732,142,1.483,164,1.642,167,0.957,219,1.375,220,1.853,221,2.101,229,2.395,230,2.251,245,2.251,251,1.775,262,1.853,443,2.056,468,1.906,512,2.056,521,2.056,569,3.061,570,5.519,571,4.869,572,4.869,573,4.869,574,3.597,575,3.748,576,4.869,577,3.597,578,3.597,579,3.597,580,1.552,581,2.244,582,3.597,583,3.597,584,3.597,585,3.597,586,3.597,587,3.597,588,4.869]],["title/injectables/LoaderService.html",[110,1.248,575,2.366]],["body/injectables/LoaderService.html",[3,0.236,4,0.236,8,0.202,15,2.402,30,0.46,31,0.626,33,0.368,34,0.024,36,1.042,37,0.912,39,0.839,41,0.574,42,0.42,56,0.236,57,0.46,64,0.306,108,0.018,109,0.018,110,2.027,112,2.402,115,0.851,123,1.211,133,0.681,134,0.46,139,0.681,142,1.137,163,3.829,164,1.909,167,1.207,174,2.592,327,3.878,438,1.836,447,2.792,575,3.844,580,2.663,589,3.858,590,5.66,591,6.171,592,5.66,593,5.66,594,5.66,595,4.534,596,5.66,597,4.534,598,5.66,599,4.534,600,5.66,601,5.66,602,5.66,603,4.534,604,4.534,605,4.534,606,4.534]],["title/components/LoginComponent.html",[0,0.011,83,0.641]],["body/components/LoginComponent.html",[0,0.014,1,0.445,2,0.718,3,0.126,4,0.126,5,0.505,6,0.505,7,0.505,8,0.108,10,0.39,11,1.044,12,2.27,13,1.446,14,1.446,16,0.59,17,0.512,18,0.765,20,0.445,21,0.445,22,0.445,23,0.445,24,0.445,26,0.765,28,0.765,30,0.245,31,0.405,33,0.356,34,0.024,36,1.025,37,0.897,39,0.841,41,0.587,42,0.224,43,0.921,52,1.115,56,0.126,57,0.245,58,0.505,59,0.765,60,0.765,61,0.505,62,1.029,63,0.505,64,0.358,65,0.505,66,0.445,67,0.505,68,0.445,69,0.505,70,0.445,71,0.505,72,0.445,73,0.505,74,0.505,75,0.445,76,0.505,77,0.765,78,0.445,79,0.505,80,0.445,81,0.505,82,0.505,83,0.907,84,0.505,85,0.505,86,0.445,87,0.505,88,0.505,89,0.445,90,0.505,91,0.445,92,0.39,93,0.765,94,0.445,95,0.505,96,0.445,97,0.505,98,0.505,99,0.445,100,0.505,101,0.445,102,0.405,103,0.445,104,0.505,105,0.475,106,0.505,107,0.505,108,0.012,109,0.012,111,1.765,115,0.55,116,2.093,118,2.755,123,0.718,130,2.179,131,2.27,133,0.664,134,0.448,139,0.796,142,1.327,149,2.713,164,2.097,173,2.202,177,1.404,188,1.193,220,0.921,227,2.755,233,2.611,234,2.126,247,1.044,248,1.282,258,1.383,274,1.193,275,1.501,281,1.501,283,1.383,285,3.346,297,2.486,298,2.486,327,2.526,368,2.755,431,2.439,519,3,520,1.643,580,2.284,581,2.745,607,2.058,608,2.272,609,2.093,610,3.662,611,3.662,612,2.755,613,4.418,614,4.418,615,4.738,616,4.418,617,4.927,618,2.755,619,4.192,620,4.192,621,3.708,622,1.501,623,2.741,624,3.662,625,1.806,626,3.662,627,3.432,628,2.419,629,3.662,630,2.419,631,2.419,632,2.419,633,2.419,634,2.419,635,2.419,636,2.486,637,3.708,638,2.419,639,2.419,640,2.419,641,2.419,642,1.383,643,1.383,644,1.044,645,1.501,646,2.419,647,1.82,648,2.058,649,2.419,650,1.82,651,2.419,652,2.058,653,2.058,654,2.058,655,2.179,656,2.179,657,2.179,658,2.179,659,3.595,660,2.419,661,1.82,662,2.058,663,2.058,664,2.058,665,2.419,666,2.486,667,2.419,668,2.419,669,1.82,670,2.419,671,3.115,672,3.115,673,3.115,674,2.419,675,2.419,676,2.419,677,3.184,678,2.419,679,3.346,680,2.419,681,2.419,682,2.419,683,3.662,684,2.419,685,3.115,686,2.755,687,2.419,688,2.419,689,2.419,690,2.419,691,3.662,692,2.419,693,2.419,694,2.419,695,2.419,696,2.419,697,2.419,698,2.419,699,2.419,700,2.419,701,2.419,702,2.419,703,2.419]],["title/components/NavbarComponent.html",[0,0.011,20,0.641]],["body/components/NavbarComponent.html",[0,0.016,1,0.581,2,0.873,3,0.164,4,0.164,5,0.659,6,0.659,7,0.659,8,0.14,10,0.509,13,1.487,14,1.487,16,0.717,17,0.72,18,0.929,20,1.029,21,0.581,22,0.581,23,0.581,24,0.581,26,0.929,28,0.929,30,0.32,31,0.492,33,0.334,34,0.023,36,0.948,37,0.83,38,2.543,39,0.816,41,0.598,42,0.292,43,1.201,56,0.164,57,0.32,58,0.659,59,0.929,60,0.929,61,0.659,62,1.168,63,0.659,64,0.348,65,0.659,66,0.581,67,0.659,68,0.581,69,0.659,70,0.581,71,0.659,72,0.581,73,0.659,74,0.659,75,0.581,76,0.659,77,0.929,78,0.581,79,0.659,80,0.581,81,0.659,82,0.659,83,0.581,84,0.659,85,0.659,86,0.581,87,0.659,88,0.659,89,0.581,90,0.659,91,0.581,92,0.509,93,0.929,94,0.581,95,0.659,96,0.581,97,0.659,98,0.659,99,0.581,100,0.659,101,0.581,102,0.71,103,0.581,104,0.659,105,0.619,106,0.659,107,0.659,108,0.014,109,0.014,111,1.845,115,0.669,116,2.543,117,4.759,123,0.873,130,2.194,131,2.374,133,0.474,134,0.32,139,0.774,142,1.478,157,2.357,166,1.003,167,0.84,177,1.414,179,1.805,186,3.021,219,1.256,220,1.693,221,1.92,226,3.021,229,2.265,230,2.129,245,1.693,247,1.362,251,1.557,254,1.805,255,2.144,261,1.557,262,1.201,266,2.144,279,2.144,283,1.805,285,3.021,293,3.348,296,3.785,297,3.021,298,3.021,338,2.686,367,3.785,457,3.021,469,1.959,580,1.362,581,2.374,623,1.959,672,3.785,686,3.348,704,2.686,705,4.449,706,4.449,707,4.449,708,4.449,709,2.686,710,4.449,711,3.157,712,3.157,713,3.157,714,3.157,715,3.157,716,3.157,717,3.157,718,2.375,719,3.157,720,3.157,721,4.449,722,3.157,723,4.449,724,3.798,725,3.021,726,4.449,727,4.449]],["title/components/NotFoundComponent.html",[0,0.011,86,0.641]],["body/components/NotFoundComponent.html",[0,0.019,1,0.739,2,1.028,3,0.209,4,0.209,5,0.839,6,0.839,7,0.839,8,0.179,10,0.647,13,1.518,14,1.518,16,0.844,17,0.733,18,0.839,20,0.739,21,0.739,22,0.739,23,0.739,24,0.739,26,1.094,28,1.094,34,0.023,41,0.407,42,0.372,56,0.209,57,0.407,58,0.839,59,1.094,60,1.094,61,0.839,62,1.291,63,0.839,64,0.354,65,0.839,66,0.739,67,0.839,68,0.739,69,0.839,70,0.739,71,0.839,72,0.739,73,0.839,74,0.839,75,0.739,76,0.839,77,1.094,78,0.739,79,0.839,80,0.739,81,0.839,82,0.839,83,0.739,84,0.839,85,0.839,86,1.137,87,0.839,88,0.839,89,0.739,90,0.839,91,0.739,92,0.647,93,1.094,94,0.739,95,0.839,96,0.739,97,0.839,98,0.839,99,0.739,100,0.839,101,0.739,102,0.579,103,0.739,104,0.839,105,0.788,106,0.839,107,0.839,108,0.017,109,0.017,292,2.775,452,4.456,458,3.557,728,3.416,729,3.416,730,3.416,731,6.178,732,5.238,733,5.238,734,5.238,735,5.238,736,5.238,737,5.238,738,5.238,739,5.238,740,5.238,741,5.238]],["title/pipes/PaginationPipe.html",[304,1.605,742,2.162]],["body/pipes/PaginationPipe.html",[3,0.253,4,0.253,8,0.216,10,0.782,16,0.951,17,0.826,33,0.29,34,0.023,39,0.63,41,0.599,42,0.45,56,0.253,57,0.493,64,0.43,102,0.75,108,0.019,109,0.019,115,0.73,133,0.73,134,0.493,139,0.73,166,1.543,195,2.096,219,1.371,261,2.913,302,2.396,304,2.721,306,3.013,310,3.013,311,4.444,313,4.01,337,3.376,426,3.655,428,3.655,438,2.681,742,3.664,743,4.132,744,5.905,745,4.444,746,5.905,747,4.857,748,4.857,749,4.857,750,4.857,751,4.857,752,4.857,753,4.857]],["title/components/PricingComponent.html",[0,0.011,22,0.641]],["body/components/PricingComponent.html",[0,0.017,1,0.615,2,0.908,3,0.174,4,0.174,5,0.698,6,0.698,7,0.698,8,0.149,10,0.538,13,1.495,14,1.495,16,0.746,17,0.647,18,0.698,20,0.615,21,0.615,22,1.055,23,0.615,24,0.615,26,0.967,28,0.967,33,0.199,34,0.023,39,0.434,41,0.539,42,0.309,56,0.174,57,0.339,58,0.698,59,0.967,60,0.967,61,0.698,62,1.198,63,0.698,64,0.359,65,0.698,66,0.615,67,0.698,68,0.615,69,0.698,70,0.615,71,0.698,72,0.615,73,0.698,74,0.698,75,0.615,76,0.698,77,0.967,78,0.615,79,0.698,80,0.615,81,0.698,82,0.698,83,0.615,84,0.698,85,0.698,86,0.615,87,0.698,88,0.698,89,0.615,90,0.698,91,0.615,92,0.538,93,0.967,94,0.615,95,0.698,96,0.615,97,0.698,98,0.698,99,0.615,100,0.698,101,0.615,102,0.587,103,0.615,104,0.698,105,0.655,106,0.698,107,0.698,108,0.015,109,0.015,111,1.902,123,0.908,133,0.502,134,0.339,166,1.062,177,1.062,247,1.442,284,4.23,302,3.072,477,5.299,479,5.299,623,2.073,709,2.842,718,2.514,754,2.842,755,4.628,756,4.628,757,4.628,758,3.34,759,6.229,760,6.229,761,6.229,762,6.229,763,6.818,764,6.229,765,6.229,766,6.229,767,6.229,768,6.229,769,6.229,770,6.229,771,6.229,772,6.229,773,6.229,774,6.229]],["title/components/ProfileComponent.html",[0,0.011,89,0.641]],["body/components/ProfileComponent.html",[0,0.011,1,0.299,2,0.524,3,0.084,4,0.084,5,0.339,6,0.339,7,0.339,8,0.175,10,0.261,11,0.7,12,1.817,13,1.366,14,1.366,16,0.43,17,0.373,18,0.558,20,0.299,21,0.299,22,0.299,23,0.299,24,0.299,25,1.221,26,0.558,28,0.558,30,0.165,31,0.295,33,0.33,34,0.024,35,0.299,36,0.952,37,0.834,39,0.786,41,0.586,42,0.15,51,1.221,52,0.748,56,0.084,57,0.165,58,0.339,59,0.558,60,0.558,61,0.339,62,0.824,63,0.339,64,0.39,65,0.339,66,0.299,67,0.339,68,0.299,69,0.339,70,0.299,71,0.339,72,0.299,73,0.339,74,0.339,75,0.299,76,0.339,77,0.558,78,0.299,79,0.339,80,0.299,81,0.339,82,0.339,83,0.299,84,0.339,85,0.339,86,0.299,87,0.339,88,0.339,89,0.726,90,0.339,91,0.299,92,0.261,93,0.558,94,0.299,95,0.339,96,0.299,97,0.339,98,0.339,99,0.299,100,0.339,101,0.299,102,0.626,103,0.299,104,0.339,105,0.318,106,0.339,107,0.339,108,0.009,109,0.009,111,1.218,115,0.401,123,0.524,126,1.657,127,1.678,128,1.813,129,1.803,133,0.593,134,0.4,139,0.704,142,1.298,144,1.415,146,2.009,149,2.096,157,2.742,164,2.257,166,0.516,167,0.432,173,2.384,177,1.385,178,1.102,184,2.677,186,2.31,219,0.754,220,1.016,221,1.152,226,1.813,227,2.009,228,3.183,229,1.597,230,1.501,245,1.016,247,0.7,250,1.102,251,0.8,254,0.928,255,1.102,256,1.102,261,1.317,262,0.618,266,1.102,274,2.312,275,1.657,279,1.102,281,1.007,292,2.089,293,2.967,431,2.662,438,1.081,469,1.657,470,1.221,471,2.483,580,1.881,581,2.283,608,1.657,609,1.526,622,1.007,623,1.657,625,1.317,627,2.841,636,3.515,637,2.009,642,1.945,643,1.945,644,0.7,645,1.007,655,2.85,656,2.85,657,2.85,658,2.85,659,3.515,666,3.924,669,3.527,677,3.156,679,2.677,718,1.221,724,1.813,775,1.381,776,2.67,777,2.67,778,2.67,779,3.402,780,2.272,781,3.402,782,5.176,783,3.402,784,3.402,785,3.943,786,2.67,787,2.67,788,2.009,789,1.945,790,2.67,791,1.623,792,1.623,793,1.623,794,1.623,795,1.623,796,1.623,797,1.623,798,1.623,799,1.623,800,1.623,801,1.623,802,1.381,803,1.623,804,1.623,805,1.623,806,2.272,807,2.908,808,2.67,809,2.446,810,2.272,811,3.527,812,2.272,813,2.272,814,2.272,815,1.623,816,2.009,817,2.009,818,2.009,819,2.009,820,2.009,821,2.009,822,2.009,823,2.272,824,1.623,825,1.623,826,1.381,827,1.221,828,1.221,829,1.623,830,1.381,831,1.623,832,1.221,833,1.623,834,1.623,835,1.623,836,1.623,837,1.623,838,1.381,839,1.381,840,1.623,841,1.623,842,1.623,843,1.623,844,2.67,845,3.988,846,1.623,847,1.623,848,1.623,849,2.67,850,1.623,851,1.623,852,1.623,853,1.623,854,1.623,855,1.623,856,1.623,857,2.67,858,1.623,859,4.687,860,1.623,861,2.67,862,2.67,863,2.967,864,3.988,865,3.183,866,3.988,867,3.402,868,1.623,869,1.623,870,2.272,871,1.623,872,3.943,873,3.943,874,2.67,875,1.623,876,2.272,877,1.623,878,1.623,879,1.623,880,1.623,881,1.623,882,1.623,883,1.623,884,1.623,885,1.623,886,1.623,887,1.623,888,1.623,889,1.623,890,1.623,891,1.623,892,2.272,893,1.623,894,1.623,895,1.623,896,1.623,897,2.272,898,2.272,899,2.272,900,2.272,901,1.623,902,1.623,903,1.623,904,1.813,905,2.67,906,3.354,907,2.67,908,1.623,909,1.623,910,1.623,911,2.67,912,1.623,913,1.623,914,1.623,915,1.623,916,2.009,917,2.677,918,2.009,919,2.009,920,2.009,921,2.009,922,2.009,923,2.009,924,2.009,925,1.657,926,1.623,927,1.623,928,1.623,929,1.623,930,1.221,931,2.009,932,1.623,933,1.623,934,1.623,935,1.623,936,1.623,937,1.623,938,1.623,939,1.623,940,1.623,941,1.623,942,1.623,943,1.623,944,1.623,945,1.623,946,1.623,947,1.623,948,1.623,949,1.623,950,1.623,951,1.623,952,1.623,953,1.623,954,1.623,955,1.623,956,1.623,957,1.623,958,1.623,959,1.623,960,1.221]],["title/interfaces/Project.html",[92,0.561,961,1.248]],["body/interfaces/Project.html",[3,0.25,4,0.25,8,0.214,30,0.487,31,0.649,33,0.416,34,0.023,35,1.332,56,0.25,64,0.446,92,0.945,108,0.019,109,0.019,134,0.723,961,1.72,962,2.544,963,4.085,964,5.387,965,4.962,966,6.594,967,6.594,968,6.331,969,6.331,970,6.594,971,4.085,972,4.802,973,4.802]],["title/components/ProjectItemComponent.html",[0,0.011,91,0.641]],["body/components/ProjectItemComponent.html",[0,0.013,1,0.385,2,0.642,3,0.21,4,0.109,5,0.437,6,0.437,7,0.437,8,0.093,10,0.337,11,0.902,12,2.102,13,1.419,14,1.419,16,0.527,17,0.638,18,0.684,20,0.385,21,0.385,22,0.385,23,0.385,24,0.385,26,0.684,28,0.684,30,0.212,31,0.362,33,0.357,34,0.024,35,0.84,36,1.01,37,0.884,39,0.854,41,0.606,42,0.194,52,0.963,56,0.109,57,0.212,58,0.437,59,0.684,60,0.684,61,0.437,62,0.953,63,0.437,64,0.418,65,0.437,66,0.385,67,0.437,68,0.385,69,0.437,70,0.385,71,0.437,72,0.385,73,0.437,74,0.437,75,0.385,76,0.437,77,0.684,78,0.385,79,0.437,80,0.385,81,0.437,82,0.437,83,0.385,84,0.437,85,0.437,86,0.385,87,0.437,88,0.437,89,0.385,90,0.437,91,0.84,92,1.09,93,0.684,94,0.385,95,0.437,96,0.385,97,0.437,98,0.437,99,0.385,100,0.437,101,0.385,102,0.581,103,0.385,104,0.437,105,0.41,106,0.437,107,0.437,108,0.01,109,0.01,111,1.634,115,0.492,123,0.642,133,0.686,134,0.463,139,0.898,142,1.573,153,3.882,157,1.734,164,1.771,166,0.664,167,0.556,177,1.281,182,3.433,188,1.614,219,0.924,220,1.246,221,1.412,225,2.738,229,1.848,230,1.737,232,2.462,233,1.734,234,1.74,245,1.737,247,0.902,248,1.108,249,1.42,254,1.195,258,1.195,262,1.246,274,1.614,278,1.778,284,2.222,286,2.784,431,2.42,464,1.778,468,1.108,470,1.573,498,3.567,512,1.195,521,1.195,580,1.969,581,2.42,608,2.03,609,1.871,625,1.989,627,3.011,642,1.195,643,1.195,644,0.902,645,1.297,655,2.251,656,2.251,657,2.251,658,2.251,664,1.778,666,2.222,677,2.608,724,2.222,864,1.778,865,2.222,866,1.778,904,3.567,965,2.462,974,5.635,975,4.498,976,1.573,977,2.784,978,2.03,979,2.784,980,2.784,981,2.784,982,4.033,983,3.272,984,3.272,985,4.033,986,4.562,987,4.562,988,2.784,989,2.784,990,4.562,991,4.562,992,4.562,993,2.784,994,2.784,995,3.272,996,2.09,997,2.09,998,2.09,999,1.778,1000,4.214,1001,2.09,1002,2.784,1003,3.882,1004,2.09,1005,1.573,1006,2.09,1007,2.09,1008,2.09,1009,2.09,1010,2.09,1011,1.778,1012,2.09,1013,2.09,1014,2.09,1015,2.09,1016,1.778,1017,3.882,1018,2.09,1019,1.778,1020,2.784,1021,1.778,1022,1.778,1023,2.09,1024,2.09,1025,2.09,1026,2.09,1027,2.09,1028,2.09,1029,2.09,1030,2.09,1031,2.09,1032,2.09,1033,2.09,1034,2.784,1035,2.09,1036,2.09,1037,2.09,1038,2.09,1039,2.09,1040,1.297,1041,1.778,1042,2.09,1043,2.09,1044,2.09,1045,2.09,1046,2.09,1047,3.272,1048,3.272,1049,5.253,1050,3.272,1051,3.272,1052,3.272,1053,3.272,1054,3.272,1055,2.222,1056,2.09,1057,2.09,1058,2.09,1059,2.09,1060,2.09,1061,2.09,1062,2.09,1063,2.09,1064,2.09,1065,2.09,1066,2.09,1067,2.09]],["title/injectables/ProjectService.html",[110,1.248,234,1.503]],["body/injectables/ProjectService.html",[3,0.203,4,0.203,8,0.173,15,2.065,30,0.396,31,0.568,33,0.403,34,0.024,35,1.241,36,1.057,37,0.926,39,0.886,41,0.62,42,0.361,56,0.203,57,0.396,64,0.429,92,1.11,108,0.016,109,0.016,110,1.84,112,2.065,114,3.488,115,0.772,123,0.765,124,2.647,125,4.147,133,0.954,134,0.644,135,3.488,139,0.954,140,4.426,163,3.789,164,1.732,165,2.647,167,1.037,174,2.228,175,2.647,195,2.739,225,4.147,234,2.217,243,2.834,249,2.647,443,2.228,988,4.37,993,4.37,999,3.316,1011,3.316,1068,3.316,1069,4.37,1070,4.37,1071,5.745,1072,3.865,1073,5.136,1074,3.897,1075,3.897,1076,3.897,1077,3.897,1078,3.897,1079,3.897,1080,3.897,1081,3.897,1082,5.136,1083,3.897,1084,3.897,1085,3.897,1086,3.897,1087,3.897,1088,3.897,1089,3.897,1090,2.933,1091,3.897,1092,3.897,1093,3.897,1094,3.897,1095,3.897,1096,3.897,1097,3.897]],["title/components/ProjectsComponent.html",[0,0.011,94,0.641]],["body/components/ProjectsComponent.html",[0,0.015,1,0.503,2,0.787,3,0.142,4,0.142,5,0.571,6,0.571,7,0.571,8,0.122,10,0.44,11,1.179,12,2.412,13,1.466,14,1.466,16,0.646,17,0.561,18,0.838,20,0.503,21,0.503,22,0.503,23,0.503,24,0.503,25,2.057,26,0.838,28,0.838,30,0.277,31,0.444,33,0.312,34,0.024,36,0.874,37,0.765,39,0.781,41,0.65,42,0.253,51,2.057,52,1.259,56,0.142,57,0.277,58,0.571,59,0.838,60,0.838,61,0.571,62,1.093,63,0.571,64,0.417,65,0.571,66,0.503,67,0.571,68,0.503,69,0.571,70,0.503,71,0.571,72,0.503,73,0.571,74,0.571,75,0.503,76,0.571,77,0.838,78,0.503,79,0.571,80,0.503,81,0.571,82,0.571,83,0.503,84,0.571,85,0.571,86,0.503,87,0.571,88,0.571,89,0.503,90,0.571,91,0.874,92,1.058,93,0.838,94,0.963,95,0.571,96,0.503,97,0.571,98,0.571,99,0.503,100,0.571,101,0.503,102,0.444,103,0.503,104,0.571,105,0.536,106,0.571,107,0.571,108,0.013,109,0.013,115,0.603,123,0.787,133,0.603,134,0.407,139,0.714,142,1.397,164,1.965,167,0.727,177,1.274,188,1.978,219,1.132,220,1.526,221,1.731,226,2.723,229,2.12,230,1.992,233,2.517,234,2.259,245,1.526,248,1.448,249,1.856,251,1.348,255,1.856,261,1.348,262,1.04,266,1.856,274,1.978,275,1.696,279,1.856,281,1.696,284,2.723,431,2.189,447,1.978,498,2.723,608,2.488,609,2.716,622,1.696,625,1.978,627,3.19,642,1.562,643,1.562,644,1.179,645,1.696,650,2.057,655,1.978,656,1.978,657,1.978,658,1.978,666,2.723,677,2.992,725,3.956,865,1.856,904,2.723,906,3.412,917,2.723,965,3.018,975,1.856,978,2.488,979,3.412,1005,3.018,1017,4.453,1019,2.325,1021,2.325,1022,2.325,1034,2.325,1069,4.453,1070,3.412,1098,2.325,1099,4.011,1100,4.011,1101,4.751,1102,4.011,1103,4.011,1104,2.733,1105,2.733,1106,2.733,1107,2.733,1108,2.733,1109,1.856,1110,2.733,1111,2.733,1112,2.733,1113,2.733,1114,2.733,1115,2.733,1116,2.733,1117,2.733,1118,2.733,1119,2.733,1120,2.733,1121,4.011,1122,4.011,1123,5.826,1124,2.723,1125,4.011,1126,2.733,1127,2.733,1128,2.733,1129,2.733,1130,2.733,1131,2.733,1132,4.011,1133,2.733,1134,2.733,1135,2.733,1136,2.733,1137,2.733,1138,2.733]],["title/components/ResetPasswordComponent.html",[0,0.011,96,0.641]],["body/components/ResetPasswordComponent.html",[0,0.015,1,0.489,2,0.77,3,0.138,4,0.138,5,0.555,6,0.555,7,0.555,8,0.118,10,0.428,13,1.461,14,1.461,16,0.633,17,0.653,18,0.82,20,0.489,21,0.489,22,0.489,23,0.489,24,0.489,26,0.82,28,0.82,30,0.269,31,0.434,33,0.344,34,0.023,35,0.489,36,1.014,37,0.887,39,0.826,41,0.524,42,0.246,43,1.011,56,0.138,57,0.269,58,0.555,59,0.82,60,0.82,61,0.555,62,1.078,63,0.555,64,0.349,65,0.555,66,0.489,67,0.555,68,0.489,69,0.555,70,0.489,71,0.555,72,0.489,73,0.555,74,0.555,75,0.489,76,0.555,77,0.82,78,0.489,79,0.555,80,0.489,81,0.555,82,0.555,83,0.489,84,0.555,85,0.555,86,0.489,87,0.555,88,0.555,89,0.489,90,0.555,91,0.489,92,0.428,93,0.82,94,0.489,95,0.555,96,0.95,97,1.307,98,0.555,99,0.489,100,0.555,101,0.489,102,0.434,103,0.489,104,0.555,105,0.521,106,0.555,107,0.555,108,0.013,109,0.013,115,0.59,118,3.515,123,0.77,133,0.59,134,0.398,139,0.776,142,1.381,146,1.998,151,2.951,164,2.203,173,2.534,177,1.248,219,1.108,220,1.778,228,3.916,230,1.965,236,3.505,243,1.937,514,1.998,580,2.016,581,2.657,609,2.671,612,2.955,615,4.906,618,2.955,621,3.884,627,2.918,636,2.666,642,2.671,643,2.671,644,1.146,647,1.998,648,2.259,659,2.666,661,1.998,677,2.951,679,2.666,788,1.998,789,2.671,811,2.955,817,2.955,818,2.955,819,2.955,820,2.955,821,2.955,822,2.955,823,3.34,828,1.998,832,1.998,870,2.259,876,2.259,916,2.955,917,3.505,918,2.955,919,2.955,920,2.955,921,2.955,922,2.955,923,2.955,924,2.955,925,2.436,930,1.998,931,2.955,960,1.998,1139,5.491,1140,5.491,1141,2.259,1142,3.926,1143,3.926,1144,3.34,1145,4.391,1146,2.655,1147,4.672,1148,3.926,1149,2.655,1150,2.655,1151,2.655,1152,2.655,1153,2.655,1154,2.655,1155,2.655,1156,2.655,1157,2.655,1158,2.259,1159,2.259,1160,2.655,1161,2.655,1162,2.655,1163,2.655,1164,2.655,1165,2.655,1166,2.655,1167,2.259,1168,2.655,1169,2.655,1170,2.655,1171,2.655,1172,2.655,1173,2.655,1174,2.655,1175,2.655,1176,2.655,1177,2.655,1178,2.655,1179,2.655,1180,2.655,1181,2.655,1182,2.655,1183,2.655]],["title/pipes/SearchUsersPipe.html",[304,1.605,1184,2.162]],["body/pipes/SearchUsersPipe.html",[3,0.258,4,0.258,8,0.221,10,0.799,16,0.964,17,0.837,33,0.296,34,0.023,35,1.182,39,0.644,41,0.607,42,0.46,56,0.258,57,0.504,64,0.434,102,0.755,108,0.019,109,0.019,115,0.746,133,0.746,134,0.504,139,0.746,166,1.577,195,2.141,219,1.401,302,2.951,304,2.757,306,3.079,310,3.712,311,3.734,313,4.062,317,4.222,1184,3.712,1185,5.09,1186,4.222,1187,5.982,1188,5.982,1189,4.962,1190,4.962,1191,4.962]],["title/interfaces/SignIn.html",[137,2.366,961,1.248]],["body/interfaces/SignIn.html",[3,0.276,4,0.276,8,0.237,30,0.54,31,0.69,33,0.372,34,0.022,35,1.296,56,0.276,108,0.02,109,0.02,137,4.233,149,2.762,173,2.596,961,1.904,962,2.817,1192,4.524,1193,4.524]],["title/injectables/TenantService.html",[110,1.248,129,1.846]],["body/injectables/TenantService.html",[3,0.202,4,0.202,8,0.173,15,2.059,30,0.394,31,0.567,33,0.402,34,0.024,35,1.222,36,0.943,37,0.826,39,0.885,41,0.644,42,0.36,56,0.202,57,0.394,64,0.44,102,0.675,108,0.016,109,0.016,110,1.836,112,2.059,114,3.481,115,0.77,123,0.762,124,2.638,125,4.142,129,2.716,133,0.979,134,0.661,135,3.481,139,0.979,140,4.51,144,3.36,163,3.785,164,1.729,165,2.638,166,1.235,167,1.034,172,2.924,173,1.479,174,2.221,175,2.638,195,2.81,443,2.221,863,3.857,1055,3.481,1072,3.857,1090,2.924,1194,3.306,1195,5.126,1196,4.881,1197,5.126,1198,5.126,1199,5.126,1200,3.306,1201,3.885,1202,3.857,1203,3.885,1204,3.306,1205,3.885,1206,3.306,1207,3.885,1208,3.306,1209,3.885,1210,3.885,1211,3.885,1212,3.885,1213,3.306,1214,5.126,1215,3.885,1216,3.885,1217,3.885,1218,3.306,1219,3.885,1220,3.306,1221,3.306,1222,3.306,1223,3.306,1224,3.306,1225,3.306,1226,3.306,1227,3.306]],["title/interfaces/TenantSignup.html",[155,2.366,961,1.248]],["body/interfaces/TenantSignup.html",[3,0.247,4,0.247,8,0.212,30,0.483,31,0.645,33,0.419,34,0.023,35,1.342,56,0.247,64,0.426,108,0.019,109,0.019,134,0.712,149,2.553,155,3.959,173,2.4,292,3.341,471,3.482,809,3.912,961,1.703,962,2.52,1228,4.047,1229,3.579,1230,3.912,1231,4.463,1232,4.047,1233,4.047,1234,4.047,1235,4.756,1236,4.756,1237,4.047]],["title/components/TenantsComponent.html",[0,0.011,99,0.641]],["body/components/TenantsComponent.html",[0,0.015,1,0.512,2,0.797,3,0.145,4,0.145,5,0.581,6,0.581,7,0.581,8,0.124,10,0.448,11,1.2,12,2.432,13,1.469,14,1.469,16,0.654,17,0.568,18,0.849,20,0.512,21,0.512,22,0.512,23,0.512,24,0.512,26,0.849,28,0.849,30,0.282,31,0.449,33,0.384,34,0.024,35,0.971,36,1.114,37,1.02,39,0.856,41,0.662,42,0.258,52,1.282,56,0.145,57,0.282,58,0.581,59,0.849,60,0.849,61,0.581,62,1.103,63,0.581,64,0.379,65,0.581,66,0.512,67,0.581,68,0.512,69,0.581,70,0.512,71,0.581,72,0.512,73,0.581,74,0.581,75,0.512,76,0.581,77,0.849,78,0.512,79,0.581,80,0.512,81,0.581,82,0.581,83,0.512,84,0.581,85,0.581,86,0.512,87,0.581,88,0.581,89,0.512,90,0.581,91,0.512,92,0.448,93,0.849,94,0.512,95,0.581,96,0.512,97,0.581,98,0.581,99,0.971,100,0.581,101,0.883,102,0.621,103,0.512,104,0.581,105,0.546,106,0.581,107,0.581,108,0.013,109,0.013,115,0.61,123,0.797,128,1.889,129,2.543,133,0.721,134,0.487,139,0.793,142,1.47,166,0.884,167,0.74,177,1.291,178,1.889,188,1.372,229,2.137,230,2.009,245,2.009,262,1.546,274,1.372,302,1.372,303,5.28,305,2.52,337,1.59,431,2.211,438,2.374,447,1.372,458,2.758,468,1.474,512,1.59,521,1.59,625,2.367,644,1.2,655,1.372,656,1.372,657,1.372,658,1.372,742,2.52,745,3.057,827,2.093,925,1.726,978,2.52,1040,3.274,1109,1.889,1124,2.758,1184,2.52,1238,2.366,1239,3.456,1240,2.52,1241,4.062,1242,4.062,1243,3.456,1244,3.456,1245,4.49,1246,3.456,1247,3.456,1248,3.456,1249,2.781,1250,4.062,1251,3.456,1252,2.781,1253,2.781,1254,2.781,1255,2.366,1256,2.781,1257,2.781,1258,2.781,1259,2.781,1260,2.781,1261,2.781,1262,2.781,1263,1.889,1264,2.366,1265,2.366,1266,2.366,1267,2.366,1268,2.366,1269,2.366,1270,2.366,1271,2.781,1272,2.366,1273,2.366,1274,2.366,1275,2.366,1276,2.366,1277,2.781,1278,2.366,1279,2.781,1280,2.366,1281,2.781,1282,2.366,1283,2.093,1284,2.781,1285,2.781,1286,2.366,1287,2.366,1288,2.366,1289,3.456,1290,3.456,1291,3.456,1292,3.456,1293,3.456]],["title/pipes/TimesPipe.html",[304,1.605,1240,2.162]],["body/pipes/TimesPipe.html",[3,0.261,4,0.261,8,0.223,10,0.809,16,0.971,17,0.843,33,0.3,34,0.023,37,0.809,39,0.652,41,0.51,42,0.465,56,0.261,57,0.51,64,0.436,108,0.019,109,0.019,115,0.755,133,0.755,134,0.51,139,0.755,219,1.418,261,2.477,304,2.776,306,3.115,310,3.115,313,4.091,438,2.614,447,2.477,1240,3.738,1294,4.272,1295,6.025,1296,6.025,1297,5.021,1298,5.021,1299,5.021,1300,5.021,1301,6.025]],["title/interfaces/UpdatePassword.html",[144,1.846,961,1.248]],["body/interfaces/UpdatePassword.html",[3,0.267,4,0.267,8,0.229,30,0.522,31,0.676,33,0.403,34,0.023,35,1.31,56,0.267,108,0.02,109,0.02,134,0.62,144,3.239,151,3.728,816,4.908,817,4.908,822,4.908,961,1.842,962,2.725,1302,4.376,1303,4.376,1304,5.144,1305,5.144,1306,5.144,1307,5.144]],["title/interfaces/User.html",[102,0.385,961,1.248]],["body/interfaces/User.html",[3,0.218,4,0.218,8,0.187,30,0.426,31,0.596,33,0.425,34,0.023,35,1.35,56,0.218,64,0.425,102,0.596,108,0.017,109,0.017,134,0.743,149,2.544,173,2.266,184,4.266,292,3.329,438,2.182,471,3.329,580,2.325,725,4.043,807,3.694,809,3.898,816,4.48,961,1.502,962,2.223,964,5.065,971,3.569,1040,3.694,1230,3.898,1231,4.266,1308,3.569,1309,3.569,1310,4.195,1311,4.195,1312,4.195,1313,4.195]],["title/components/UserItemComponent.html",[0,0.011,101,0.641]],["body/components/UserItemComponent.html",[0,0.014,1,0.462,2,0.739,3,0.235,4,0.131,5,0.524,6,0.524,7,0.524,8,0.112,10,0.404,11,1.083,12,2.313,13,1.452,14,1.452,16,0.607,17,0.632,18,0.787,20,0.462,21,0.462,22,0.462,23,0.462,24,0.462,26,0.787,28,0.787,30,0.255,31,0.417,33,0.337,34,0.024,35,0.832,36,0.832,37,0.728,39,0.76,41,0.594,42,0.233,52,1.157,56,0.131,57,0.255,58,0.524,59,0.787,60,0.787,61,0.524,62,1.049,63,0.524,64,0.396,65,0.524,66,0.462,67,0.524,68,0.462,69,0.524,70,0.462,71,0.524,72,0.462,73,0.524,74,0.524,75,0.462,76,0.524,77,0.787,78,0.462,79,0.524,80,0.462,81,0.524,82,0.524,83,0.462,84,0.524,85,0.524,86,0.462,87,0.524,88,0.524,89,0.462,90,0.524,91,0.832,92,0.728,93,0.787,94,0.462,95,0.524,96,0.462,97,0.524,98,0.524,99,0.462,100,0.524,101,0.924,102,0.761,103,0.462,104,0.524,105,0.493,106,0.524,107,0.524,108,0.012,109,0.012,115,0.566,123,0.739,126,2.336,127,2.229,128,2.557,129,2.394,133,0.679,134,0.459,139,0.679,142,1.259,149,1.525,157,2.85,166,0.798,177,1.436,178,1.705,184,2.557,188,1.857,219,1.063,250,1.705,254,1.435,256,1.705,274,1.857,275,2.336,281,1.557,287,3.203,288,3.203,292,1.995,431,2.313,438,1.525,471,1.995,580,1.625,581,1.735,608,2.336,622,1.557,625,1.857,645,1.557,655,2.477,656,2.477,657,2.477,658,2.477,669,2.833,724,4.091,725,3.409,780,3.203,802,2.136,807,2.336,809,2.336,827,1.889,830,2.136,838,2.136,839,2.136,845,3.203,865,2.557,892,3.203,975,1.705,976,1.889,977,3.844,978,3.504,980,3.203,981,3.203,989,3.203,994,3.203,1000,3.203,1002,3.203,1003,4.271,1005,1.889,1016,2.136,1020,3.203,1040,3.504,1041,3.203,1055,2.557,1109,1.705,1124,3.409,1202,1.889,1263,4.091,1278,2.136,1314,5.126,1315,4.518,1316,3.765,1317,5.021,1318,3.765,1319,2.51,1320,2.51,1321,2.51,1322,2.51,1323,2.51,1324,2.51,1325,2.51,1326,2.51,1327,2.51,1328,3.765,1329,2.51,1330,2.136,1331,2.51,1332,2.51,1333,3.765,1334,3.765,1335,3.765,1336,3.765,1337,3.765,1338,3.765,1339,3.765,1340,3.765,1341,5.021,1342,3.765]],["title/injectables/UserService.html",[110,1.248,127,1.718]],["body/injectables/UserService.html",[3,0.195,4,0.195,8,0.167,15,1.991,30,0.381,31,0.555,33,0.404,34,0.024,35,1.247,36,0.923,37,0.808,39,0.888,41,0.636,42,0.348,56,0.195,57,0.381,64,0.445,102,0.666,108,0.016,109,0.016,110,1.796,112,1.991,114,3.405,115,0.754,123,0.737,124,2.552,125,4.088,127,2.473,133,0.99,134,0.668,135,3.405,139,0.99,140,4.544,144,3.323,163,3.735,164,1.691,165,2.552,166,1.194,167,1,172,2.828,173,1.43,174,2.148,175,2.552,195,2.842,225,3.405,443,2.148,863,3.773,1055,3.405,1072,3.773,1090,2.828,1196,4.801,1200,3.197,1202,3.773,1204,3.197,1206,3.197,1208,3.197,1213,3.197,1218,3.197,1220,3.197,1221,3.197,1222,3.197,1223,3.197,1224,3.197,1225,3.197,1226,3.197,1227,3.197,1343,3.197,1344,5.014,1345,5.014,1346,5.014,1347,5.014,1348,5.014,1349,3.758,1350,3.758,1351,3.758,1352,3.758,1353,3.758,1354,3.758,1355,3.758,1356,3.758,1357,3.758,1358,3.758,1359,5.014,1360,3.758,1361,3.758,1362,3.758,1363,3.758,1364,3.758,1365,3.758]],["title/interfaces/UserSignup.html",[159,2.366,961,1.248]],["body/interfaces/UserSignup.html",[3,0.252,4,0.252,8,0.216,30,0.492,31,0.652,33,0.417,34,0.023,35,1.333,56,0.252,64,0.43,108,0.019,109,0.019,134,0.7,149,2.575,159,4.005,173,2.42,438,2.389,471,3.505,807,3.945,961,1.736,962,2.568,1229,3.648,1230,3.945,1231,4.492,1232,4.124,1233,4.124,1234,4.124,1237,4.124,1309,4.124,1366,4.124]],["title/components/UserSignupComponent.html",[0,0.011,21,0.641]],["body/components/UserSignupComponent.html",[0,0.011,1,0.287,2,0.507,3,0.081,4,0.081,5,0.326,6,0.326,7,0.326,8,0.069,10,0.251,11,0.673,12,1.773,13,1.357,14,1.357,16,0.416,17,0.538,18,0.54,20,0.287,21,0.708,22,0.287,23,0.287,24,0.287,26,0.54,28,0.54,30,0.158,31,0.286,33,0.315,34,0.024,36,0.896,37,0.784,39,0.779,41,0.494,42,0.144,43,0.594,48,4.573,52,0.719,56,0.081,57,0.158,58,0.326,59,0.54,60,0.54,61,0.326,62,0.804,63,0.326,64,0.393,65,0.326,66,0.287,67,0.326,68,0.287,69,0.326,70,0.287,71,0.326,72,0.287,73,0.326,74,0.326,75,0.287,76,0.326,77,0.54,78,0.287,79,0.326,80,0.287,81,0.326,82,0.326,83,0.287,84,0.326,85,0.326,86,0.287,87,0.326,88,0.326,89,0.287,90,0.326,91,0.287,92,0.251,93,0.54,94,0.287,95,0.326,96,0.287,97,0.326,98,0.326,99,0.287,100,0.326,101,0.287,102,0.632,103,0.287,104,0.326,105,0.649,106,0.326,107,0.326,108,0.008,109,0.008,111,1.378,115,0.388,116,1.477,123,0.507,130,1.632,131,1.773,133,0.497,134,0.336,139,0.691,142,1.153,149,2.312,157,2.436,164,2.283,173,2.522,177,1.223,228,3.877,233,2.039,234,1.661,247,0.673,248,0.826,258,0.892,283,1.477,285,3.122,292,1.369,297,1.755,298,1.755,327,1.891,368,1.945,431,2.118,438,1.558,453,2.199,454,2.199,455,2.199,471,2.699,519,2.247,520,1.059,580,1.984,581,2.347,609,1.477,612,1.945,618,2.895,619,3.274,620,3.274,621,2.895,622,0.968,623,2.053,625,1.275,627,3.082,636,2.613,637,2.895,642,2.783,643,2.438,644,0.673,647,1.174,650,1.945,652,2.199,653,2.199,654,2.199,655,1.275,656,1.275,657,1.275,658,1.275,659,4.217,661,1.174,662,1.327,663,1.327,671,2.199,673,2.199,677,3.474,679,3.877,685,2.199,686,4.098,788,1.945,789,1.891,806,3.274,807,2.387,809,1.603,810,2.199,811,4.296,812,2.199,813,2.199,814,2.199,818,3.833,819,3.833,820,3.833,821,3.833,828,1.174,832,1.174,897,2.199,898,2.199,899,2.199,900,2.199,904,1.755,916,3.833,917,4.127,918,3.833,919,3.833,920,3.833,921,3.833,922,3.833,923,3.833,924,3.833,925,3.16,930,1.945,931,2.895,960,1.945,1144,2.199,1145,3.274,1158,1.327,1167,1.327,1230,2.387,1231,2.613,1367,5.17,1368,1.327,1369,2.584,1370,2.584,1371,3.309,1372,3.309,1373,3.309,1374,5.446,1375,5.446,1376,2.584,1377,2.584,1378,2.584,1379,2.584,1380,1.56,1381,2.584,1382,1.56,1383,1.56,1384,1.56,1385,1.56,1386,1.56,1387,1.56,1388,1.56,1389,1.56,1390,1.56,1391,3.848,1392,1.56,1393,2.584,1394,1.56,1395,1.56,1396,1.56,1397,1.56,1398,1.56,1399,1.56,1400,2.584,1401,1.56,1402,1.56,1403,1.56,1404,1.56,1405,3.848,1406,2.584,1407,1.56,1408,1.56,1409,1.56,1410,1.56,1411,1.56,1412,1.56,1413,1.56,1414,1.56,1415,1.56,1416,1.56,1417,1.56,1418,1.56,1419,1.56,1420,1.56,1421,1.56,1422,1.56,1423,1.56,1424,1.56,1425,1.56,1426,1.56,1427,1.56,1428,1.56,1429,1.56,1430,3.848,1431,1.56,1432,1.56,1433,1.56,1434,1.56,1435,1.56,1436,1.56,1437,1.56,1438,1.56,1439,1.56,1440,1.56,1441,1.56,1442,1.56,1443,1.56,1444,1.56,1445,1.56,1446,1.56,1447,1.56,1448,1.56,1449,1.56,1450,1.56,1451,1.56,1452,1.56,1453,2.584,1454,2.584,1455,2.584,1456,1.56,1457,1.56,1458,1.56,1459,1.56,1460,1.56,1461,1.56,1462,1.56,1463,1.56,1464,1.56,1465,1.56,1466,1.56,1467,1.56,1468,1.56,1469,1.56,1470,1.56,1471,1.56,1472,1.56,1473,1.56,1474,1.56,1475,1.56,1476,1.56,1477,1.56,1478,1.56,1479,1.56,1480,1.56,1481,1.56,1482,1.56,1483,1.56,1484,1.56,1485,1.56,1486,1.56,1487,1.56,1488,1.56,1489,1.56,1490,1.56,1491,1.56,1492,1.56,1493,1.56,1494,1.56,1495,1.56,1496,1.56,1497,1.56,1498,1.56,1499,1.56,1500,1.56]],["title/components/UsersComponent.html",[0,0.011,103,0.641]],["body/components/UsersComponent.html",[0,0.015,1,0.508,2,0.793,3,0.144,4,0.144,5,0.577,6,0.577,7,0.577,8,0.123,10,0.445,11,1.192,12,2.424,13,1.468,14,1.468,16,0.651,17,0.565,18,0.845,20,0.508,21,0.508,22,0.508,23,0.508,24,0.508,26,0.845,28,0.845,30,0.28,31,0.447,33,0.383,34,0.024,35,0.968,36,1.112,37,1.018,39,0.854,41,0.661,42,0.256,52,1.273,56,0.144,57,0.28,58,0.577,59,0.845,60,0.845,61,0.577,62,1.099,63,0.577,64,0.378,65,0.577,66,0.508,67,0.577,68,0.508,69,0.577,70,0.508,71,0.577,72,0.508,73,0.577,74,0.577,75,0.508,76,0.577,77,0.845,78,0.508,79,0.577,80,0.508,81,0.577,82,0.577,83,0.508,84,0.577,85,0.577,86,0.508,87,0.577,88,0.577,89,0.508,90,0.577,91,0.508,92,0.445,93,0.845,94,0.508,95,0.577,96,0.508,97,0.577,98,0.577,99,0.508,100,0.577,101,0.88,102,0.619,103,0.968,104,0.577,105,0.542,106,0.577,107,0.577,108,0.013,109,0.013,115,0.608,123,0.793,126,1.714,127,2.358,133,0.718,134,0.485,139,0.791,142,1.466,166,0.878,167,0.735,177,1.285,188,1.363,219,1.141,220,1.539,221,1.745,229,2.131,230,2.002,231,2.351,245,2.002,250,1.876,251,1.363,256,1.876,262,1.539,274,1.363,302,3.117,305,2.508,337,1.579,431,2.203,438,2.369,447,1.363,458,2.745,468,1.464,512,1.579,521,1.579,625,2.358,644,1.192,655,1.363,656,1.363,657,1.363,658,1.363,742,2.508,745,3.042,925,1.714,978,2.508,1040,3.264,1109,1.876,1124,2.745,1184,2.508,1239,3.439,1240,2.508,1243,3.439,1244,3.439,1245,4.476,1246,3.439,1247,3.439,1248,3.439,1251,3.439,1255,2.351,1263,1.876,1264,2.351,1265,2.351,1266,2.351,1267,2.351,1268,2.351,1269,2.351,1270,2.351,1272,2.351,1273,2.351,1274,2.351,1275,2.351,1276,2.351,1280,2.351,1282,2.351,1283,2.079,1286,2.351,1287,2.351,1288,2.351,1289,3.439,1290,3.439,1291,3.439,1292,3.439,1293,3.439,1330,2.351,1501,2.351,1502,4.043,1503,4.043,1504,4.043,1505,2.763,1506,2.763,1507,2.763,1508,2.763,1509,2.763,1510,2.763,1511,2.763,1512,2.763,1513,2.763,1514,2.763,1515,2.763,1516,2.763,1517,2.763,1518,2.763,1519,2.763,1520,2.763]],["title/injectables/ValidationService.html",[110,1.248,789,1.992]],["body/injectables/ValidationService.html",[3,0.235,4,0.235,8,0.201,15,2.394,17,0.79,30,0.459,33,0.27,34,0.024,35,1.265,39,0.733,41,0.573,42,0.419,56,0.235,57,0.459,64,0.305,108,0.018,109,0.018,110,2.023,112,2.394,115,0.849,123,1.209,133,0.679,134,0.459,139,0.679,173,2.15,174,2.583,195,2.786,243,3.039,261,3.184,627,2.394,644,1.95,789,3.229,1230,3.504,1521,3.844,1522,5.648,1523,4.518,1524,5.648,1525,6.161,1526,4.518,1527,4.518,1528,6.161,1529,5.648,1530,4.518,1531,5.648,1532,4.518,1533,5.648,1534,4.518,1535,4.518,1536,4.518,1537,4.518,1538,5.648,1539,4.518]],["title/coverage.html",[1540,4.053]],["body/coverage.html",[0,0.023,1,0.634,8,0.153,9,2.931,20,0.634,21,0.634,22,0.634,23,0.634,24,0.634,33,0.206,34,0.023,48,2.593,66,0.634,68,0.634,70,0.634,72,0.634,75,0.634,78,0.634,80,0.634,83,0.634,86,0.634,89,0.634,91,0.634,92,0.555,94,0.634,96,0.634,99,0.634,101,0.634,102,0.381,103,0.634,108,0.015,109,0.015,110,2.252,111,1.234,113,2.931,127,1.699,129,1.825,137,2.34,144,1.825,155,2.34,159,2.34,164,1.162,218,2.931,234,1.487,295,2.931,304,2.677,305,2.138,307,2.931,308,2.931,319,2.931,430,2.931,447,3.615,460,2.931,495,2.931,496,2.931,497,3.558,523,2.931,524,2.931,525,2.931,569,2.931,575,2.34,589,2.931,607,2.931,704,2.931,728,2.931,729,2.931,730,2.931,742,2.138,743,2.931,754,2.931,775,2.931,789,1.969,961,2.252,963,2.931,974,2.931,975,2.34,976,3.558,1068,2.931,1098,2.931,1139,2.931,1140,2.931,1141,2.931,1184,2.138,1185,2.931,1186,2.931,1192,2.931,1193,2.931,1194,2.931,1228,2.931,1229,3.558,1238,2.931,1240,2.138,1263,2.34,1294,2.931,1302,2.931,1303,2.931,1308,2.931,1314,2.931,1343,2.931,1366,2.931,1367,2.931,1368,2.931,1501,2.931,1521,2.931,1540,2.931,1541,3.445,1542,3.445,1543,3.445,1544,2.931,1545,6.087,1546,2.931,1547,6.854,1548,4.728,1549,2.931,1550,2.931,1551,4.728,1552,6.44,1553,5.397,1554,3.445,1555,5.397,1556,4.728,1557,5.809,1558,3.445,1559,5.397,1560,3.445,1561,4.592,1562,2.931,1563,2.931,1564,2.931,1565,2.931,1566,2.931,1567,2.931,1568,2.931,1569,3.445,1570,3.445,1571,3.445,1572,3.445]],["title/dependencies.html",[1573,2.471,1574,3.567]],["body/dependencies.html",[34,0.023,42,0.478,43,1.966,108,0.02,109,0.02,167,1.374,534,4.394,644,2.229,826,4.394,1574,4.394,1575,7.123,1576,5.165,1577,6.128,1578,6.128,1579,5.165,1580,5.165,1581,5.165,1582,5.165,1583,5.165,1584,5.165,1585,5.165,1586,5.165,1587,5.165,1588,5.165,1589,5.165,1590,5.165,1591,5.165]],["title/index.html",[30,0.295,1283,2.186,1592,2.905]],["body/index.html",[34,0.021,38,3.252,108,0.021,109,0.021,1593,5.689]],["title/modules.html",[1594,4.053]],["body/modules.html",[34,0.021,108,0.021,109,0.021,1594,4.851]],["title/overview.html",[1595,4.053]],["body/overview.html",[2,1.099,34,0.021,108,0.021,109,0.021,112,2.967,306,3.475,426,4.214,962,2.967,1595,4.765,1596,5.6,1597,6.424]],["title/properties.html",[31,0.464,1573,2.471]],["body/properties.html",[31,0.626,34,0.022,108,0.021,109,0.021,1598,5.663,1599,5.663]],["title/miscellaneous/variables.html",[1600,2.471,1601,3.567]],["body/miscellaneous/variables.html",[11,1.835,17,0.838,30,0.431,33,0.389,34,0.024,36,1.201,37,1.051,108,0.017,109,0.017,131,2.76,151,3.107,157,2.253,186,2.887,195,2.927,203,3.617,243,2.097,261,2.097,529,5.097,581,2.76,1159,3.617,1544,3.617,1546,4.624,1549,3.617,1550,4.624,1561,5.097,1562,4.624,1563,4.624,1564,4.624,1565,4.624,1566,4.624,1567,4.624,1568,4.624,1600,3.617,1601,3.617,1602,4.252,1603,4.252,1604,5.991,1605,4.252,1606,4.252,1607,4.252,1608,4.252,1609,4.252,1610,4.252,1611,4.252,1612,4.252,1613,5.435,1614,4.252,1615,4.252,1616,4.252,1617,4.252,1618,4.252,1619,4.252,1620,4.252,1621,4.252,1622,5.991,1623,5.991,1624,5.435,1625,5.435,1626,5.991,1627,5.435,1628,5.435,1629,4.252]]],"invertedIndex":[["",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"interfaces/SignIn.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":447,"title":{},"body":{"components/ErrorComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1599,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":544,"title":{},"body":{"components/HomeComponent.html":{}}}],["0/1",{"_index":1547,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":337,"title":{},"body":{"components/DeveloperComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"pipes/PaginationPipe.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["100",{"_index":900,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserSignupComponent.html":{}}}],["1000",{"_index":449,"title":{},"body":{"components/ErrorComponent.html":{}}}],["13",{"_index":898,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserSignupComponent.html":{}}}],["17.18.0",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["17.3.0",{"_index":1575,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":760,"title":{},"body":{"components/PricingComponent.html":{}}}],["2",{"_index":422,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["2.3.0",{"_index":1589,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":1596,"title":{},"body":{"overview.html":{}}}],["3",{"_index":424,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["4",{"_index":426,"title":{},"body":{"components/DeveloperComponent.html":{},"pipes/PaginationPipe.html":{},"overview.html":{}}}],["5",{"_index":428,"title":{},"body":{"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"pipes/PaginationPipe.html":{}}}],["5.3.3",{"_index":1584,"title":{},"body":{"dependencies.html":{}}}],["50px",{"_index":543,"title":{},"body":{"components/HomeComponent.html":{}}}],["55",{"_index":474,"title":{},"body":{"components/FooterComponent.html":{}}}],["55488",{"_index":473,"title":{},"body":{"components/FooterComponent.html":{}}}],["5589",{"_index":472,"title":{},"body":{"components/FooterComponent.html":{}}}],["6",{"_index":1597,"title":{},"body":{"overview.html":{}}}],["6.5.2",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":925,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["9",{"_index":813,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserSignupComponent.html":{}}}],["_activatedroute",{"_index":235,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["_activatedroute:activatedroute",{"_index":259,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["_activateroute",{"_index":1147,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["_autehnticationservice",{"_index":502,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["_autehnticationservice:authenticationservice",{"_index":511,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["_authenticationservice",{"_index":232,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/FooterComponent.html":{},"components/ProjectItemComponent.html":{}}}],["_authenticationservice:authenticationservice",{"_index":257,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/FooterComponent.html":{}}}],["_authservice",{"_index":623,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/UserSignupComponent.html":{}}}],["_authservice:authenticationservice",{"_index":718,"title":{},"body":{"components/NavbarComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{}}}],["_globalloadercounter",{"_index":590,"title":{},"body":{"injectables/LoaderService.html":{}}}],["_globalloadercounter:number",{"_index":599,"title":{},"body":{"injectables/LoaderService.html":{}}}],["_http",{"_index":135,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["_id",{"_index":964,"title":{},"body":{"interfaces/Project.html":{},"interfaces/User.html":{}}}],["_id?:string",{"_index":971,"title":{},"body":{"interfaces/Project.html":{},"interfaces/User.html":{}}}],["_loader",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_loader.setloader(false",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_loader.setloader(true",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_loaderservice",{"_index":577,"title":{},"body":{"components/LoaderComponent.html":{}}}],["_loaderservice:loaderservice",{"_index":585,"title":{},"body":{"components/LoaderComponent.html":{}}}],["_messageservice",{"_index":625,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["_projectservice",{"_index":233,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/UserSignupComponent.html":{}}}],["_projectservice:projectservice",{"_index":258,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/ProjectItemComponent.html":{},"components/UserSignupComponent.html":{}}}],["_router",{"_index":130,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/ErrorComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserSignupComponent.html":{}}}],["_router.navigatebyurl('/error",{"_index":192,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_router.navigatebyurl('/home",{"_index":448,"title":{},"body":{"components/ErrorComponent.html":{}}}],["_router:router",{"_index":179,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/ErrorComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/NavbarComponent.html":{}}}],["_tenantservice",{"_index":128,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{}}}],["_tenantservice.getbyid(id).subscribe",{"_index":193,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_tenantservice:tenantservice",{"_index":178,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{}}}],["_unitofwork.customerrentcarrepo.add(res",{"_index":352,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["_unitofwork.customerrentcarrepo.delete(rent",{"_index":362,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["_unitofwork.customerrentcarrepo.getbystringid(id",{"_index":361,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["_unitofwork.customerrentcarrepo.update(rent",{"_index":357,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["_unitofwork.savechanges",{"_index":353,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["_userservice",{"_index":126,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/ProfileComponent.html":{},"components/UserItemComponent.html":{},"components/UsersComponent.html":{}}}],["_userservice.getbyid(id).subscribe",{"_index":187,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["_userservice:userservice",{"_index":256,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/ProfileComponent.html":{},"components/UserItemComponent.html":{},"components/UsersComponent.html":{}}}],["_validationservice",{"_index":788,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["_validationservice:validationservice",{"_index":832,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["abstractcontrol",{"_index":1529,"title":{},"body":{"injectables/ValidationService.html":{}}}],["access",{"_index":488,"title":{},"body":{"components/FooterComponent.html":{}}}],["account",{"_index":685,"title":{},"body":{"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["accusantium",{"_index":557,"title":{},"body":{"components/HomeComponent.html":{}}}],["activatedroute",{"_index":236,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["actual_component",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["ad",{"_index":899,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserSignupComponent.html":{}}}],["add",{"_index":1123,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["add(customerrentcardto",{"_index":345,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["added",{"_index":1117,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["adding",{"_index":1120,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["addproject",{"_index":1070,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{}}}],["addproject(formgroup",{"_index":1103,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["addproject(project",{"_index":1074,"title":{},"body":{"injectables/ProjectService.html":{}}}],["addproject(project:project):observable",{"_index":1092,"title":{},"body":{"injectables/ProjectService.html":{}}}],["addprojectform",{"_index":1101,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["addprojectform.get('callbackurl')?.touched",{"_index":1130,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["addprojectform.get('name')?.touched",{"_index":1127,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["addprojectform.get(\\'callbackurl\\')?.touched",{"_index":1137,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["addprojectform.get(\\'name\\')?.touched",{"_index":1134,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["address",{"_index":292,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/NotFoundComponent.html":{},"components/ProfileComponent.html":{},"interfaces/TenantSignup.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{}}}],["address?:string",{"_index":1235,"title":{},"body":{"interfaces/TenantSignup.html":{}}}],["addusertoproject",{"_index":1345,"title":{},"body":{"injectables/UserService.html":{}}}],["addusertoproject(projectid",{"_index":1349,"title":{},"body":{"injectables/UserService.html":{}}}],["addusertoproject(projectid:string):observable",{"_index":1364,"title":{},"body":{"injectables/UserService.html":{}}}],["adipisicing",{"_index":377,"title":{},"body":{"components/DeveloperComponent.html":{},"components/HomeComponent.html":{}}}],["admin",{"_index":186,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["admin.guard.ts",{"_index":1562,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["age",{"_index":807,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{}}}],["age?:number",{"_index":1309,"title":{},"body":{"interfaces/User.html":{},"interfaces/UserSignup.html":{}}}],["agree",{"_index":290,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["alias",{"_index":554,"title":{},"body":{"components/HomeComponent.html":{}}}],["aliquam",{"_index":382,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["aliquid",{"_index":563,"title":{},"body":{"components/HomeComponent.html":{}}}],["already",{"_index":1453,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["amet",{"_index":375,"title":{},"body":{"components/DeveloperComponent.html":{},"components/HomeComponent.html":{}}}],["analytics",{"_index":767,"title":{},"body":{"components/PricingComponent.html":{}}}],["angular",{"_index":1593,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":534,"title":{},"body":{"components/HomeComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":826,"title":{},"body":{"components/ProfileComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":165,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1576,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":644,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1577,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/ErrorComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{},"dependencies.html":{}}}],["animate",{"_index":531,"title":{},"body":{"components/HomeComponent.html":{}}}],["animate('2s",{"_index":538,"title":{},"body":{"components/HomeComponent.html":{}}}],["animations",{"_index":536,"title":{},"body":{"components/HomeComponent.html":{}}}],["animi",{"_index":561,"title":{},"body":{"components/HomeComponent.html":{}}}],["aperiam",{"_index":404,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["app.component.css",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asdasdasdasd",{"_index":370,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["asperiores",{"_index":387,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["assets/default.png",{"_index":802,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserItemComponent.html":{}}}],["assingusertoproject(projid:string",{"_index":1091,"title":{},"body":{"injectables/ProjectService.html":{}}}],["async",{"_index":343,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["atque",{"_index":401,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["autem",{"_index":567,"title":{},"body":{"components/HomeComponent.html":{}}}],["authentication",{"_index":484,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["authenticationinterceptor",{"_index":1546,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authenticationservice",{"_index":111,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/UserSignupComponent.html":{},"coverage.html":{}}}],["authgate",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["authgate.gmail.com",{"_index":475,"title":{},"body":{"components/FooterComponent.html":{}}}],["authorize",{"_index":222,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["authorize'},{'name",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["authorize.component.css",{"_index":224,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["authorize.component.html",{"_index":223,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["authorizecomponent",{"_index":66,"title":{"components/AuthorizeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["authservice",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["await",{"_index":346,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["badrequest",{"_index":332,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["baseurl",{"_index":114,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["baseurl:string",{"_index":175,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["bearer",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beatae",{"_index":379,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["behaviorsubject",{"_index":163,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LoaderService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["behaviorsubject(false",{"_index":598,"title":{},"body":{"injectables/LoaderService.html":{}}}],["between",{"_index":897,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserSignupComponent.html":{}}}],["boolean",{"_index":580,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{}}}],["bootstrap",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["broken",{"_index":739,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["browser",{"_index":1578,"title":{},"body":{"dependencies.html":{}}}],["business",{"_index":762,"title":{},"body":{"components/PricingComponent.html":{}}}],["buttonmodule",{"_index":979,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{}}}],["callback",{"_index":498,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{}}}],["callback'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["callback.component.css",{"_index":500,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["callback.component.html",{"_index":499,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["callback.component.ts",{"_index":497,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"coverage.html":{}}}],["callback.component.ts:15",{"_index":507,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["callback.component.ts:16",{"_index":508,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["callback.component.ts:17",{"_index":503,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["callback.component.ts:19",{"_index":506,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["callback.component.ts:27",{"_index":505,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["callback.component.ts:42",{"_index":504,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["callback/github",{"_index":496,"title":{},"body":{"components/GithubCallbackComponent.html":{},"coverage.html":{}}}],["callback/google",{"_index":524,"title":{},"body":{"components/GoogleCallbackComponent.html":{},"coverage.html":{}}}],["callbackurl",{"_index":965,"title":{},"body":{"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{}}}],["canactivatefn",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":227,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["change",{"_index":907,"title":{},"body":{"components/ProfileComponent.html":{}}}],["changes",{"_index":1005,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/UserItemComponent.html":{}}}],["character",{"_index":922,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["chat",{"_index":769,"title":{},"body":{"components/PricingComponent.html":{}}}],["choose",{"_index":773,"title":{},"body":{"components/PricingComponent.html":{}}}],["class",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["clearinterval(this.sub",{"_index":451,"title":{},"body":{"components/ErrorComponent.html":{}}}],["client",{"_index":1049,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["clientid",{"_index":966,"title":{},"body":{"interfaces/Project.html":{}}}],["clientsecret",{"_index":967,"title":{},"body":{"interfaces/Project.html":{}}}],["close",{"_index":1132,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["code",{"_index":323,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["code:string",{"_index":365,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["commodi",{"_index":407,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["commonmodule",{"_index":776,"title":{},"body":{"components/ProfileComponent.html":{}}}],["commonmodule,reactiveformsmodule,dialogmodule",{"_index":829,"title":{},"body":{"components/ProfileComponent.html":{}}}],["complete",{"_index":1035,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["complete:()=>{this.deletedialogvisible=false",{"_index":1042,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"overview.html":{}}}],["components/authorization/user",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["components/core/footer/footer.component",{"_index":45,"title":{},"body":{"components/AppComponent.html":{}}}],["components/core/loader/loader.component",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["components/core/navbar/navbar.component",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["components/pricing/pricing.component",{"_index":44,"title":{},"body":{"components/AppComponent.html":{}}}],["confirm",{"_index":228,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["confirmnewpassword",{"_index":822,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/UpdatePassword.html":{}}}],["confirmnewpassword:string",{"_index":1306,"title":{},"body":{"interfaces/UpdatePassword.html":{}}}],["confirmpassword",{"_index":1230,"title":{},"body":{"interfaces/TenantSignup.html":{},"interfaces/User.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"injectables/ValidationService.html":{}}}],["confirmpassword:string",{"_index":1237,"title":{},"body":{"interfaces/TenantSignup.html":{},"interfaces/UserSignup.html":{}}}],["confirmpasswordcontrol",{"_index":1533,"title":{},"body":{"injectables/ValidationService.html":{}}}],["confirmpasswordcontrol.seterrors",{"_index":1537,"title":{},"body":{"injectables/ValidationService.html":{}}}],["confirmpasswordcontrol.seterrors(null",{"_index":1539,"title":{},"body":{"injectables/ValidationService.html":{}}}],["confirmpasswordcontrol.value",{"_index":1536,"title":{},"body":{"injectables/ValidationService.html":{}}}],["confirmpasswordcontrolname",{"_index":1525,"title":{},"body":{"injectables/ValidationService.html":{}}}],["consectetur",{"_index":376,"title":{},"body":{"components/DeveloperComponent.html":{},"components/HomeComponent.html":{}}}],["console.log(err",{"_index":275,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{},"components/UserItemComponent.html":{}}}],["console.log(form.value",{"_index":876,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["console.log(res",{"_index":281,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{},"components/UserItemComponent.html":{}}}],["console.log(this._authenticationservice.user.value",{"_index":260,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["console.log(this._authservice.user.value._id",{"_index":835,"title":{},"body":{"components/ProfileComponent.html":{}}}],["console.log(this._globalloadercounter,this.loading.value",{"_index":606,"title":{},"body":{"injectables/LoaderService.html":{}}}],["console.log(this.token",{"_index":1163,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log(this.user",{"_index":834,"title":{},"body":{"components/ProfileComponent.html":{}}}],["const",{"_index":261,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/NavbarComponent.html":{},"pipes/PaginationPipe.html":{},"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{},"pipes/TimesPipe.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":123,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["constructor(_authenticationservice",{"_index":464,"title":{},"body":{"components/FooterComponent.html":{},"components/ProjectItemComponent.html":{}}}],["constructor(_authservice",{"_index":709,"title":{},"body":{"components/NavbarComponent.html":{},"components/PricingComponent.html":{}}}],["constructor(_http",{"_index":124,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["constructor(_loaderservice",{"_index":574,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(_messageservice",{"_index":622,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{}}}],["constructor(_projectservice",{"_index":501,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["constructor(_router",{"_index":435,"title":{},"body":{"components/ErrorComponent.html":{}}}],["constructor(_tenantservice",{"_index":1249,"title":{},"body":{"components/TenantsComponent.html":{}}}],["constructor(_userservice",{"_index":231,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/UsersComponent.html":{}}}],["constructor(_validationservice",{"_index":1146,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["constructor(private",{"_index":443,"title":{},"body":{"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/LoaderComponent.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["contain",{"_index":916,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["continue",{"_index":673,"title":{},"body":{"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["continuing",{"_index":289,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["copyclientid",{"_index":986,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["copyclientsecret",{"_index":987,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["copycode",{"_index":324,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["copyright",{"_index":492,"title":{},"body":{"components/FooterComponent.html":{}}}],["corporis",{"_index":555,"title":{},"body":{"components/HomeComponent.html":{}}}],["coverage",{"_index":1540,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":354,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["createdat",{"_index":968,"title":{},"body":{"interfaces/Project.html":{}}}],["createdat?:date",{"_index":972,"title":{},"body":{"interfaces/Project.html":{}}}],["cumque",{"_index":419,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["cureentpage",{"_index":1243,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["cureentpage:number=1",{"_index":1275,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["currently",{"_index":1122,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["dashboard",{"_index":296,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["dashboard'},{'name",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["dashboard.component.css",{"_index":300,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboard.component.html",{"_index":299,"title":{},"body":{"components/DashboardComponent.html":{}}}],["dashboardcomponent",{"_index":68,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["data",{"_index":873,"title":{},"body":{"components/ProfileComponent.html":{}}}],["date",{"_index":970,"title":{},"body":{"interfaces/Project.html":{}}}],["datetime.now.tostring(\"hhmmssddmmyyyy",{"_index":350,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["debitis",{"_index":389,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["default",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["delectus",{"_index":405,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["delete",{"_index":1055,"title":{},"body":{"components/ProjectItemComponent.html":{},"injectables/TenantService.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{}}}],["delete(string",{"_index":360,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["delete(userid",{"_index":1200,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["delete(userid:string):observable",{"_index":1221,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["deleted",{"_index":1040,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/TenantsComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"components/UsersComponent.html":{}}}],["deleted\")return",{"_index":316,"title":{},"body":{"pipes/DeleteFilterPipe.html":{}}}],["deleted?:boolean",{"_index":1312,"title":{},"body":{"interfaces/User.html":{}}}],["deletedialogvisible",{"_index":982,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["deletefilter",{"_index":309,"title":{},"body":{"pipes/DeleteFilterPipe.html":{}}}],["deletefilter:deletevalue",{"_index":1290,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["deletefilterpipe",{"_index":305,"title":{"pipes/DeleteFilterPipe.html":{}},"body":{"pipes/DeleteFilterPipe.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["deleteproject",{"_index":988,"title":{},"body":{"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{}}}],["deleteproject(projectid",{"_index":999,"title":{},"body":{"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{}}}],["deleteproject(projectid:string",{"_index":1037,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["deleteproject(projectid:string):observable",{"_index":1096,"title":{},"body":{"injectables/ProjectService.html":{}}}],["deleteuser",{"_index":1316,"title":{},"body":{"components/UserItemComponent.html":{}}}],["deleteuser(userid",{"_index":1320,"title":{},"body":{"components/UserItemComponent.html":{}}}],["deleteuser(userid:string|undefined",{"_index":1327,"title":{},"body":{"components/UserItemComponent.html":{}}}],["deletevalue",{"_index":1244,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["deletevalue:string=\"all",{"_index":1276,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["deleting",{"_index":1041,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["deliver",{"_index":546,"title":{},"body":{"components/HomeComponent.html":{}}}],["dependencies",{"_index":1574,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["detail",{"_index":658,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["developer",{"_index":320,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["developer'},{'name",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["developer.component.css",{"_index":322,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["developer.component.html",{"_index":321,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["developercomponent",{"_index":70,"title":{"components/DeveloperComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["developers",{"_index":367,"title":{},"body":{"components/DeveloperComponent.html":{},"components/NavbarComponent.html":{}}}],["development",{"_index":480,"title":{},"body":{"components/FooterComponent.html":{}}}],["dialogmodule",{"_index":608,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/UserItemComponent.html":{}}}],["dialogmodule,projectitemcomponent",{"_index":1325,"title":{},"body":{"components/UserItemComponent.html":{}}}],["dialogmodule,reactiveformsmodule,routerlink,routerlinkactive",{"_index":646,"title":{},"body":{"components/LoginComponent.html":{}}}],["digit",{"_index":920,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["dignissimos",{"_index":396,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["directive",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["directives",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["distinctio",{"_index":420,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["documentation",{"_index":1541,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":930,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["doesn\\'t",{"_index":960,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["dolor",{"_index":373,"title":{},"body":{"components/DeveloperComponent.html":{},"components/HomeComponent.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["don't",{"_index":684,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":699,"title":{},"body":{"components/LoginComponent.html":{}}}],["dto",{"_index":333,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["ducimus",{"_index":393,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["dynamic",{"_index":1579,"title":{},"body":{"dependencies.html":{}}}],["ea",{"_index":413,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["eaque",{"_index":388,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["edit",{"_index":905,"title":{},"body":{"components/ProfileComponent.html":{}}}],["efficient",{"_index":548,"title":{},"body":{"components/HomeComponent.html":{}}}],["element",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["elementref",{"_index":1019,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{}}}],["elit",{"_index":378,"title":{},"body":{"components/DeveloperComponent.html":{},"components/HomeComponent.html":{}}}],["email",{"_index":149,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"interfaces/SignIn.html":{},"interfaces/TenantSignup.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{}}}],["email:string",{"_index":1234,"title":{},"body":{"interfaces/TenantSignup.html":{},"interfaces/UserSignup.html":{}}}],["empowers",{"_index":486,"title":{},"body":{"components/FooterComponent.html":{}}}],["endindex",{"_index":751,"title":{},"body":{"pipes/PaginationPipe.html":{}}}],["eos",{"_index":400,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["err",{"_index":654,"title":{},"body":{"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["error",{"_index":431,"title":{},"body":{"components/ErrorComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["error'},{'name",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["error.component.css",{"_index":433,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":432,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error:(err",{"_index":274,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UsersComponent.html":{}}}],["error:err",{"_index":190,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["errorcomponent",{"_index":72,"title":{"components/ErrorComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["et",{"_index":406,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["event",{"_index":800,"title":{},"body":{"components/ProfileComponent.html":{}}}],["event.target.files[0",{"_index":856,"title":{},"body":{"components/ProfileComponent.html":{}}}],["exercitationem",{"_index":559,"title":{},"body":{"components/HomeComponent.html":{}}}],["experience",{"_index":483,"title":{},"body":{"components/FooterComponent.html":{}}}],["explicabo",{"_index":415,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["export",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"interfaces/SignIn.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["false",{"_index":581,"title":{},"body":{"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"miscellaneous/variables.html":{}}}],["fifth",{"_index":429,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"interfaces/SignIn.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{}}}],["filter.pipe",{"_index":1269,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["filter.pipe.ts",{"_index":308,"title":{},"body":{"pipes/DeleteFilterPipe.html":{},"coverage.html":{}}}],["filter.pipe.ts:10",{"_index":312,"title":{},"body":{"pipes/DeleteFilterPipe.html":{}}}],["finalize",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["first",{"_index":368,"title":{},"body":{"components/DeveloperComponent.html":{},"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["footer",{"_index":461,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["footer.component.css",{"_index":463,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":462,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":23,"title":{"components/FooterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["footercomponent,loadercomponent,toastmodule",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["for(i",{"_index":1292,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["for(item",{"_index":1124,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UsersComponent.html":{}}}],["forgot",{"_index":683,"title":{},"body":{"components/LoginComponent.html":{}}}],["form",{"_index":146,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["form.get('token')?.setvalue(this.token",{"_index":1165,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["formcontrol",{"_index":642,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["formcontrol('',[validators.min(13),validators.max(100",{"_index":1393,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["formcontrol('',[validators.required",{"_index":1017,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{}}}],["formcontrol('',[validators.required,validators.email",{"_index":637,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/UserSignupComponent.html":{}}}],["formcontrol('',[validators.required,validators.pattern(/^(?=.*[a",{"_index":818,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["formcontrol('',validators.pattern(/^(?:\\+20|0)?1[0125]\\d{8",{"_index":806,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserSignupComponent.html":{}}}],["formcontrol('',validators.pattern(/^www\\.[a",{"_index":810,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserSignupComponent.html":{}}}],["formcontrol('',validators.required",{"_index":636,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["formcontrol(15,[validators.min(13),validators.max(100",{"_index":808,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formdata",{"_index":857,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formdata.append('image',file",{"_index":858,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formgroup",{"_index":627,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{},"injectables/ValidationService.html":{}}}],["formgroup.get(confirmpasswordcontrolname",{"_index":1534,"title":{},"body":{"injectables/ValidationService.html":{}}}],["formgroup.get(passwordcontrolname",{"_index":1532,"title":{},"body":{"injectables/ValidationService.html":{}}}],["formgroup.valid",{"_index":650,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectsComponent.html":{},"components/UserSignupComponent.html":{}}}],["formgroup.value).subscribe",{"_index":1403,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["formsmodule",{"_index":1239,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["fortawesome/fontawesome",{"_index":1580,"title":{},"body":{"dependencies.html":{}}}],["forth",{"_index":427,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["found",{"_index":731,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["found.component.css",{"_index":733,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.html",{"_index":732,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["found.component.ts",{"_index":730,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["found/not",{"_index":729,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["free",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["fuga",{"_index":558,"title":{},"body":{"components/HomeComponent.html":{}}}],["function",{"_index":1300,"title":{},"body":{"pipes/TimesPipe.html":{}}}],["getall",{"_index":1196,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["getall():observable",{"_index":1225,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["getallpertenant",{"_index":1071,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getallpertenant():observable",{"_index":1089,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getbyid",{"_index":1072,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["getbyid(projid",{"_index":1078,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getbyid(projid:string):observable",{"_index":1087,"title":{},"body":{"injectables/ProjectService.html":{}}}],["getbyid(string",{"_index":329,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["getbyid(userid",{"_index":1204,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["getbyid(userid:string):observable",{"_index":1223,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["getcarrentdto(rent",{"_index":334,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["getcustomerrentcarmodel(dto",{"_index":347,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["getting",{"_index":1283,"title":{"index.html":{}},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["github",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["githubcallbackcomponent",{"_index":75,"title":{"components/GithubCallbackComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["google",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["googlecallbackcomponent",{"_index":78,"title":{"components/GoogleCallbackComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["hashtags",{"_index":771,"title":{},"body":{"components/PricingComponent.html":{}}}],["headers",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":1454,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["hic",{"_index":395,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["home",{"_index":457,"title":{},"body":{"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/NavbarComponent.html":{}}}],["home'},{'name",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["home.component.css",{"_index":527,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":526,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":80,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["html",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["http://localhost:3000/auth",{"_index":161,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["http://localhost:3000/projects",{"_index":1082,"title":{},"body":{"injectables/ProjectService.html":{}}}],["http://localhost:3000/tenants",{"_index":1214,"title":{},"body":{"injectables/TenantService.html":{}}}],["http://localhost:3000/users",{"_index":1359,"title":{},"body":{"injectables/UserService.html":{}}}],["httpclient",{"_index":125,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["httpdelete",{"_index":359,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["httpget(\"{id",{"_index":326,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["httpinterceptorfn",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httppatch",{"_index":355,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["httppost",{"_index":342,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["iactionresult",{"_index":328,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["id",{"_index":182,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DeveloperComponent.html":{},"components/ProjectItemComponent.html":{}}}],["identifier",{"_index":1542,"title":{},"body":{"coverage.html":{}}}],["if(!isloggedin",{"_index":727,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(!isuser",{"_index":1430,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(!localstorage.getitem('token",{"_index":267,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["if(!user.deleted",{"_index":1333,"title":{},"body":{"components/UserItemComponent.html":{}}}],["if((loginform.get('password')?.errors",{"_index":680,"title":{},"body":{"components/LoginComponent.html":{}}}],["if((loginform.get(\\'password\\')?.errors",{"_index":696,"title":{},"body":{"components/LoginComponent.html":{}}}],["if((role",{"_index":185,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["if((this.user.role",{"_index":867,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(addprojectform.get('callbackurl')?.errors",{"_index":1129,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["if(addprojectform.get('callbackurl')?.geterror('required",{"_index":1131,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["if(addprojectform.get('name')?.errors",{"_index":1126,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["if(addprojectform.get('name')?.geterror('required",{"_index":1128,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["if(addprojectform.get(\\'callbackurl\\')?.errors",{"_index":1136,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["if(addprojectform.get(\\'callbackurl\\')?.geterror(\\'required",{"_index":1138,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["if(addprojectform.get(\\'name\\')?.errors",{"_index":1133,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["if(addprojectform.get(\\'name\\')?.geterror(\\'required",{"_index":1135,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["if(authservice.user.value.role",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(form.valid",{"_index":870,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["if(formgroup.valid",{"_index":664,"title":{},"body":{"components/LoginComponent.html":{},"components/ProjectItemComponent.html":{}}}],["if(isloading",{"_index":588,"title":{},"body":{"components/LoaderComponent.html":{}}}],["if(isloggedin",{"_index":723,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(isuser",{"_index":1405,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(localstorage.getitem('userid",{"_index":180,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["if(loginform.get('email')?.errors",{"_index":674,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get('email')?.geterror('email",{"_index":678,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get('email')?.geterror('required",{"_index":676,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get('password')?.geterror('required",{"_index":682,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'email\\')?.errors",{"_index":692,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'email\\')?.geterror(\\'email",{"_index":695,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'email\\')?.geterror(\\'required",{"_index":694,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(loginform.get(\\'password\\')?.geterror(\\'required",{"_index":698,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(projectid",{"_index":1038,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["if(projectsarr.length",{"_index":1121,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["if(registertenantform.get('confirmpassword')?.errors",{"_index":1442,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('confirmpassword')?.geterror('passwordmismatch",{"_index":1446,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('confirmpassword')?.geterror('pattern",{"_index":1445,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('confirmpassword')?.geterror('required",{"_index":1444,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('email')?.errors",{"_index":1434,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('email')?.geterror('email",{"_index":1437,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('email')?.geterror('required",{"_index":1436,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('name')?.errors",{"_index":1431,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('name')?.geterror('required",{"_index":1433,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('password')?.errors",{"_index":1438,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('password')?.geterror('pattern",{"_index":1441,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('password')?.geterror('required",{"_index":1440,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('phone')?.errors",{"_index":1447,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('phone')?.geterror('pattern",{"_index":1449,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('website')?.errors",{"_index":1450,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get('website')?.geterror('pattern",{"_index":1452,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'confirmpassword\\')?.errors",{"_index":1490,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'confirmpassword\\')?.geterror(\\'passwordmismatch",{"_index":1494,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'confirmpassword\\')?.geterror(\\'pattern",{"_index":1493,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'confirmpassword\\')?.geterror(\\'required",{"_index":1492,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'email\\')?.errors",{"_index":1482,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'email\\')?.geterror(\\'email",{"_index":1485,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'email\\')?.geterror(\\'required",{"_index":1484,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'name\\')?.errors",{"_index":1479,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'name\\')?.geterror(\\'required",{"_index":1481,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'password\\')?.errors",{"_index":1486,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'password\\')?.geterror(\\'pattern",{"_index":1489,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'password\\')?.geterror(\\'required",{"_index":1488,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'phone\\')?.errors",{"_index":1495,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'phone\\')?.geterror(\\'pattern",{"_index":1497,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'website\\')?.errors",{"_index":1498,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registertenantform.get(\\'website\\')?.geterror(\\'pattern",{"_index":1500,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('age')?.errors",{"_index":1426,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('age')?.geterror('min",{"_index":1428,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('confirmpassword')?.errors",{"_index":1418,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('confirmpassword')?.geterror('passwordmismatch",{"_index":1422,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('confirmpassword')?.geterror('pattern",{"_index":1421,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('confirmpassword')?.geterror('required",{"_index":1420,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('email')?.errors",{"_index":1410,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('email')?.geterror('email",{"_index":1413,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('email')?.geterror('required",{"_index":1412,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('name')?.errors",{"_index":1407,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('name')?.geterror('required",{"_index":1409,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('password')?.errors",{"_index":1414,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('password')?.geterror('pattern",{"_index":1417,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('password')?.geterror('required",{"_index":1416,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('phone')?.errors",{"_index":1423,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get('phone')?.geterror('pattern",{"_index":1425,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'age\\')?.errors",{"_index":1475,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'age\\')?.geterror(\\'min",{"_index":1477,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'confirmpassword\\')?.errors",{"_index":1467,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'confirmpassword\\')?.geterror(\\'passwordmismatch",{"_index":1471,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'confirmpassword\\')?.geterror(\\'pattern",{"_index":1470,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'confirmpassword\\')?.geterror(\\'required",{"_index":1469,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'email\\')?.errors",{"_index":1459,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'email\\')?.geterror(\\'email",{"_index":1462,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'email\\')?.geterror(\\'required",{"_index":1461,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'name\\')?.errors",{"_index":1456,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'name\\')?.geterror(\\'required",{"_index":1458,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'password\\')?.errors",{"_index":1463,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'password\\')?.geterror(\\'pattern",{"_index":1466,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'password\\')?.geterror(\\'required",{"_index":1465,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'phone\\')?.errors",{"_index":1472,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(registeruserform.get(\\'phone\\')?.geterror(\\'pattern",{"_index":1474,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["if(res",{"_index":348,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["if(res?._id",{"_index":720,"title":{},"body":{"components/NavbarComponent.html":{}}}],["if(resetpassword.get('confirmnewpassword')?.errors",{"_index":1172,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpassword.get('confirmnewpassword')?.geterror('passwordmismatch",{"_index":1175,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpassword.get('confirmnewpassword')?.geterror('required",{"_index":1174,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpassword.get('newpassword')?.errors",{"_index":1168,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpassword.get('newpassword')?.geterror('pattern",{"_index":1171,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpassword.get('newpassword')?.geterror('required",{"_index":1170,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpassword.get(\\'confirmnewpassword\\')?.errors",{"_index":1180,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpassword.get(\\'confirmnewpassword\\')?.geterror(\\'passwordmismatch",{"_index":1183,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpassword.get(\\'confirmnewpassword\\')?.geterror(\\'required",{"_index":1182,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpassword.get(\\'newpassword\\')?.errors",{"_index":1176,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpassword.get(\\'newpassword\\')?.geterror(\\'pattern",{"_index":1179,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpassword.get(\\'newpassword\\')?.geterror(\\'required",{"_index":1178,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["if(resetpasswordform.get('email')?.errors",{"_index":687,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(resetpasswordform.get('email')?.geterror('email",{"_index":690,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(resetpasswordform.get('email')?.geterror('required",{"_index":689,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(resetpasswordform.get(\\'email\\')?.errors",{"_index":700,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(resetpasswordform.get(\\'email\\')?.geterror(\\'email",{"_index":703,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(resetpasswordform.get(\\'email\\')?.geterror(\\'required",{"_index":702,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this._globalloadercounter==0",{"_index":604,"title":{},"body":{"injectables/LoaderService.html":{}}}],["if(this._globalloadercounter>0",{"_index":601,"title":{},"body":{"injectables/LoaderService.html":{}}}],["if(this._projectservice.projectid",{"_index":519,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["if(this.project.clientid",{"_index":1045,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["if(this.project.clientsecret",{"_index":1043,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["if(this.projectid",{"_index":271,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["if(this.showclientsecret",{"_index":1052,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["if(this.sub",{"_index":450,"title":{},"body":{"components/ErrorComponent.html":{}}}],["if(this.timer",{"_index":446,"title":{},"body":{"components/ErrorComponent.html":{}}}],["if(this.updateinfoform.enabled",{"_index":850,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(this.user.image?.length",{"_index":1326,"title":{},"body":{"components/UserItemComponent.html":{}}}],["if(this.user.role",{"_index":844,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(this.user?.image?.length",{"_index":837,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(token",{"_index":203,"title":{},"body":{"injectables/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["if(updateinfoform.get('age')?.errors",{"_index":893,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get('age')?.geterror('min",{"_index":895,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get('email')?.errors",{"_index":885,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get('email')?.geterror('email",{"_index":888,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get('email')?.geterror('required",{"_index":887,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get('name')?.errors",{"_index":882,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get('name')?.geterror('required",{"_index":884,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get('phone')?.errors",{"_index":889,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get('phone')?.geterror('pattern",{"_index":891,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get('website')?.errors",{"_index":901,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get('website')?.geterror('pattern",{"_index":903,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get(\\'age\\')?.errors",{"_index":942,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get(\\'age\\')?.geterror(\\'min",{"_index":944,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get(\\'email\\')?.errors",{"_index":935,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get(\\'email\\')?.geterror(\\'email",{"_index":938,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get(\\'email\\')?.geterror(\\'required",{"_index":937,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get(\\'name\\')?.errors",{"_index":932,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get(\\'name\\')?.geterror(\\'required",{"_index":934,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get(\\'phone\\')?.errors",{"_index":939,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get(\\'phone\\')?.geterror(\\'pattern",{"_index":941,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get(\\'website\\')?.errors",{"_index":946,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateinfoform.get(\\'website\\')?.geterror(\\'pattern",{"_index":948,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get('confirmnewpassword')?.errors",{"_index":926,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get('confirmnewpassword')?.geterror('passwordmismatch",{"_index":929,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get('confirmnewpassword')?.geterror('required",{"_index":928,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get('newpassword')?.errors",{"_index":912,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get('newpassword')?.geterror('pattern",{"_index":915,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get('newpassword')?.geterror('required",{"_index":914,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get('oldpassword')?.errors",{"_index":908,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get('oldpassword')?.geterror('required",{"_index":910,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get(\\'confirmnewpassword\\')?.errors",{"_index":956,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get(\\'confirmnewpassword\\')?.geterror(\\'passwordmismatch",{"_index":959,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get(\\'confirmnewpassword\\')?.geterror(\\'required",{"_index":958,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get(\\'newpassword\\')?.errors",{"_index":952,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get(\\'newpassword\\')?.geterror(\\'pattern",{"_index":955,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get(\\'newpassword\\')?.geterror(\\'required",{"_index":954,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get(\\'oldpassword\\')?.errors",{"_index":949,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updatepasswordform.get(\\'oldpassword\\')?.geterror(\\'required",{"_index":951,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(updateprojectform.get('callbackurl')?.errors",{"_index":1059,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["if(updateprojectform.get('callbackurl')?.geterror('required",{"_index":1061,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["if(updateprojectform.get('name')?.errors",{"_index":1056,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["if(updateprojectform.get('name')?.geterror('required",{"_index":1058,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["if(updateprojectform.get(\\'callbackurl\\')?.errors",{"_index":1065,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["if(updateprojectform.get(\\'callbackurl\\')?.geterror(\\'required",{"_index":1067,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["if(updateprojectform.get(\\'name\\')?.errors",{"_index":1062,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["if(updateprojectform.get(\\'name\\')?.geterror(\\'required",{"_index":1064,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["if(user.deleted",{"_index":1340,"title":{},"body":{"components/UserItemComponent.html":{}}}],["if(user.role",{"_index":724,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["if(userid",{"_index":1328,"title":{},"body":{"components/UserItemComponent.html":{}}}],["if(value",{"_index":315,"title":{},"body":{"pipes/DeleteFilterPipe.html":{}}}],["illum",{"_index":556,"title":{},"body":{"components/HomeComponent.html":{}}}],["image",{"_index":1231,"title":{},"body":{"interfaces/TenantSignup.html":{},"interfaces/User.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{}}}],["implements",{"_index":219,"title":{},"body":{"components/AuthorizeComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"pipes/PaginationPipe.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"pipes/TimesPipe.html":{},"components/UserItemComponent.html":{},"components/UsersComponent.html":{}}}],["import",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["imports",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["in.guard.ts",{"_index":1565,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["in.ts",{"_index":1193,"title":{},"body":{"interfaces/SignIn.html":{},"coverage.html":{}}}],["incorrectly",{"_index":738,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["index",{"_index":30,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SignIn.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":539,"title":{},"body":{"components/HomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"interfaces/SignIn.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["inject(authenticationservice",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(loaderservice",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(router",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":110,"title":{"injectables/AuthenticationService.html":{},"injectables/LoaderService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{},"injectables/ValidationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"injectables/LoaderService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{},"injectables/ValidationService.html":{},"coverage.html":{}}}],["injectables",{"_index":112,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LoaderService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{},"injectables/ValidationService.html":{},"overview.html":{}}}],["input",{"_index":1020,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["inputs",{"_index":994,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["interface",{"_index":961,"title":{"interfaces/Project.html":{},"interfaces/SignIn.html":{},"interfaces/TenantSignup.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"interfaces/UserSignup.html":{}},"body":{"interfaces/Project.html":{},"interfaces/SignIn.html":{},"interfaces/TenantSignup.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"interfaces/UserSignup.html":{},"coverage.html":{}}}],["interfaces",{"_index":962,"title":{},"body":{"interfaces/Project.html":{},"interfaces/SignIn.html":{},"interfaces/TenantSignup.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"interfaces/UserSignup.html":{},"overview.html":{}}}],["interfaces/project",{"_index":249,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{}}}],["interfaces/sign",{"_index":169,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["interfaces/tenant",{"_index":168,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["interfaces/update",{"_index":172,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["interfaces/user",{"_index":166,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"pipes/SearchUsersPipe.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{}}}],["intro",{"_index":759,"title":{},"body":{"components/PricingComponent.html":{}}}],["invalid",{"_index":659,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["inventore",{"_index":392,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["ipsa",{"_index":562,"title":{},"body":{"components/HomeComponent.html":{}}}],["ipsam",{"_index":408,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["ipsum",{"_index":372,"title":{},"body":{"components/DeveloperComponent.html":{},"components/HomeComponent.html":{}}}],["isadminguard",{"_index":1563,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iseditmode",{"_index":779,"title":{},"body":{"components/ProfileComponent.html":{}}}],["isloading",{"_index":573,"title":{},"body":{"components/LoaderComponent.html":{}}}],["isloading:boolean",{"_index":584,"title":{},"body":{"components/LoaderComponent.html":{}}}],["isloggedin",{"_index":708,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isloggedin:boolean",{"_index":717,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isloggedinguard",{"_index":1566,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isshowconfirmpassword",{"_index":1144,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["isshowconfirmpassword:boolean",{"_index":1158,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["isshowpassword",{"_index":612,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["isshowpassword:boolean",{"_index":647,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["iste",{"_index":552,"title":{},"body":{"components/HomeComponent.html":{}}}],["istenantguard",{"_index":1568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isuser",{"_index":1371,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["item",{"_index":978,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UsersComponent.html":{}}}],["item'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["item.component",{"_index":1109,"title":{},"body":{"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UsersComponent.html":{}}}],["item.component.css",{"_index":981,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component.html",{"_index":980,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts",{"_index":976,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["item.component.ts:101",{"_index":997,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:107",{"_index":1010,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:17",{"_index":1319,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:18",{"_index":1323,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:19",{"_index":1318,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:21",{"_index":996,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:22",{"_index":1015,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:23",{"_index":995,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:28",{"_index":1321,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:31",{"_index":1014,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:32",{"_index":1013,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:33",{"_index":1016,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["item.component.ts:35",{"_index":1008,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:39",{"_index":1009,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:43",{"_index":1007,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:50",{"_index":1006,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:54",{"_index":1004,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:59",{"_index":1018,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:62",{"_index":1322,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item.component.ts:64",{"_index":1012,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:80",{"_index":1001,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.component.ts:95",{"_index":998,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["item.name",{"_index":1342,"title":{},"body":{"components/UserItemComponent.html":{}}}],["item/project",{"_index":975,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["item/user",{"_index":1263,"title":{},"body":{"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["iterable",{"_index":1298,"title":{},"body":{"pipes/TimesPipe.html":{}}}],["iterable[symbol.iterator",{"_index":1299,"title":{},"body":{"pipes/TimesPipe.html":{}}}],["json.parse(decodeuricomponent(this.user",{"_index":517,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["jumptopage",{"_index":1247,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["jumptopage(page",{"_index":1251,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["key",{"_index":1530,"title":{},"body":{"injectables/ValidationService.html":{}}}],["keyframes",{"_index":533,"title":{},"body":{"components/HomeComponent.html":{}}}],["legend",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["length",{"_index":924,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["letter",{"_index":919,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["limited",{"_index":766,"title":{},"body":{"components/PricingComponent.html":{}}}],["link",{"_index":741,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["links",{"_index":477,"title":{},"body":{"components/FooterComponent.html":{},"components/PricingComponent.html":{}}}],["list",{"_index":339,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["loader",{"_index":570,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["loader.component.css",{"_index":572,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.html",{"_index":571,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadercomponent",{"_index":24,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["loaderservice",{"_index":575,"title":{"injectables/LoaderService.html":{}},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["loading",{"_index":591,"title":{},"body":{"injectables/LoaderService.html":{}}}],["localstorage.getitem(\"token",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage.getitem('role",{"_index":181,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.getitem('userid",{"_index":183,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem('role",{"_index":211,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem('token",{"_index":209,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.removeitem('userid",{"_index":210,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(\"role",{"_index":207,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(\"token",{"_index":204,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["localstorage.setitem(\"userid",{"_index":205,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["log",{"_index":672,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["logged",{"_index":1564,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":116,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/FooterComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserSignupComponent.html":{}}}],["login'},{'name",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["login(login",{"_index":136,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login(login:signin):observable",{"_index":199,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["login.component.css",{"_index":611,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":610,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":83,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["loginform",{"_index":613,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('email')?.touched",{"_index":675,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get('password')?.touched",{"_index":681,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'email\\')?.touched",{"_index":693,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginform.get(\\'password\\')?.touched",{"_index":697,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":117,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavbarComponent.html":{}}}],["looking",{"_index":734,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["lorem",{"_index":371,"title":{},"body":{"components/DeveloperComponent.html":{},"components/HomeComponent.html":{}}}],["magni",{"_index":385,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["maiores",{"_index":550,"title":{},"body":{"components/HomeComponent.html":{}}}],["match",{"_index":931,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["matching",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"interfaces/SignIn.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["messageservice",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["methods",{"_index":115,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"pipes/PaginationPipe.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["minima",{"_index":421,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["minimum",{"_index":923,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["minus",{"_index":402,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["miscellaneous",{"_index":1600,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modi",{"_index":560,"title":{},"body":{"components/HomeComponent.html":{}}}],["modifiedrequest",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modules",{"_index":1594,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["month",{"_index":761,"title":{},"body":{"components/PricingComponent.html":{}}}],["n",{"_index":1301,"title":{},"body":{"pipes/TimesPipe.html":{}}}],["name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["name:string",{"_index":1232,"title":{},"body":{"interfaces/TenantSignup.html":{},"interfaces/UserSignup.html":{}}}],["natus",{"_index":386,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["navbar",{"_index":705,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["navbar.component.css",{"_index":707,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":706,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":20,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["navigator.clipboard.writetext(this.code",{"_index":366,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["navigator.clipboard.writetext(this.project.clientid).then(()=>{console.log(\"copied\")}).catch(err=>{console.log(err",{"_index":1046,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["navigator.clipboard.writetext(this.project.clientsecret).then(()=>{console.log(\"copied\")}).catch(err=>{console.log(err",{"_index":1044,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["need",{"_index":671,"title":{},"body":{"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["neque",{"_index":416,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["new",{"_index":164,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/DeveloperComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{},"components/UserSignupComponent.html":{},"coverage.html":{}}}],["newpassword",{"_index":817,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/UpdatePassword.html":{}}}],["newpassword:string",{"_index":1305,"title":{},"body":{"interfaces/UpdatePassword.html":{}}}],["newuser",{"_index":470,"title":{},"body":{"components/FooterComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{}}}],["next",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(modifiedrequest).pipe",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next:(res",{"_index":188,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/LoginComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UsersComponent.html":{}}}],["next:(res)=>{console.log(res",{"_index":861,"title":{},"body":{"components/ProfileComponent.html":{}}}],["next:(response",{"_index":652,"title":{},"body":{"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["next:res",{"_index":872,"title":{},"body":{"components/ProfileComponent.html":{}}}],["ngonchanges",{"_index":989,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["ngonchanges(changes",{"_index":1002,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["ngondestroy",{"_index":229,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/ErrorComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["ngoninit",{"_index":230,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["nihil",{"_index":553,"title":{},"body":{"components/HomeComponent.html":{}}}],["nisi",{"_index":383,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["notfoundcomponent",{"_index":86,"title":{"components/NotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["null",{"_index":243,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/DeveloperComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"injectables/ProjectService.html":{},"components/ResetPasswordComponent.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["null=null",{"_index":1160,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["number",{"_index":438,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/LoaderService.html":{},"pipes/PaginationPipe.html":{},"components/ProfileComponent.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["numberofpages",{"_index":1245,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["numberofpages:number=0",{"_index":1273,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["observable",{"_index":140,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["odio",{"_index":411,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["odit",{"_index":380,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["officiis",{"_index":551,"title":{},"body":{"components/HomeComponent.html":{}}}],["offset",{"_index":541,"title":{},"body":{"components/HomeComponent.html":{}}}],["ok",{"_index":363,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["ok(rent",{"_index":358,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["ok(returndto",{"_index":341,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["old",{"_index":911,"title":{},"body":{"components/ProfileComponent.html":{}}}],["oldpassword",{"_index":816,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{}}}],["oldpassword:string",{"_index":1304,"title":{},"body":{"interfaces/UpdatePassword.html":{}}}],["oldpassword?:string",{"_index":1310,"title":{},"body":{"interfaces/User.html":{}}}],["onchanges",{"_index":977,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["onchanges,oninit,ondestroy",{"_index":1024,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["ondestroy",{"_index":221,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/ErrorComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["one",{"_index":917,"title":{},"body":{"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["oninit",{"_index":220,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UsersComponent.html":{}}}],["oninit,ondestroy",{"_index":251,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{},"components/UsersComponent.html":{}}}],["optimise",{"_index":763,"title":{},"body":{"components/PricingComponent.html":{}}}],["optional",{"_index":134,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["out",{"_index":726,"title":{},"body":{"components/NavbarComponent.html":{}}}],["outdated",{"_index":740,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["overview",{"_index":1595,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1573,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":458,"title":{},"body":{"components/ErrorComponent.html":{},"components/NotFoundComponent.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["pagenumber",{"_index":746,"title":{},"body":{"pipes/PaginationPipe.html":{}}}],["pagesize",{"_index":745,"title":{},"body":{"pipes/PaginationPipe.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["pagesize*(pagenumber",{"_index":750,"title":{},"body":{"pipes/PaginationPipe.html":{}}}],["pagesize:number=8",{"_index":1274,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["pagination",{"_index":744,"title":{},"body":{"pipes/PaginationPipe.html":{}}}],["pagination:pagesize:cureentpage;track",{"_index":1291,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["paginationpipe",{"_index":742,"title":{"pipes/PaginationPipe.html":{}},"body":{"pipes/PaginationPipe.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["parameters",{"_index":133,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["params.get('projid",{"_index":265,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["params.get('token",{"_index":1162,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["params['token",{"_index":515,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["params['user",{"_index":516,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["partner",{"_index":489,"title":{},"body":{"components/FooterComponent.html":{}}}],["password",{"_index":173,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SignIn.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"injectables/ValidationService.html":{}}}],["password\",form",{"_index":217,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["password'},{'name",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["password.component.css",{"_index":1143,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.html",{"_index":1142,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1141,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:14",{"_index":1155,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:15",{"_index":1154,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:16",{"_index":1157,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:17",{"_index":1148,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1149,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:32",{"_index":1156,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:38",{"_index":1151,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:47",{"_index":1153,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:51",{"_index":1152,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.ts",{"_index":1303,"title":{},"body":{"interfaces/UpdatePassword.html":{},"coverage.html":{}}}],["password/request",{"_index":215,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["password/reset",{"_index":1140,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password:string",{"_index":1233,"title":{},"body":{"interfaces/TenantSignup.html":{},"interfaces/UserSignup.html":{}}}],["password?:string",{"_index":1311,"title":{},"body":{"interfaces/User.html":{}}}],["passwordcontrol",{"_index":1531,"title":{},"body":{"injectables/ValidationService.html":{}}}],["passwordcontrol.value",{"_index":1535,"title":{},"body":{"injectables/ValidationService.html":{}}}],["passwordcontrolname",{"_index":1527,"title":{},"body":{"injectables/ValidationService.html":{}}}],["passwordmatchvalidator",{"_index":1522,"title":{},"body":{"injectables/ValidationService.html":{}}}],["passwordmatchvalidator(passwordcontrolname",{"_index":1524,"title":{},"body":{"injectables/ValidationService.html":{}}}],["passwordmismatch",{"_index":1538,"title":{},"body":{"injectables/ValidationService.html":{}}}],["pattern",{"_index":679,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["perferendis",{"_index":397,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["phone",{"_index":471,"title":{},"body":{"components/FooterComponent.html":{},"components/ProfileComponent.html":{},"interfaces/TenantSignup.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{}}}],["photo",{"_index":863,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["photourl",{"_index":780,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserItemComponent.html":{}}}],["photourl:string=\"assets/default.png",{"_index":830,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserItemComponent.html":{}}}],["picture",{"_index":294,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["pipe",{"_index":304,"title":{"pipes/DeleteFilterPipe.html":{},"pipes/PaginationPipe.html":{},"pipes/SearchUsersPipe.html":{},"pipes/TimesPipe.html":{}},"body":{"pipes/DeleteFilterPipe.html":{},"pipes/PaginationPipe.html":{},"pipes/SearchUsersPipe.html":{},"pipes/TimesPipe.html":{},"coverage.html":{}}}],["pipes",{"_index":306,"title":{},"body":{"pipes/DeleteFilterPipe.html":{},"pipes/PaginationPipe.html":{},"pipes/SearchUsersPipe.html":{},"pipes/TimesPipe.html":{},"overview.html":{}}}],["pipes/delete",{"_index":1268,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["pipes/pagination.pipe",{"_index":1266,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["pipes/search",{"_index":1264,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["pipes/times.pipe",{"_index":1267,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["pipetransform",{"_index":313,"title":{},"body":{"pipes/DeleteFilterPipe.html":{},"pipes/PaginationPipe.html":{},"pipes/SearchUsersPipe.html":{},"pipes/TimesPipe.html":{}}}],["placeat",{"_index":409,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["plan",{"_index":774,"title":{},"body":{"components/PricingComponent.html":{}}}],["platform",{"_index":768,"title":{},"body":{"components/PricingComponent.html":{}}}],["porro",{"_index":417,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["possible",{"_index":735,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["pricing",{"_index":755,"title":{},"body":{"components/PricingComponent.html":{}}}],["pricing'},{'name",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["pricing.component.css",{"_index":757,"title":{},"body":{"components/PricingComponent.html":{}}}],["pricing.component.html",{"_index":756,"title":{},"body":{"components/PricingComponent.html":{}}}],["pricing/pricing.component",{"_index":535,"title":{},"body":{"components/HomeComponent.html":{}}}],["pricingcomponent",{"_index":22,"title":{"components/PricingComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["primeng",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["primeng/api",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["primeng/button",{"_index":1022,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{}}}],["primeng/dialog",{"_index":645,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/UserItemComponent.html":{}}}],["primeng/toast",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{}}}],["private",{"_index":177,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["problem",{"_index":669,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/UserItemComponent.html":{}}}],["profile",{"_index":293,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["profile'},{'name",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["profile.component.css",{"_index":778,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.html",{"_index":777,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":89,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["project",{"_index":92,"title":{"interfaces/Project.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["project.callbackurl",{"_index":1048,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["project.clientid",{"_index":1050,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["project.clientsecret",{"_index":1053,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["project.name",{"_index":286,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/ProjectItemComponent.html":{}}}],["project:project",{"_index":253,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["projectid",{"_index":225,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"injectables/UserService.html":{}}}],["projectid:string|null",{"_index":1085,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectid:string|null=null",{"_index":252,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["projectitemcomponent",{"_index":91,"title":{"components/ProjectItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["projectitemcomponent,dialogmodule,buttonmodule",{"_index":1110,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects",{"_index":725,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProjectsComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{}}}],["projects'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["projects.component.css",{"_index":1100,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects.component.html",{"_index":1099,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projects/project",{"_index":1324,"title":{},"body":{"components/UserItemComponent.html":{}}}],["projects?:any",{"_index":1313,"title":{},"body":{"interfaces/User.html":{}}}],["projectsarr",{"_index":1069,"title":{},"body":{"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{}}}],["projectsarr:behaviorsubject",{"_index":1086,"title":{},"body":{"injectables/ProjectService.html":{}}}],["projectsarr:project",{"_index":1111,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["projectscomponent",{"_index":94,"title":{"components/ProjectsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["projectservice",{"_index":234,"title":{"injectables/ProjectService.html":{}},"body":{"components/AuthorizeComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/UserSignupComponent.html":{},"coverage.html":{}}}],["projid",{"_index":1080,"title":{},"body":{"injectables/ProjectService.html":{}}}],["properties",{"_index":31,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/SignIn.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"properties.html":{}}}],["providedin",{"_index":174,"title":{},"body":{"injectables/AuthenticationService.html":{},"injectables/LoaderService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{},"injectables/ValidationService.html":{}}}],["providerouter(routes),providehttpclient(withinterceptors([authenticationinterceptor])),provideanimationsasync",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["providers:[messageservice",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["public",{"_index":327,"title":{},"body":{"components/DeveloperComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["queries",{"_index":765,"title":{},"body":{"components/PricingComponent.html":{}}}],["quibusdam",{"_index":414,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["quo",{"_index":381,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["reactiveformsmodule",{"_index":609,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["reactiveformsmodule,dialogmodule,buttonmodule",{"_index":1023,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["reactiveformsmodule,routerlink,routerlinkactive",{"_index":1396,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["reasons",{"_index":736,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["recusandae",{"_index":390,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["redirected",{"_index":456,"title":{},"body":{"components/ErrorComponent.html":{}}}],["register",{"_index":618,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["register(form",{"_index":1150,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["register(form:formgroup",{"_index":1164,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["register(formgroup",{"_index":626,"title":{},"body":{"components/LoginComponent.html":{}}}],["registertenant",{"_index":1376,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenant(formgroup",{"_index":1379,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform",{"_index":1372,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform.get('confirmpassword')?.touched",{"_index":1443,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform.get('email')?.touched",{"_index":1435,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform.get('name')?.touched",{"_index":1432,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform.get('password')?.touched",{"_index":1439,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform.get('phone')?.touched",{"_index":1448,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform.get('website')?.touched",{"_index":1451,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform.get(\\'confirmpassword\\')?.touched",{"_index":1491,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform.get(\\'email\\')?.touched",{"_index":1483,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform.get(\\'name\\')?.touched",{"_index":1480,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform.get(\\'password\\')?.touched",{"_index":1487,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform.get(\\'phone\\')?.touched",{"_index":1496,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registertenantform.get(\\'website\\')?.touched",{"_index":1499,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruser",{"_index":1377,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruser(formgroup",{"_index":1381,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform",{"_index":1373,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get('age')?.geterror('max",{"_index":1429,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get('age')?.touched",{"_index":1427,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get('confirmpassword')?.touched",{"_index":1419,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get('email')?.touched",{"_index":1411,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get('name')?.touched",{"_index":1408,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get('password')?.touched",{"_index":1415,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get('phone')?.touched",{"_index":1424,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get(\\'age\\')?.geterror(\\'max",{"_index":1478,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get(\\'age\\')?.touched",{"_index":1476,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get(\\'confirmpassword\\')?.touched",{"_index":1468,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get(\\'email\\')?.touched",{"_index":1460,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get(\\'name\\')?.touched",{"_index":1457,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get(\\'password\\')?.touched",{"_index":1464,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["registeruserform.get(\\'phone\\')?.touched",{"_index":1473,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["rent",{"_index":331,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["rent=_unitofwork.customerrentcarrepo.getbystringid(id",{"_index":330,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["req",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.clone",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["req.headers.set(\"authorization",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":677,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["res",{"_index":338,"title":{},"body":{"components/DeveloperComponent.html":{},"components/NavbarComponent.html":{}}}],["res.customer.id",{"_index":351,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["res.data",{"_index":1280,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["res.reservationnumber",{"_index":349,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["reserved",{"_index":494,"title":{},"body":{"components/FooterComponent.html":{}}}],["reset",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["resetpassword",{"_index":118,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["resetpassword(form",{"_index":143,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword(form:updatepassword):observable",{"_index":216,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpassword(formgroup",{"_index":629,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetpassword.get('confirmnewpassword')?.touched",{"_index":1173,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpassword.get('newpassword')?.touched",{"_index":1169,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpassword.get(\\'confirmnewpassword\\')?.touched",{"_index":1181,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpassword.get(\\'newpassword\\')?.touched",{"_index":1177,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcomponent",{"_index":96,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["resetpasswordform",{"_index":614,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetpasswordform.get('email')?.touched",{"_index":688,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetpasswordform.get(\\'email\\')?.touched",{"_index":701,"title":{},"body":{"components/LoginComponent.html":{}}}],["resetpasswordrequest",{"_index":119,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpasswordrequest(email",{"_index":147,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["resetpasswordrequest(email:string):observable",{"_index":213,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["results",{"_index":108,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"interfaces/SignIn.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":195,"title":{},"body":{"injectables/AuthenticationService.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"pipes/PaginationPipe.html":{},"injectables/ProjectService.html":{},"pipes/SearchUsersPipe.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["returndto",{"_index":335,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["returndto.data=res",{"_index":340,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["returndto.totalresults",{"_index":336,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["returns",{"_index":139,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"pipes/PaginationPipe.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["rights",{"_index":493,"title":{},"body":{"components/FooterComponent.html":{}}}],["role",{"_index":184,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"injectables/LoaderService.html":{},"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{},"injectables/ValidationService.html":{}}}],["root'},{'name",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["route",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router",{"_index":131,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/ErrorComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserSignupComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigatebyurl(\"/login",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigatebyurl('/home",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":297,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserSignupComponent.html":{}}}],["routerlink,routerlinkactive",{"_index":716,"title":{},"body":{"components/NavbarComponent.html":{}}}],["routerlinkactive",{"_index":298,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserSignupComponent.html":{}}}],["routeroutlet",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["routeroutlet,navbarcomponent,usersignupcomponent",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet,routerlink,routerlinkactive",{"_index":301,"title":{},"body":{"components/DashboardComponent.html":{}}}],["rxjs",{"_index":167,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"dependencies.html":{}}}],["saepe",{"_index":394,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["save",{"_index":906,"title":{},"body":{"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{}}}],["seamlessly",{"_index":487,"title":{},"body":{"components/FooterComponent.html":{}}}],["searchkey",{"_index":1246,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["searchkey:string",{"_index":1272,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["searchusers",{"_index":1187,"title":{},"body":{"pipes/SearchUsersPipe.html":{}}}],["searchusers:searchkey",{"_index":1289,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["searchuserspipe",{"_index":1184,"title":{"pipes/SearchUsersPipe.html":{}},"body":{"pipes/SearchUsersPipe.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["second",{"_index":423,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["seconds",{"_index":459,"title":{},"body":{"components/ErrorComponent.html":{}}}],["secret",{"_index":1051,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["secure",{"_index":547,"title":{},"body":{"components/HomeComponent.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["send",{"_index":691,"title":{},"body":{"components/LoginComponent.html":{}}}],["sent",{"_index":667,"title":{},"body":{"components/LoginComponent.html":{}}}],["seo",{"_index":481,"title":{},"body":{"components/FooterComponent.html":{}}}],["sequi",{"_index":410,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["service",{"_index":485,"title":{},"body":{"components/FooterComponent.html":{}}}],["services",{"_index":478,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["services/authentication.service",{"_index":247,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/UserSignupComponent.html":{}}}],["services/loader.service",{"_index":583,"title":{},"body":{"components/LoaderComponent.html":{}}}],["services/project.service",{"_index":248,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/UserSignupComponent.html":{}}}],["services/tenant.service",{"_index":827,"title":{},"body":{"components/ProfileComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{}}}],["services/user.service",{"_index":250,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/ProfileComponent.html":{},"components/UserItemComponent.html":{},"components/UsersComponent.html":{}}}],["services/validation.service",{"_index":828,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["setdeletefilter",{"_index":1248,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["setdeletefilter(value",{"_index":1255,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["setdeletefilter(value:string",{"_index":1286,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["setloader",{"_index":592,"title":{},"body":{"injectables/LoaderService.html":{}}}],["setloader(show",{"_index":594,"title":{},"body":{"injectables/LoaderService.html":{}}}],["setuser",{"_index":120,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setuser(user",{"_index":150,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["setuser(user:user,token?:string",{"_index":201,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["severity",{"_index":656,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["share",{"_index":291,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["show",{"_index":596,"title":{},"body":{"injectables/LoaderService.html":{}}}],["showchangepassworddialog",{"_index":781,"title":{},"body":{"components/ProfileComponent.html":{}}}],["showchangepassworderrors",{"_index":782,"title":{},"body":{"components/ProfileComponent.html":{}}}],["showchangepassworderrors:boolean",{"_index":831,"title":{},"body":{"components/ProfileComponent.html":{}}}],["showclientsecret",{"_index":983,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["showclientsecret:boolean",{"_index":1025,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["showdeletedialog",{"_index":990,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["showdialog",{"_index":1317,"title":{},"body":{"components/UserItemComponent.html":{}}}],["showerrors",{"_index":615,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["showerrors:boolean",{"_index":648,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["showresetpassworddialog",{"_index":616,"title":{},"body":{"components/LoginComponent.html":{}}}],["showresetpassworderrors",{"_index":617,"title":{},"body":{"components/LoginComponent.html":{}}}],["showresetpassworderrors:boolean",{"_index":649,"title":{},"body":{"components/LoginComponent.html":{}}}],["showtenanterrors",{"_index":1374,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["showtenanterrors:boolean",{"_index":1398,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["showupdatedialog",{"_index":991,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["showusererrors",{"_index":1375,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["showusererrors:boolean",{"_index":1397,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["sign",{"_index":285,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserSignupComponent.html":{}}}],["signin",{"_index":137,"title":{"interfaces/SignIn.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/SignIn.html":{},"coverage.html":{}}}],["signing",{"_index":1400,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signinwithgithub",{"_index":619,"title":{},"body":{"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["signinwithgoogle",{"_index":620,"title":{},"body":{"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["signup",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["signup.component",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["signup.component.css",{"_index":1370,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.html",{"_index":1369,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts",{"_index":1368,"title":{},"body":{"components/UserSignupComponent.html":{},"coverage.html":{}}}],["signup.component.ts:100",{"_index":1383,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:18",{"_index":1390,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:19",{"_index":1389,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:20",{"_index":1388,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:21",{"_index":1395,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:22",{"_index":1378,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:26",{"_index":1387,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:32",{"_index":1394,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:43",{"_index":1392,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:54",{"_index":1382,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:74",{"_index":1380,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:89",{"_index":1386,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:92",{"_index":1385,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.component.ts:95",{"_index":1384,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["signup.ts",{"_index":1229,"title":{},"body":{"interfaces/TenantSignup.html":{},"interfaces/UserSignup.html":{},"coverage.html":{}}}],["signup/user",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/UserSignupComponent.html":{},"coverage.html":{}}}],["similique",{"_index":399,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["simplechanges",{"_index":1003,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["sing",{"_index":1406,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["single",{"_index":491,"title":{},"body":{"components/FooterComponent.html":{},"components/HomeComponent.html":{}}}],["sint",{"_index":565,"title":{},"body":{"components/HomeComponent.html":{}}}],["sit",{"_index":374,"title":{},"body":{"components/DeveloperComponent.html":{},"components/HomeComponent.html":{}}}],["solutions",{"_index":549,"title":{},"body":{"components/HomeComponent.html":{}}}],["something",{"_index":453,"title":{},"body":{"components/ErrorComponent.html":{},"components/UserSignupComponent.html":{}}}],["sorry",{"_index":452,"title":{},"body":{"components/ErrorComponent.html":{},"components/NotFoundComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"interfaces/SignIn.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["special",{"_index":921,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["src/.../app.config.ts",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../authentication.interceptor.ts",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../is",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:20",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/components/admin/dashboard/dashboard.component.ts",{"_index":295,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/components/admin/tenants/tenants.component.ts",{"_index":1238,"title":{},"body":{"components/TenantsComponent.html":{},"coverage.html":{}}}],["src/components/admin/tenants/tenants.component.ts:21",{"_index":1262,"title":{},"body":{"components/TenantsComponent.html":{}}}],["src/components/admin/tenants/tenants.component.ts:22",{"_index":1260,"title":{},"body":{"components/TenantsComponent.html":{}}}],["src/components/admin/tenants/tenants.component.ts:23",{"_index":1261,"title":{},"body":{"components/TenantsComponent.html":{}}}],["src/components/admin/tenants/tenants.component.ts:24",{"_index":1258,"title":{},"body":{"components/TenantsComponent.html":{}}}],["src/components/admin/tenants/tenants.component.ts:25",{"_index":1259,"title":{},"body":{"components/TenantsComponent.html":{}}}],["src/components/admin/tenants/tenants.component.ts:26",{"_index":1257,"title":{},"body":{"components/TenantsComponent.html":{}}}],["src/components/admin/tenants/tenants.component.ts:27",{"_index":1250,"title":{},"body":{"components/TenantsComponent.html":{}}}],["src/components/admin/tenants/tenants.component.ts:33",{"_index":1254,"title":{},"body":{"components/TenantsComponent.html":{}}}],["src/components/admin/tenants/tenants.component.ts:49",{"_index":1256,"title":{},"body":{"components/TenantsComponent.html":{}}}],["src/components/admin/tenants/tenants.component.ts:53",{"_index":1252,"title":{},"body":{"components/TenantsComponent.html":{}}}],["src/components/admin/tenants/tenants.component.ts:57",{"_index":1253,"title":{},"body":{"components/TenantsComponent.html":{}}}],["src/components/admin/user",{"_index":1314,"title":{},"body":{"components/UserItemComponent.html":{},"coverage.html":{}}}],["src/components/admin/users/users.component.ts",{"_index":1501,"title":{},"body":{"components/UsersComponent.html":{},"coverage.html":{}}}],["src/components/admin/users/users.component.ts:22",{"_index":1514,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/components/admin/users/users.component.ts:23",{"_index":1512,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/components/admin/users/users.component.ts:24",{"_index":1513,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/components/admin/users/users.component.ts:25",{"_index":1510,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/components/admin/users/users.component.ts:26",{"_index":1511,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/components/admin/users/users.component.ts:27",{"_index":1509,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/components/admin/users/users.component.ts:29",{"_index":1504,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/components/admin/users/users.component.ts:36",{"_index":1507,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/components/admin/users/users.component.ts:52",{"_index":1506,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/components/admin/users/users.component.ts:56",{"_index":1508,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/components/admin/users/users.component.ts:60",{"_index":1505,"title":{},"body":{"components/UsersComponent.html":{}}}],["src/components/authorization/authorize/authorize.component.ts",{"_index":218,"title":{},"body":{"components/AuthorizeComponent.html":{},"coverage.html":{}}}],["src/components/authorization/authorize/authorize.component.ts:18",{"_index":244,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["src/components/authorization/authorize/authorize.component.ts:19",{"_index":242,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["src/components/authorization/authorize/authorize.component.ts:20",{"_index":246,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["src/components/authorization/authorize/authorize.component.ts:21",{"_index":237,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["src/components/authorization/authorize/authorize.component.ts:33",{"_index":241,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["src/components/authorization/authorize/authorize.component.ts:63",{"_index":240,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["src/components/authorization/authorize/authorize.component.ts:67",{"_index":239,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["src/components/authorization/authorize/authorize.component.ts:80",{"_index":238,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["src/components/authorization/github",{"_index":495,"title":{},"body":{"components/GithubCallbackComponent.html":{},"coverage.html":{}}}],["src/components/authorization/google",{"_index":523,"title":{},"body":{"components/GoogleCallbackComponent.html":{},"coverage.html":{}}}],["src/components/authorization/login/login.component.ts",{"_index":607,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/components/authorization/login/login.component.ts:18",{"_index":635,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/components/authorization/login/login.component.ts:19",{"_index":640,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/components/authorization/login/login.component.ts:20",{"_index":641,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/components/authorization/login/login.component.ts:21",{"_index":624,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/components/authorization/login/login.component.ts:25",{"_index":634,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/components/authorization/login/login.component.ts:31",{"_index":638,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/components/authorization/login/login.component.ts:36",{"_index":639,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/components/authorization/login/login.component.ts:42",{"_index":628,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/components/authorization/login/login.component.ts:62",{"_index":633,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/components/authorization/login/login.component.ts:66",{"_index":632,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/components/authorization/login/login.component.ts:71",{"_index":631,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/components/authorization/login/login.component.ts:75",{"_index":630,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/components/authorization/reset",{"_index":1139,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["src/components/authorization/user",{"_index":1367,"title":{},"body":{"components/UserSignupComponent.html":{},"coverage.html":{}}}],["src/components/core/error/error.component.ts",{"_index":430,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["src/components/core/error/error.component.ts:13",{"_index":439,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/components/core/error/error.component.ts:14",{"_index":436,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/components/core/error/error.component.ts:24",{"_index":437,"title":{},"body":{"components/ErrorComponent.html":{}}}],["src/components/core/footer/footer.component.ts",{"_index":460,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/components/core/footer/footer.component.ts:14",{"_index":467,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/components/core/footer/footer.component.ts:15",{"_index":465,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/components/core/footer/footer.component.ts:18",{"_index":466,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/components/core/loader/loader.component.ts",{"_index":569,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/components/core/loader/loader.component.ts:13",{"_index":582,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/components/core/loader/loader.component.ts:14",{"_index":576,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/components/core/loader/loader.component.ts:17",{"_index":579,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/components/core/loader/loader.component.ts:23",{"_index":578,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/components/core/navbar/navbar.component.ts",{"_index":704,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/components/core/navbar/navbar.component.ts:15",{"_index":714,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/components/core/navbar/navbar.component.ts:16",{"_index":715,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/components/core/navbar/navbar.component.ts:17",{"_index":710,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/components/core/navbar/navbar.component.ts:23",{"_index":713,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/components/core/navbar/navbar.component.ts:35",{"_index":712,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/components/core/navbar/navbar.component.ts:38",{"_index":711,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/components/core/not",{"_index":728,"title":{},"body":{"components/NotFoundComponent.html":{},"coverage.html":{}}}],["src/components/home/home.component.ts",{"_index":525,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/components/information/developer/developer.component.ts",{"_index":319,"title":{},"body":{"components/DeveloperComponent.html":{},"coverage.html":{}}}],["src/components/information/developer/developer.component.ts:12",{"_index":364,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["src/components/information/developer/developer.component.ts:57",{"_index":325,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["src/components/pricing/pricing.component.ts",{"_index":754,"title":{},"body":{"components/PricingComponent.html":{},"coverage.html":{}}}],["src/components/pricing/pricing.component.ts:12",{"_index":758,"title":{},"body":{"components/PricingComponent.html":{}}}],["src/components/profile/profile.component.ts",{"_index":775,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/components/profile/profile.component.ts:123",{"_index":795,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:154",{"_index":797,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:187",{"_index":791,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:23",{"_index":825,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:24",{"_index":801,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:25",{"_index":803,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:26",{"_index":804,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:27",{"_index":805,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:28",{"_index":790,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:42",{"_index":792,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:66",{"_index":793,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:77",{"_index":815,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:87",{"_index":824,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/profile/profile.component.ts:93",{"_index":799,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/components/projects/project",{"_index":974,"title":{},"body":{"components/ProjectItemComponent.html":{},"coverage.html":{}}}],["src/components/projects/project/projects.component.ts",{"_index":1098,"title":{},"body":{"components/ProjectsComponent.html":{},"coverage.html":{}}}],["src/components/projects/project/projects.component.ts:20",{"_index":1108,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/components/projects/project/projects.component.ts:21",{"_index":1102,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/components/projects/project/projects.component.ts:29",{"_index":1106,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/components/projects/project/projects.component.ts:47",{"_index":1107,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/components/projects/project/projects.component.ts:53",{"_index":1104,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/components/projects/project/projects.component.ts:69",{"_index":1105,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["src/guards/is",{"_index":1561,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interceptors/authentication.interceptor.ts",{"_index":1544,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/interfaces/project.ts",{"_index":963,"title":{},"body":{"interfaces/Project.html":{},"coverage.html":{}}}],["src/interfaces/sign",{"_index":1192,"title":{},"body":{"interfaces/SignIn.html":{},"coverage.html":{}}}],["src/interfaces/tenant",{"_index":1228,"title":{},"body":{"interfaces/TenantSignup.html":{},"coverage.html":{}}}],["src/interfaces/update",{"_index":1302,"title":{},"body":{"interfaces/UpdatePassword.html":{},"coverage.html":{}}}],["src/interfaces/user",{"_index":1366,"title":{},"body":{"interfaces/UserSignup.html":{},"coverage.html":{}}}],["src/interfaces/user.ts",{"_index":1308,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/pipes/delete",{"_index":307,"title":{},"body":{"pipes/DeleteFilterPipe.html":{},"coverage.html":{}}}],["src/pipes/pagination.pipe.ts",{"_index":743,"title":{},"body":{"pipes/PaginationPipe.html":{},"coverage.html":{}}}],["src/pipes/pagination.pipe.ts:10",{"_index":747,"title":{},"body":{"pipes/PaginationPipe.html":{}}}],["src/pipes/search",{"_index":1185,"title":{},"body":{"pipes/SearchUsersPipe.html":{},"coverage.html":{}}}],["src/pipes/times.pipe.ts",{"_index":1294,"title":{},"body":{"pipes/TimesPipe.html":{},"coverage.html":{}}}],["src/pipes/times.pipe.ts:9",{"_index":1297,"title":{},"body":{"pipes/TimesPipe.html":{}}}],["src/services/authentication.service.ts",{"_index":113,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/services/authentication.service.ts:17",{"_index":162,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:18",{"_index":132,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:58",{"_index":160,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:62",{"_index":156,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:66",{"_index":138,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:70",{"_index":152,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:79",{"_index":141,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:86",{"_index":148,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/authentication.service.ts:92",{"_index":145,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/services/loader.service.ts",{"_index":589,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["src/services/loader.service.ts:11",{"_index":595,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/services/loader.service.ts:8",{"_index":597,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/services/loader.service.ts:9",{"_index":593,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/services/project.service.ts",{"_index":1068,"title":{},"body":{"injectables/ProjectService.html":{},"coverage.html":{}}}],["src/services/project.service.ts:10",{"_index":1084,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:11",{"_index":1083,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:12",{"_index":1073,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:15",{"_index":1079,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:20",{"_index":1077,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:28",{"_index":1075,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:32",{"_index":1081,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/project.service.ts:36",{"_index":1076,"title":{},"body":{"injectables/ProjectService.html":{}}}],["src/services/tenant.service.ts",{"_index":1194,"title":{},"body":{"injectables/TenantService.html":{},"coverage.html":{}}}],["src/services/tenant.service.ts:11",{"_index":1215,"title":{},"body":{"injectables/TenantService.html":{}}}],["src/services/tenant.service.ts:12",{"_index":1199,"title":{},"body":{"injectables/TenantService.html":{}}}],["src/services/tenant.service.ts:16",{"_index":1212,"title":{},"body":{"injectables/TenantService.html":{}}}],["src/services/tenant.service.ts:19",{"_index":1210,"title":{},"body":{"injectables/TenantService.html":{}}}],["src/services/tenant.service.ts:23",{"_index":1201,"title":{},"body":{"injectables/TenantService.html":{}}}],["src/services/tenant.service.ts:27",{"_index":1205,"title":{},"body":{"injectables/TenantService.html":{}}}],["src/services/tenant.service.ts:31",{"_index":1203,"title":{},"body":{"injectables/TenantService.html":{}}}],["src/services/tenant.service.ts:35",{"_index":1207,"title":{},"body":{"injectables/TenantService.html":{}}}],["src/services/user.service.ts",{"_index":1343,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/services/user.service.ts:11",{"_index":1360,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:12",{"_index":1348,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:15",{"_index":1358,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:19",{"_index":1356,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:23",{"_index":1350,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:29",{"_index":1353,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:33",{"_index":1352,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:38",{"_index":1351,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/user.service.ts:42",{"_index":1354,"title":{},"body":{"injectables/UserService.html":{}}}],["src/services/validation.service.ts",{"_index":1521,"title":{},"body":{"injectables/ValidationService.html":{},"coverage.html":{}}}],["src/services/validation.service.ts:10",{"_index":1526,"title":{},"body":{"injectables/ValidationService.html":{}}}],["src/services/validation.service.ts:6",{"_index":1523,"title":{},"body":{"injectables/ValidationService.html":{}}}],["standalone",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["started",{"_index":1592,"title":{"index.html":{}},"body":{}}],["startindex",{"_index":749,"title":{},"body":{"pipes/PaginationPipe.html":{}}}],["startindex+pagesize",{"_index":752,"title":{},"body":{"pipes/PaginationPipe.html":{}}}],["state",{"_index":529,"title":{},"body":{"components/HomeComponent.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":1543,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":369,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["str",{"_index":1188,"title":{},"body":{"pipes/SearchUsersPipe.html":{}}}],["streamline",{"_index":482,"title":{},"body":{"components/FooterComponent.html":{}}}],["string",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"interfaces/SignIn.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{}}}],["style",{"_index":530,"title":{},"body":{"components/HomeComponent.html":{}}}],["styleurl",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["sub",{"_index":262,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["sub:any",{"_index":442,"title":{},"body":{"components/ErrorComponent.html":{}}}],["sub:subscription",{"_index":468,"title":{},"body":{"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"components/ProjectItemComponent.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["subscription",{"_index":245,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["subscriptions",{"_index":226,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{}}}],["subscriptions:subscription",{"_index":255,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{}}}],["success",{"_index":666,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{}}}],["successfully",{"_index":865,"title":{},"body":{"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/UserItemComponent.html":{}}}],["summary",{"_index":657,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["support",{"_index":770,"title":{},"body":{"components/PricingComponent.html":{}}}],["sure",{"_index":1054,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["suscipit",{"_index":418,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["table",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":344,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["teantid",{"_index":1213,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["templateurl:'./error.component.html",{"_index":440,"title":{},"body":{"components/ErrorComponent.html":{}}}],["tempora",{"_index":391,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["tenant",{"_index":157,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"miscellaneous/variables.html":{}}}],["tenant.guard.ts",{"_index":1567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tenant.service",{"_index":171,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tenants",{"_index":303,"title":{},"body":{"components/DashboardComponent.html":{},"components/TenantsComponent.html":{}}}],["tenants'},{'name",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["tenants.component.css",{"_index":1242,"title":{},"body":{"components/TenantsComponent.html":{}}}],["tenants.component.html",{"_index":1241,"title":{},"body":{"components/TenantsComponent.html":{}}}],["tenants:user",{"_index":1271,"title":{},"body":{"components/TenantsComponent.html":{}}}],["tenantscomponent",{"_index":99,"title":{"components/TenantsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["tenantservice",{"_index":129,"title":{"injectables/TenantService.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"coverage.html":{}}}],["tenantsignup",{"_index":155,"title":{"interfaces/TenantSignup.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/TenantSignup.html":{},"coverage.html":{}}}],["tenantsingup",{"_index":121,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tenantsingup(tenant",{"_index":154,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tenantsingup(tenant:tenantsignup):observable",{"_index":197,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tenantslist",{"_index":1195,"title":{},"body":{"injectables/TenantService.html":{}}}],["tenantslist:behaviorsubject",{"_index":1216,"title":{},"body":{"injectables/TenantService.html":{}}}],["tenetur",{"_index":566,"title":{},"body":{"components/HomeComponent.html":{}}}],["thier",{"_index":764,"title":{},"body":{"components/PricingComponent.html":{}}}],["third",{"_index":425,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["this._activatedroute.parammap.subscribe(params",{"_index":263,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["this._activatedroute.queryparams.subscribe(params",{"_index":513,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["this._activateroute.parammap.subscribe(params",{"_index":1161,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._autehnticationservice.setuser(this.user,this.token",{"_index":518,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["this._authenticationservice.user.subscribe",{"_index":1029,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["this._authenticationservice.user.subscribe(newuser",{"_index":277,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/FooterComponent.html":{}}}],["this._authservice.login(formgroup.value).subscribe",{"_index":651,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._authservice.logout",{"_index":722,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._authservice.resetpassword(formgroup.value).subscribe",{"_index":665,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._authservice.setuser(res.data",{"_index":862,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this._authservice.setuser(response.data.user,response.data.access_token",{"_index":653,"title":{},"body":{"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["this._authservice.tenantsingup",{"_index":1402,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["this._authservice.user.next(res.data",{"_index":874,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this._authservice.user.subscribe((newuser",{"_index":836,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this._authservice.user.subscribe(res",{"_index":719,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._authservice.user.value",{"_index":833,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this._authservice.usersingup(formgroup.value).subscribe",{"_index":1399,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["this._globalloadercounter",{"_index":600,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this._http.delete(this.baseurl+projectid",{"_index":1097,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this._http.delete(this.baseurl+userid",{"_index":1222,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["this._http.get(this.baseurl",{"_index":1090,"title":{},"body":{"injectables/ProjectService.html":{},"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["this._http.get(this.baseurl+projid",{"_index":1088,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this._http.get(this.baseurl+userid",{"_index":1224,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["this._http.patch(this.baseurl+\"updatewithpassword\",updateform",{"_index":1227,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["this._http.patch(this.baseurl,user",{"_index":1220,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["this._http.post(this.baseurl",{"_index":1365,"title":{},"body":{"injectables/UserService.html":{}}}],["this._http.post(this.baseurl+\"login\",login",{"_index":200,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._http.post(this.baseurl+\"registertenant\",tenant",{"_index":198,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._http.post(this.baseurl+\"registeruser\",user",{"_index":196,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._http.post(this.baseurl+\"reset",{"_index":214,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this._http.post(this.baseurl+`image/${teantid}`,photo",{"_index":1218,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["this._http.post(this.baseurl,project",{"_index":1093,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this._http.put(this.baseurl+projectid,project",{"_index":1095,"title":{},"body":{"injectables/ProjectService.html":{}}}],["this._loaderservice.loading.subscribe(loader",{"_index":586,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this._messageservice.add",{"_index":655,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["this._projectservice.addproject(formgroup.value).subscribe",{"_index":1116,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this._projectservice.deleteproject(projectid).subscribe",{"_index":1039,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["this._projectservice.getallpertenant().subscribe",{"_index":1112,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this._projectservice.getbyid(this.projectid).subscribe",{"_index":272,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["this._projectservice.projectid",{"_index":268,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["this._projectservice.projectid=null",{"_index":270,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["this._projectservice.projectsarr.next(res.data",{"_index":1034,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{}}}],["this._projectservice.projectsarr.subscribe(newarr",{"_index":1114,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this._projectservice.updateproject(projectid,formgroup.value).subscribe",{"_index":1033,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["this._router.navigatebyurl('/error",{"_index":276,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["this._router.navigatebyurl('/home",{"_index":283,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserSignupComponent.html":{}}}],["this._router.navigatebyurl('/login",{"_index":269,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["this._router.navigatebyurl(`/authorize/${this._projectservice.projectid",{"_index":520,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["this._tenantservice.delete(userid).subscribe",{"_index":1331,"title":{},"body":{"components/UserItemComponent.html":{}}}],["this._tenantservice.getall().subscribe",{"_index":1277,"title":{},"body":{"components/TenantsComponent.html":{}}}],["this._tenantservice.tenantslist.next(res.data",{"_index":1278,"title":{},"body":{"components/TenantsComponent.html":{},"components/UserItemComponent.html":{}}}],["this._tenantservice.tenantslist.subscribe((newlist",{"_index":1284,"title":{},"body":{"components/TenantsComponent.html":{}}}],["this._tenantservice.updatepassword(form.value).subscribe",{"_index":879,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this._tenantservice.updatetenant(form.value).subscribe",{"_index":875,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this._tenantservice.updatetenantimage(this.user._id,formdata).subscribe",{"_index":860,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this._userservice.addusertoproject(this.projectid).subscribe",{"_index":280,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["this._userservice.delete(userid).subscribe",{"_index":1329,"title":{},"body":{"components/UserItemComponent.html":{}}}],["this._userservice.getall().subscribe",{"_index":1516,"title":{},"body":{"components/UsersComponent.html":{}}}],["this._userservice.updatepassword(form.value).subscribe",{"_index":878,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this._userservice.updateuser(form.value).subscribe",{"_index":871,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this._userservice.updateuserimage(this.user._id,formdata).subscribe",{"_index":868,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this._userservice.userslist.next(res.data",{"_index":1330,"title":{},"body":{"components/UserItemComponent.html":{},"components/UsersComponent.html":{}}}],["this._userservice.userslist.subscribe((newlist",{"_index":1519,"title":{},"body":{"components/UsersComponent.html":{}}}],["this._validationservice.passwordmatchvalidator('newpassword','confirmnewpassword",{"_index":823,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this._validationservice.passwordmatchvalidator('password','confirmpassword",{"_index":1391,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["this.addprojectform.get('callbackurl')?.reset",{"_index":1119,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.addprojectform.get('name')?.reset",{"_index":1118,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.cureentpage",{"_index":1288,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["this.deletedialogvisible",{"_index":1027,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["this.deletevalue",{"_index":1287,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["this.iseditmode=false",{"_index":851,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.iseditmode=true",{"_index":853,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.isloading",{"_index":587,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.isloggedin",{"_index":721,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.isshowconfirmpassword=!this.isshowconfirmpassword",{"_index":1167,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["this.isshowpassword=!this.isshowpassword",{"_index":661,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["this.loading.next(false",{"_index":605,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loading.next(true",{"_index":603,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.loading.value",{"_index":602,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.logout",{"_index":191,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.numberofpages=math.ceil(this.tenants.length",{"_index":1281,"title":{},"body":{"components/TenantsComponent.html":{}}}],["this.numberofpages=math.ceil(this.users.length",{"_index":1518,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.pagesize",{"_index":1282,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["this.photourl",{"_index":838,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserItemComponent.html":{}}}],["this.project=res.data",{"_index":273,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["this.projectid",{"_index":264,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["this.projectsarr=newarr",{"_index":1115,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.projectsarr=res.data",{"_index":1113,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["this.showchangepassworddialog",{"_index":880,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.showchangepassworderrors=true",{"_index":881,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.showclientsecret",{"_index":1047,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["this.showerrors",{"_index":1166,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.showerrors=true",{"_index":660,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.showresetpassworddialog=false",{"_index":668,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.showresetpassworderrors=true",{"_index":670,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.showtenanterrors=true",{"_index":1404,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["this.showusererrors=true",{"_index":1401,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["this.sub",{"_index":512,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"components/ProjectItemComponent.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["this.sub.unsubscribe",{"_index":521,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"components/ProjectItemComponent.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["this.sub=setinterval",{"_index":444,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.subscriptions.foreach(sub=>sub.unsubscribe",{"_index":279,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{}}}],["this.subscriptions.push(sub",{"_index":266,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{}}}],["this.tenants",{"_index":1279,"title":{},"body":{"components/TenantsComponent.html":{}}}],["this.tenants=newlist",{"_index":1285,"title":{},"body":{"components/TenantsComponent.html":{}}}],["this.timer",{"_index":445,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.token",{"_index":514,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.updatedialogvisible",{"_index":1028,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["this.updatedialogvisible=false",{"_index":1036,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["this.updateinfoform.disable",{"_index":849,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateinfoform.enable",{"_index":852,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateinfoform.get('address')?.setvalue(this.user.address",{"_index":847,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateinfoform.get('age')?.setvalue(this.user.age??0",{"_index":846,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateinfoform.get('email')?.setvalue(this.user.email",{"_index":841,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateinfoform.get('name')?.setvalue(this.user.name",{"_index":840,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateinfoform.get('phone')?.setvalue(this.user.phone",{"_index":842,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateinfoform.get('role')?.disable",{"_index":854,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateinfoform.get('role')?.setvalue(this.user.role",{"_index":843,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateinfoform.get('website')?.setvalue(this.user.website",{"_index":848,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.updateprojectform.get('callbackurl')?.setvalue(this.project.callbackurl",{"_index":1031,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["this.updateprojectform.get('name')?.setvalue(this.project.name",{"_index":1030,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["this.user",{"_index":469,"title":{},"body":{"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{}}}],["this.user._id",{"_index":859,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.user.image",{"_index":839,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserItemComponent.html":{}}}],["this.user.next",{"_index":212,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.next(res.data",{"_index":189,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.next(user",{"_index":202,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.role",{"_index":845,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserItemComponent.html":{}}}],["this.user.value._id",{"_index":206,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user.value.role",{"_index":208,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.user=newuser",{"_index":278,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/ProjectItemComponent.html":{}}}],["this.users",{"_index":1517,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.users=newlist",{"_index":1520,"title":{},"body":{"components/UsersComponent.html":{}}}],["this.visible",{"_index":1332,"title":{},"body":{"components/UserItemComponent.html":{}}}],["timer",{"_index":434,"title":{},"body":{"components/ErrorComponent.html":{}}}],["timer:number",{"_index":441,"title":{},"body":{"components/ErrorComponent.html":{}}}],["times",{"_index":1295,"title":{},"body":{"pipes/TimesPipe.html":{}}}],["times;track",{"_index":1293,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["timespipe",{"_index":1240,"title":{"pipes/TimesPipe.html":{}},"body":{"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["title",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["toastmodule",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectsComponent.html":{}}}],["toggleeditmode",{"_index":785,"title":{},"body":{"components/ProfileComponent.html":{}}}],["toggleshowclientsecret",{"_index":992,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["toggleshowconfirmpassword",{"_index":1145,"title":{},"body":{"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["toggleshowpassword",{"_index":621,"title":{},"body":{"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["token",{"_index":151,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/ResetPasswordComponent.html":{},"interfaces/UpdatePassword.html":{},"miscellaneous/variables.html":{}}}],["token:string",{"_index":1159,"title":{},"body":{"components/ResetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["token:string|null=null",{"_index":509,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["token?:string",{"_index":1307,"title":{},"body":{"interfaces/UpdatePassword.html":{}}}],["track",{"_index":1125,"title":{},"body":{"components/ProjectsComponent.html":{}}}],["transform",{"_index":310,"title":{},"body":{"pipes/DeleteFilterPipe.html":{},"components/HomeComponent.html":{},"pipes/PaginationPipe.html":{},"pipes/SearchUsersPipe.html":{},"pipes/TimesPipe.html":{}}}],["transform(users",{"_index":311,"title":{},"body":{"pipes/DeleteFilterPipe.html":{},"pipes/PaginationPipe.html":{},"pipes/SearchUsersPipe.html":{}}}],["transform(value",{"_index":1296,"title":{},"body":{"pipes/TimesPipe.html":{}}}],["transition",{"_index":532,"title":{},"body":{"components/HomeComponent.html":{}}}],["translatey",{"_index":542,"title":{},"body":{"components/HomeComponent.html":{}}}],["translatey(0",{"_index":540,"title":{},"body":{"components/HomeComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["trigger",{"_index":528,"title":{},"body":{"components/HomeComponent.html":{}}}],["trigger('updownanimation",{"_index":537,"title":{},"body":{"components/HomeComponent.html":{}}}],["true",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"interfaces/Project.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"interfaces/SignIn.html":{},"injectables/TenantService.html":{},"interfaces/TenantSignup.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"interfaces/UpdatePassword.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"interfaces/UserSignup.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":737,"title":{},"body":{"components/NotFoundComponent.html":{}}}],["ullam",{"_index":412,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["undefined",{"_index":1000,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["unlimited",{"_index":772,"title":{},"body":{"components/PricingComponent.html":{}}}],["up",{"_index":686,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/UserSignupComponent.html":{}}}],["update(customerrentcardto",{"_index":356,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["updated",{"_index":864,"title":{},"body":{"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{}}}],["updatedat",{"_index":969,"title":{},"body":{"interfaces/Project.html":{}}}],["updatedat?:date",{"_index":973,"title":{},"body":{"interfaces/Project.html":{}}}],["updatedialogvisible",{"_index":984,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["updatedialogvisible:boolean",{"_index":1026,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["updateform",{"_index":1208,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["updateinfo",{"_index":786,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfo(form",{"_index":794,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfo(form:formgroup",{"_index":869,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform",{"_index":783,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform.get('age')?.geterror('max",{"_index":896,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform.get('age')?.touched",{"_index":894,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform.get('email')?.touched",{"_index":886,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform.get('name')?.touched",{"_index":883,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform.get('phone')?.touched",{"_index":890,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform.get('website')?.touched",{"_index":902,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform.get(\\'age\\')?.geterror(\\'max",{"_index":945,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform.get(\\'age\\')?.touched",{"_index":943,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform.get(\\'email\\')?.touched",{"_index":936,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform.get(\\'name\\')?.touched",{"_index":933,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform.get(\\'phone\\')?.touched",{"_index":940,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateinfoform.get(\\'website\\')?.touched",{"_index":947,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatepassword",{"_index":144,"title":{"interfaces/UpdatePassword.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/ProfileComponent.html":{},"injectables/TenantService.html":{},"interfaces/UpdatePassword.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updatepassword(form",{"_index":796,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatepassword(form:formgroup",{"_index":877,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatepassword(updateform",{"_index":1206,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["updatepassword(updateform:updatepassword):observable",{"_index":1226,"title":{},"body":{"injectables/TenantService.html":{},"injectables/UserService.html":{}}}],["updatepasswordform",{"_index":784,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatepasswordform.get('confirmnewpassword')?.touched",{"_index":927,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatepasswordform.get('newpassword')?.touched",{"_index":913,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatepasswordform.get('oldpassword')?.touched",{"_index":909,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatepasswordform.get(\\'confirmnewpassword\\')?.touched",{"_index":957,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatepasswordform.get(\\'newpassword\\')?.touched",{"_index":953,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updatepasswordform.get(\\'oldpassword\\')?.touched",{"_index":950,"title":{},"body":{"components/ProfileComponent.html":{}}}],["updateproject",{"_index":993,"title":{},"body":{"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{}}}],["updateproject(projectid",{"_index":1011,"title":{},"body":{"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{}}}],["updateproject(projectid:string,project:project):observable",{"_index":1094,"title":{},"body":{"injectables/ProjectService.html":{}}}],["updateproject(projectid:string|undefined,formgroup",{"_index":1032,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["updateprojectform",{"_index":985,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["updateprojectform.get('callbackurl')?.touched",{"_index":1060,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["updateprojectform.get('name')?.touched",{"_index":1057,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["updateprojectform.get(\\'callbackurl\\')?.touched",{"_index":1066,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["updateprojectform.get(\\'name\\')?.touched",{"_index":1063,"title":{},"body":{"components/ProjectItemComponent.html":{}}}],["updatetenant",{"_index":1197,"title":{},"body":{"injectables/TenantService.html":{}}}],["updatetenant(user",{"_index":1209,"title":{},"body":{"injectables/TenantService.html":{}}}],["updatetenant(user:user):observable",{"_index":1219,"title":{},"body":{"injectables/TenantService.html":{}}}],["updatetenantimage",{"_index":1198,"title":{},"body":{"injectables/TenantService.html":{}}}],["updatetenantimage(teantid",{"_index":1211,"title":{},"body":{"injectables/TenantService.html":{}}}],["updatetenantimage(teantid:string,photo:any):observable",{"_index":1217,"title":{},"body":{"injectables/TenantService.html":{}}}],["updateuser",{"_index":1346,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(user",{"_index":1355,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(user:user):observable",{"_index":1363,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserimage",{"_index":1347,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserimage(teantid",{"_index":1357,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserimage(teantid:string,photo:any):observable",{"_index":1362,"title":{},"body":{"injectables/UserService.html":{}}}],["updating",{"_index":866,"title":{},"body":{"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{}}}],["uploadphoto",{"_index":787,"title":{},"body":{"components/ProfileComponent.html":{}}}],["uploadphoto(event",{"_index":798,"title":{},"body":{"components/ProfileComponent.html":{}}}],["uploadphoto(event:any",{"_index":855,"title":{},"body":{"components/ProfileComponent.html":{}}}],["uppercase",{"_index":918,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["url",{"_index":904,"title":{},"body":{"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/UserSignupComponent.html":{}}}],["use",{"_index":1455,"title":{},"body":{"components/UserSignupComponent.html":{}}}],["useful",{"_index":476,"title":{},"body":{"components/FooterComponent.html":{}}}],["user",{"_index":102,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"pipes/SearchUsersPipe.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["user.address",{"_index":1337,"title":{},"body":{"components/UserItemComponent.html":{}}}],["user.age",{"_index":1339,"title":{},"body":{"components/UserItemComponent.html":{}}}],["user.deleted",{"_index":318,"title":{},"body":{"pipes/DeleteFilterPipe.html":{}}}],["user.email",{"_index":288,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/UserItemComponent.html":{}}}],["user.name",{"_index":287,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/UserItemComponent.html":{}}}],["user.name?.tolocalelowercase().includes(str.tolowercase",{"_index":1191,"title":{},"body":{"pipes/SearchUsersPipe.html":{}}}],["user.phone",{"_index":1335,"title":{},"body":{"components/UserItemComponent.html":{}}}],["user.projects.length",{"_index":1336,"title":{},"body":{"components/UserItemComponent.html":{}}}],["user.projects;track",{"_index":1341,"title":{},"body":{"components/UserItemComponent.html":{}}}],["user.role",{"_index":892,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserItemComponent.html":{}}}],["user.service",{"_index":170,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user.website",{"_index":1338,"title":{},"body":{"components/UserItemComponent.html":{}}}],["user:any",{"_index":510,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["user:behaviorsubject",{"_index":176,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["user:user",{"_index":254,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/FooterComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/UserItemComponent.html":{}}}],["user[],pagesize:number,pagenumber:number",{"_index":748,"title":{},"body":{"pipes/PaginationPipe.html":{}}}],["user[],str",{"_index":1190,"title":{},"body":{"pipes/SearchUsersPipe.html":{}}}],["user[],value:string",{"_index":314,"title":{},"body":{"pipes/DeleteFilterPipe.html":{}}}],["userid",{"_index":1202,"title":{},"body":{"injectables/TenantService.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{}}}],["useritemcomponent",{"_index":101,"title":{"components/UserItemComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["useritemcomponent,searchuserspipe,formsmodule,paginationpipe,timespipe,deletefilterpipe",{"_index":1270,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["users",{"_index":302,"title":{},"body":{"components/DashboardComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/FooterComponent.html":{},"pipes/PaginationPipe.html":{},"components/PricingComponent.html":{},"pipes/SearchUsersPipe.html":{},"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["users'},{'name",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["users.component.css",{"_index":1503,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.component.html",{"_index":1502,"title":{},"body":{"components/UsersComponent.html":{}}}],["users.filter(user",{"_index":317,"title":{},"body":{"pipes/DeleteFilterPipe.html":{},"pipes/SearchUsersPipe.html":{}}}],["users.pipe",{"_index":1265,"title":{},"body":{"components/TenantsComponent.html":{},"components/UsersComponent.html":{}}}],["users.pipe.ts",{"_index":1186,"title":{},"body":{"pipes/SearchUsersPipe.html":{},"coverage.html":{}}}],["users.pipe.ts:10",{"_index":1189,"title":{},"body":{"pipes/SearchUsersPipe.html":{}}}],["users.slice(startindex,endindex+1",{"_index":753,"title":{},"body":{"pipes/PaginationPipe.html":{}}}],["users:user",{"_index":1515,"title":{},"body":{"components/UsersComponent.html":{}}}],["userscomponent",{"_index":103,"title":{"components/UsersComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["userservice",{"_index":127,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/ProfileComponent.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["usersignup",{"_index":159,"title":{"interfaces/UserSignup.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/UserSignup.html":{},"coverage.html":{}}}],["usersignupcomponent",{"_index":21,"title":{"components/UserSignupComponent.html":{}},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"coverage.html":{}}}],["usersingup",{"_index":122,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usersingup(user",{"_index":158,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["usersingup(user:usersignup):observable",{"_index":194,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["userslist",{"_index":1344,"title":{},"body":{"injectables/UserService.html":{}}}],["userslist:behaviorsubject",{"_index":1361,"title":{},"body":{"injectables/UserService.html":{}}}],["ut",{"_index":398,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["validationservice",{"_index":789,"title":{"injectables/ValidationService.html":{}},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{},"injectables/ValidationService.html":{},"coverage.html":{}}}],["validatorfn",{"_index":1528,"title":{},"body":{"injectables/ValidationService.html":{}}}],["validators",{"_index":643,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["value",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"pipes/DeleteFilterPipe.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"injectables/ProjectService.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/TenantService.html":{},"components/TenantsComponent.html":{},"pipes/TimesPipe.html":{},"components/UserItemComponent.html":{},"injectables/UserService.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/AuthorizeComponent.html":{},"components/DashboardComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/HomeComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/NotFoundComponent.html":{},"components/PricingComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["variable",{"_index":1545,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1601,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["velit",{"_index":384,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["version",{"_index":1598,"title":{},"body":{"properties.html":{}}}],["view",{"_index":1334,"title":{},"body":{"components/UserItemComponent.html":{}}}],["viewchild",{"_index":1021,"title":{},"body":{"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{}}}],["visible",{"_index":1315,"title":{},"body":{"components/UserItemComponent.html":{}}}],["vitae",{"_index":564,"title":{},"body":{"components/HomeComponent.html":{}}}],["void",{"_index":142,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/AuthorizeComponent.html":{},"components/DeveloperComponent.html":{},"components/ErrorComponent.html":{},"components/FooterComponent.html":{},"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{},"components/ResetPasswordComponent.html":{},"components/TenantsComponent.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{},"components/UsersComponent.html":{}}}],["voluptatem",{"_index":568,"title":{},"body":{"components/HomeComponent.html":{}}}],["voluptatibus",{"_index":403,"title":{},"body":{"components/DeveloperComponent.html":{}}}],["want",{"_index":284,"title":{},"body":{"components/AuthorizeComponent.html":{},"components/PricingComponent.html":{},"components/ProjectItemComponent.html":{},"components/ProjectsComponent.html":{}}}],["web",{"_index":479,"title":{},"body":{"components/FooterComponent.html":{},"components/PricingComponent.html":{}}}],["website",{"_index":809,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/TenantSignup.html":{},"interfaces/User.html":{},"components/UserItemComponent.html":{},"components/UserSignupComponent.html":{}}}],["website?:string",{"_index":1236,"title":{},"body":{"interfaces/TenantSignup.html":{}}}],["websites",{"_index":490,"title":{},"body":{"components/FooterComponent.html":{}}}],["welcome",{"_index":545,"title":{},"body":{"components/HomeComponent.html":{}}}],["went",{"_index":454,"title":{},"body":{"components/ErrorComponent.html":{},"components/UserSignupComponent.html":{}}}],["window.location.href=\"http://localhost:3000/auth/github",{"_index":663,"title":{},"body":{"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["window.location.href=\"http://localhost:3000/auth/google",{"_index":662,"title":{},"body":{"components/LoginComponent.html":{},"components/UserSignupComponent.html":{}}}],["window.location.href=`https://${this.project.callbackurl}/${res.data.result.authorizationcode",{"_index":282,"title":{},"body":{"components/AuthorizeComponent.html":{}}}],["works",{"_index":522,"title":{},"body":{"components/GithubCallbackComponent.html":{},"components/GoogleCallbackComponent.html":{}}}],["wrong",{"_index":455,"title":{},"body":{"components/ErrorComponent.html":{},"components/UserSignupComponent.html":{}}}],["yes",{"_index":153,"title":{},"body":{"injectables/AuthenticationService.html":{},"components/ProjectItemComponent.html":{}}}],["z",{"_index":814,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserSignupComponent.html":{}}}],["z0",{"_index":812,"title":{},"body":{"components/ProfileComponent.html":{},"components/UserSignupComponent.html":{}}}],["z\\d@$!%*?&]{8",{"_index":821,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["z])(?=.*[a",{"_index":819,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&])[a",{"_index":820,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["za",{"_index":811,"title":{},"body":{"components/ProfileComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserSignupComponent.html":{}}}],["zone.js",{"_index":1590,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                NavbarComponent\n                                UserSignupComponent\n                                PricingComponent\n                                FooterComponent\n                                LoaderComponent\n                            ToastModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AuthGate'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { PricingComponent } from '../components/pricing/pricing.component';\nimport { FooterComponent } from '../components/Core/footer/footer.component';\nimport { NavbarComponent } from '../components/Core/navbar/navbar.component';\nimport { UserSignupComponent } from '../components/Authorization/user-signup/user-signup.component';\nimport { LoaderComponent } from '../components/Core/loader/loader.component';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet,NavbarComponent,UserSignupComponent, PricingComponent, FooterComponent,LoaderComponent,ToastModule],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css',\n  providers:[MessageService]\n})\nexport class AppComponent {\n  title = 'AuthGate';\n}\n\n    \n\n    \n        \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logIn\n                            \n                            \n                                logOut\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resetPasswordRequest\n                            \n                            \n                                setUser\n                            \n                            \n                                tenantSingup\n                            \n                            \n                                userSingup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient, _userService: UserService, _tenantService: TenantService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/services/authentication.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tenantService\n                                                  \n                                                        \n                                                                        TenantService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logIn\n                        \n                    \n                \n            \n            \n                \nlogIn(login: SignIn)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                login\n                                            \n                                                            SignIn\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(form: UpdatePassword)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                            UpdatePassword\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordRequest\n                        \n                    \n                \n            \n            \n                \nresetPasswordRequest(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUser\n                        \n                    \n                \n            \n            \n                \nsetUser(user: User, token?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                token\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tenantSingup\n                        \n                    \n                \n            \n            \n                \ntenantSingup(tenant: TenantSignup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                tenant\n                                            \n                                                            TenantSignup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSingup\n                        \n                    \n                \n            \n            \n                \nuserSingup(user: UserSignup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/authentication.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserSignup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `http://localhost:3000/auth/`\n                    \n                \n                    \n                        \n                                Defined in src/services/authentication.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({} as User)\n                    \n                \n                    \n                        \n                                Defined in src/services/authentication.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { UserSignup } from '../interfaces/user-signup';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from '../interfaces/user';\nimport { TenantSignup } from '../interfaces/tenant-signup';\nimport { SignIn } from '../interfaces/sign-in';\nimport { UserService } from './user.service';\nimport { TenantService } from './tenant.service';\nimport { Router } from '@angular/router';\nimport { UpdatePassword } from '../interfaces/update-password';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  baseUrl:string = `http://localhost:3000/auth/`;\n  user:BehaviorSubject = new BehaviorSubject({} as User);\n  \n  constructor(\n    private _http: HttpClient,\n    private _userService: UserService,\n    private _tenantService:TenantService,\n    private _router:Router) \n    {\n      if(localStorage.getItem('userID') && localStorage.getItem('role') ){\n        let id = localStorage.getItem('userID');\n        let role = localStorage.getItem('role');\n        if((role == 'user' || role == 'admin') && id){\n          _userService.getByID(id).subscribe({\n            next:(res)=>{\n              this.user.next(res.data);\n            },\n            error:err=>{\n              this.logOut();\n              _router.navigateByUrl('/error');\n            }\n          });\n        }else if (role == 'tenant' && id){\n          _tenantService.getByID(id).subscribe({\n            next:(res)=>{\n              this.user.next(res.data);\n            },\n            error:err=>{\n              this.logOut();\n              _router.navigateByUrl('/error');\n            }\n          });\n        }\n      }else{\n        // this.logOut();\n        // _router.navigateByUrl('/error');\n      }\n      \n      \n   }\n\n  userSingup(user:UserSignup):Observable{\n    return this._http.post(this.baseUrl+\"registeruser\",user);\n  }\n\n  tenantSingup(tenant:TenantSignup):Observable{\n    return this._http.post(this.baseUrl+\"registertenant\",tenant);\n  }\n\n  logIn(login:SignIn):Observable{\n    return this._http.post(this.baseUrl+\"login\",login);\n  }\n\n  setUser(user:User,token?:string){\n    this.user.next(user);\n    if(token){\n      localStorage.setItem(\"token\", `${token}`);\n    }\n    localStorage.setItem(\"userID\", this.user.value._id??\"\");\n    localStorage.setItem(\"role\", this.user.value.role??\"\");\n  }\n\n  logOut(){\n    localStorage.removeItem('token');\n    localStorage.removeItem('userID');\n    localStorage.removeItem('role');\n    this.user.next({} as User);\n  }\n  \n  resetPasswordRequest(email:string):Observable{\n    return this._http.post(this.baseUrl+\"reset-password/request\",{\n      email\n    })\n  }\n\n  resetPassword(form:UpdatePassword):Observable{\n    return this._http.post(this.baseUrl+\"reset-password\",form)\n  }\n  \n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthorizeComponent.html":{"url":"components/AuthorizeComponent.html","title":"component - AuthorizeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthorizeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Authorization/authorize/authorize.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-authorize\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./authorize.component.html\n            \n\n\n\n            \n                styleUrl\n                ./authorize.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                            \n                                projectID\n                            \n                            \n                                subscriptions\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                confirm\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService, _authenticationService: AuthenticationService, _projectService: ProjectService, _activatedRoute: ActivatedRoute, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/components/Authorization/authorize/authorize.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/authorize/authorize.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirm\n                        \n                    \n                \n            \n            \n                \nconfirm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/authorize/authorize.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/authorize/authorize.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/authorize/authorize.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        project\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Default value : {} as Project\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/authorize/authorize.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectID\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/authorize/authorize.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/authorize/authorize.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/authorize/authorize.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProjectService } from '../../../services/project.service';\nimport { Project } from '../../../interfaces/project';\nimport { User } from '../../../interfaces/user';\nimport { UserService } from '../../../services/user.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-authorize',\n  standalone: true,\n  imports: [],\n  templateUrl: './authorize.component.html',\n  styleUrl: './authorize.component.css'\n})\nexport class AuthorizeComponent implements OnInit,OnDestroy{\n  projectID:string|null=null;\n  project:Project = {} as Project;\n  user:User = {} as User;\n  subscriptions:Subscription[]=[];\n  constructor(\n    private _userService:UserService,\n    private _authenticationService:AuthenticationService,\n    private _projectService:ProjectService,\n    private _activatedRoute:ActivatedRoute,\n    private _router:Router\n  ){\n    //console.log(this._authenticationService.user.value);\n\n  }\n\n  ngOnInit(): void {\n    const sub =this._activatedRoute.paramMap.subscribe(params => { \n      this.projectID = params.get('projID');\n    });\n    this.subscriptions.push(sub);\n    //console.log(this._authenticationService.user.value);\n    \n    if(!localStorage.getItem('token')){\n      this._projectService.projectID = this.projectID;\n      this._router.navigateByUrl('/login');\n    }else{\n      this._projectService.projectID=null;\n      if(this.projectID){\n        this._projectService.getByID(this.projectID).subscribe({\n          next:(res)=>{\n            this.project=res.data;\n          },\n          error:(err)=>{\n            console.log(err);\n            \n            //this._router.navigateByUrl('/error');\n          }\n        })\n      }\n      this._authenticationService.user.subscribe(newUser=>{\n        this.user=newUser;\n      })\n    }\n  }\n\n  ngOnDestroy(): void {\n      this.subscriptions.forEach(sub=>sub.unsubscribe());\n  }\n\n  confirm(){\n    if(this.projectID){\n      this._userService.addUserToProject(this.projectID).subscribe({\n        next:(res)=>{\n          console.log(res);\n          window.location.href=`https://${this.project.callBackUrl}/${res.data.result.authorizationCode}`\n        },\n        error:(err)=>{\n          console.log(err);\n        }\n      });\n    }\n  }\n  cancel(){\n    this._router.navigateByUrl('/home');\n  }\n}\n\n    \n\n    \n        \n  Authorize\n  \n    \n      \n        Confirm that you want to sign in to\n        \n          {{ project.name }} as {{ user.name }}\n        \n        {{ user.email }}\n        By continuing, you agree that AuthGate will share your name, email address, and profile picture with {{project.name}}\n        Confirm\n        Cancel\n      \n    \n    \n      \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Authorize                    Confirm that you want to sign in to                  {{ project.name }} as {{ user.name }}                {{ user.email }}        By continuing, you agree that AuthGate will share your name, email address, and profile picture with {{project.name}}        Confirm        Cancel                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AuthorizeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Admin/dashboard/dashboard.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dashboard.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [RouterOutlet,RouterLink,RouterLinkActive],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.css'\n})\nexport class DashboardComponent {\n\n}\n\n    \n\n    \n        \n\n    Dashboard\n    \n        \n            \n            \n                \n                    \n                        \n                        Users\n                    \n                \n            \n            \n                \n                \n                    \n                    Tenants\n                \n            \n            \n        \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Dashboard                                                                                                                        Users                                                                                                                                    Tenants                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DeleteFilterPipe.html":{"url":"pipes/DeleteFilterPipe.html","title":"pipe - DeleteFilterPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DeleteFilterPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/delete-filter.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        deleteFilter\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(users: User[], value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pipes/delete-filter.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                users\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../interfaces/user';\n\n@Pipe({\n  name: 'deleteFilter',\n  standalone: true\n})\nexport class DeleteFilterPipe implements PipeTransform {\n\n  transform(users: User[],value:string): User[] {\n    if(value == \"not-deleted\")return users.filter(user => !user.deleted);\n    else if(value == \"deleted\")return users.filter(user => user.deleted);\n    else return users;\n    \n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DeveloperComponent.html":{"url":"components/DeveloperComponent.html","title":"component - DeveloperComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DeveloperComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Information/developer/developer.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-developer\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./developer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./developer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                code\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyCode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        copyCode\n                        \n                    \n                \n            \n            \n                \ncopyCode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Information/developer/developer.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `  [HttpGet(\"{id}\")]\n        public IActionResult getById(string id)\n        {\n            var rent=_unitOfWork.CustomerRentCarRepo.getByStringId(id);\n            if (rent == null) return BadRequest();\n            var dto = getCarRentDTO(rent);\n            ReturnDTO returnDTO = new ReturnDTO();\n            returnDTO.totalResults = 1;\n            var res = new List() { dto };\n            returnDTO.Data=res;\n            return Ok(returnDTO);\n        }\n            [HttpPost]\n        async public Task Add(CustomerRentCarDTO dto)\n        {\n            var res = await getCustomerRentCarModel(dto);\n            if(res == null) return BadRequest();\n            res.ReservationNumber = DateTime.Now.ToString(\"HHmmssddMMyyyy\") + res.Customer.Id;\n\n            _unitOfWork.CustomerRentCarRepo.Add(res);\n            _unitOfWork.saveChanges();\n            return Created();\n        }\n\n        [HttpPatch]\n        async public Task Update(CustomerRentCarDTO dto)\n        {\n            var rent = await getCustomerRentCarModel(dto);\n            if (rent == null) return BadRequest();\n             _unitOfWork.CustomerRentCarRepo.update(rent);\n            _unitOfWork.saveChanges();\n            return Ok(rent);\n        }\n        [HttpDelete]\n        public IActionResult Delete(string id) {\n            var rent = _unitOfWork.CustomerRentCarRepo.getByStringId(id);\n            if (rent == null) return BadRequest();\n            _unitOfWork.CustomerRentCarRepo.delete(rent);\n            _unitOfWork.saveChanges();\n            return Ok();\n        }`\n                    \n                \n                    \n                        \n                                Defined in src/components/Information/developer/developer.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-developer',\n  standalone: true,\n  imports: [],\n  templateUrl: './developer.component.html',\n  styleUrl: './developer.component.css'\n})\nexport class DeveloperComponent {\n\n  code:string=`  [HttpGet(\"{id}\")]\n        public IActionResult getById(string id)\n        {\n            var rent=_unitOfWork.CustomerRentCarRepo.getByStringId(id);\n            if (rent == null) return BadRequest();\n            var dto = getCarRentDTO(rent);\n            ReturnDTO returnDTO = new ReturnDTO();\n            returnDTO.totalResults = 1;\n            var res = new List() { dto };\n            returnDTO.Data=res;\n            return Ok(returnDTO);\n        }\n            [HttpPost]\n        async public Task Add(CustomerRentCarDTO dto)\n        {\n            var res = await getCustomerRentCarModel(dto);\n            if(res == null) return BadRequest();\n            res.ReservationNumber = DateTime.Now.ToString(\"HHmmssddMMyyyy\") + res.Customer.Id;\n\n            _unitOfWork.CustomerRentCarRepo.Add(res);\n            _unitOfWork.saveChanges();\n            return Created();\n        }\n\n        [HttpPatch]\n        async public Task Update(CustomerRentCarDTO dto)\n        {\n            var rent = await getCustomerRentCarModel(dto);\n            if (rent == null) return BadRequest();\n             _unitOfWork.CustomerRentCarRepo.update(rent);\n            _unitOfWork.saveChanges();\n            return Ok(rent);\n        }\n        [HttpDelete]\n        public IActionResult Delete(string id) {\n            var rent = _unitOfWork.CustomerRentCarRepo.getByStringId(id);\n            if (rent == null) return BadRequest();\n            _unitOfWork.CustomerRentCarRepo.delete(rent);\n            _unitOfWork.saveChanges();\n            return Ok();\n        }`\n\n\n\n\n        copyCode(){\n          navigator.clipboard.writeText(this.code);\n        }\n}\n\n\n\n    \n\n    \n        \n  Developers\n  \n    \n      1. First step is asdasdasdasd\n      Lorem ipsum dolor sit amet consectetur, adipisicing elit. Beatae odit quo aliquam nisi velit magni natus asperiores eaque, debitis recusandae tempora inventore ducimus saepe hic dignissimos ipsum perferendis, ut, similique eos? Atque minus nisi voluptatibus, velit aperiam delectus eos et commodi dolor ipsam placeat sequi! Consectetur odio ullam ea quibusdam explicabo neque porro aliquam. Explicabo suscipit cumque distinctio natus minima.\n      2. Second step is asdasdasdasd\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Beatae odit quo aliquam nisi velit magni natus asperiores eaque, debitis recusandae tempora inventore ducimus saepe hic dignissimos ipsum perferendis, ut, similique eos? Atque minus nisi voluptatibus, velit aperiam delectus eos et commodi dolor ipsam placeat sequi! Consectetur odio ullam ea quibusdam explicabo neque porro aliquam. Explicabo suscipit cumque distinctio natus minima.\n      3. Third step is asdasdasdasd\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Beatae odit quo aliquam nisi velit magni natus asperiores eaque, debitis recusandae tempora inventore ducimus saepe hic dignissimos ipsum perferendis, ut, similique eos? Atque minus nisi voluptatibus, velit aperiam delectus eos et commodi dolor ipsam placeat sequi! Consectetur odio ullam ea quibusdam explicabo neque porro aliquam. Explicabo suscipit cumque distinctio natus minima.\n      4. Forth step is asdasdasdasd\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Beatae odit quo aliquam nisi velit magni natus asperiores eaque, debitis recusandae tempora inventore ducimus saepe hic dignissimos ipsum perferendis, ut, similique eos? Atque minus nisi voluptatibus, velit aperiam delectus eos et commodi dolor ipsam placeat sequi! Consectetur odio ullam ea quibusdam explicabo neque porro aliquam. Explicabo suscipit cumque distinctio natus minima.\n      5. Fifth step is asdasdasdasd\n            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Beatae odit quo aliquam nisi velit magni natus asperiores eaque, debitis recusandae tempora inventore ducimus saepe hic dignissimos ipsum perferendis, ut, similique eos? Atque minus nisi voluptatibus, velit aperiam delectus eos et commodi dolor ipsam placeat sequi! Consectetur odio ullam ea quibusdam explicabo neque porro aliquam. Explicabo suscipit cumque distinctio natus minima.\n    \n    \n    \n        \n        {{code}}\n        \n    \n\n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Developers            1. First step is asdasdasdasd      Lorem ipsum dolor sit amet consectetur, adipisicing elit. Beatae odit quo aliquam nisi velit magni natus asperiores eaque, debitis recusandae tempora inventore ducimus saepe hic dignissimos ipsum perferendis, ut, similique eos? Atque minus nisi voluptatibus, velit aperiam delectus eos et commodi dolor ipsam placeat sequi! Consectetur odio ullam ea quibusdam explicabo neque porro aliquam. Explicabo suscipit cumque distinctio natus minima.      2. Second step is asdasdasdasd            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Beatae odit quo aliquam nisi velit magni natus asperiores eaque, debitis recusandae tempora inventore ducimus saepe hic dignissimos ipsum perferendis, ut, similique eos? Atque minus nisi voluptatibus, velit aperiam delectus eos et commodi dolor ipsam placeat sequi! Consectetur odio ullam ea quibusdam explicabo neque porro aliquam. Explicabo suscipit cumque distinctio natus minima.      3. Third step is asdasdasdasd            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Beatae odit quo aliquam nisi velit magni natus asperiores eaque, debitis recusandae tempora inventore ducimus saepe hic dignissimos ipsum perferendis, ut, similique eos? Atque minus nisi voluptatibus, velit aperiam delectus eos et commodi dolor ipsam placeat sequi! Consectetur odio ullam ea quibusdam explicabo neque porro aliquam. Explicabo suscipit cumque distinctio natus minima.      4. Forth step is asdasdasdasd            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Beatae odit quo aliquam nisi velit magni natus asperiores eaque, debitis recusandae tempora inventore ducimus saepe hic dignissimos ipsum perferendis, ut, similique eos? Atque minus nisi voluptatibus, velit aperiam delectus eos et commodi dolor ipsam placeat sequi! Consectetur odio ullam ea quibusdam explicabo neque porro aliquam. Explicabo suscipit cumque distinctio natus minima.      5. Fifth step is asdasdasdasd            Lorem ipsum dolor sit amet consectetur, adipisicing elit. Beatae odit quo aliquam nisi velit magni natus asperiores eaque, debitis recusandae tempora inventore ducimus saepe hic dignissimos ipsum perferendis, ut, similique eos? Atque minus nisi voluptatibus, velit aperiam delectus eos et commodi dolor ipsam placeat sequi! Consectetur odio ullam ea quibusdam explicabo neque porro aliquam. Explicabo suscipit cumque distinctio natus minima.                            {{code}}              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DeveloperComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Core/error/error.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n            \n                styleUrl\n                ./error.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sub\n                            \n                            \n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/components/Core/error/error.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Core/error/error.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/components/Core/error/error.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/components/Core/error/error.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-error',\n  standalone: true,\n  imports: [],\n  templateUrl:'./error.component.html',\n  styleUrl: './error.component.css'\n})\nexport class ErrorComponent implements OnDestroy{\n  timer:number = 5;\n  sub:any;\n  constructor(private _router:Router){\n    this.sub=setInterval(() => {\n      this.timer--;\n      if(this.timer == 0){\n        _router.navigateByUrl('/home');\n      }\n    }, 1000);\n  }\n\n  ngOnDestroy(): void {\n      if(this.sub){\n        clearInterval(this.sub);\n      }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    So Sorry! \n                    something went wrong\n                \n                you will be redirected to Home page in {{timer}} seconds\n            \n        \n        \n            \n                \n            \n        \n    \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            So Sorry!                     something went wrong                                you will be redirected to Home page in {{timer}} seconds                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Core/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n            \n                styleUrl\n                ./footer.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                sub\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/components/Core/footer/footer.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Core/footer/footer.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : {} as Subscription\n                    \n                \n                    \n                        \n                                Defined in src/components/Core/footer/footer.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/components/Core/footer/footer.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { User } from '../../../interfaces/user';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [],\n  templateUrl: './footer.component.html',\n  styleUrl: './footer.component.css'\n})\nexport class FooterComponent implements OnInit{\n  user:User= {};\n  sub:Subscription = {} as Subscription;\n  constructor(private _authenticationService:AuthenticationService){}\n\n  ngOnInit(): void {\n      this._authenticationService.user.subscribe(newUser =>this.user = newUser);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n            \n                \n                    \n                        AuthGate\n                        Phone: +1 5589 55488 55\n                        Email: AuthGate.gmail.com\n                    \n                \n                \n                    \n                        Useful Links\n                         Home\n                         About us\n                         Services\n                    \n                \n                \n                    \n                        Our Services\n                          Web Development\n                          App Development\n                          SEO Services\n                    \n                \n                \n                    \n                        \n                            Streamline your login experience! Our authentication service empowers users to seamlessly access partner websites with a single login.\n                        \n                    \n                                    \n            \n            \n                \n                    \n                        © Copyright AuthGate. All Rights Reserved\n                    \n            \n                    \n                      \n                         \n                              \n                         \n                         \n                              \n                         \n                         \n                              \n                             \n                         \n                              \n                           \n                           \n                              \n                         \n                      \n                  \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    AuthGate                        Phone: +1 5589 55488 55                        Email: AuthGate.gmail.com                                                                                                Useful Links                         Home                         About us                         Services                                                                                                Our Services                          Web Development                          App Development                          SEO Services                                                                                                                            Streamline your login experience! Our authentication service empowers users to seamlessly access partner websites with a single login.                                                                                                                                                                    © Copyright AuthGate. All Rights Reservedn    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GithubCallbackComponent.html":{"url":"components/GithubCallbackComponent.html","title":"component - GithubCallbackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GithubCallbackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Authorization/github-callback/github-callback.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-github-callback\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./github-callback.component.html\n            \n\n\n\n            \n                styleUrl\n                ./github-callback.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _projectService\n                            \n                            \n                                sub\n                            \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_projectService: ProjectService, _activatedRoute: ActivatedRoute, _autehnticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/components/Authorization/github-callback/github-callback.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _autehnticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/github-callback/github-callback.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/github-callback/github-callback.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/github-callback/github-callback.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : {} as Subscription\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/github-callback/github-callback.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/github-callback/github-callback.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/github-callback/github-callback.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { Subscription } from 'rxjs';\nimport { ProjectService } from '../../../services/project.service';\n\n@Component({\n  selector: 'app-github-callback',\n  standalone: true,\n  imports: [],\n  templateUrl: './github-callback.component.html',\n  styleUrl: './github-callback.component.css'\n})\nexport class GithubCallbackComponent implements OnInit,OnDestroy{\n  token:string|null=null;\n  user:any = {};\n  sub:Subscription={} as Subscription;\n  constructor(\n    public _projectService:ProjectService,\n    private _activatedRoute:ActivatedRoute,\n    private _autehnticationService:AuthenticationService,\n    private _router:Router\n  ){\n\n  }\n\n  ngOnInit(): void {\n    this.sub =this._activatedRoute.queryParams.subscribe(params => { \n      this.token = params['token'];\n      this.user = params['user'];\n      this.user = JSON.parse(decodeURIComponent(this.user))\n      this._autehnticationService.setUser(this.user,this.token??\"\");\n      if(this._projectService.projectID){\n        this._router.navigateByUrl(`/authorize/${this._projectService.projectID}`);\n      }else{\n        this._router.navigateByUrl('/home');\n      }\n    }); \n  }\n\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n\n    \n\n    \n        github-callback works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'github-callback works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GithubCallbackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GoogleCallbackComponent.html":{"url":"components/GoogleCallbackComponent.html","title":"component - GoogleCallbackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GoogleCallbackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Authorization/google-callback/google-callback.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-google-callback\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./google-callback.component.html\n            \n\n\n\n            \n                styleUrl\n                ./google-callback.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _projectService\n                            \n                            \n                                sub\n                            \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_projectService: ProjectService, _activatedRoute: ActivatedRoute, _autehnticationService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/components/Authorization/google-callback/google-callback.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _activatedRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _autehnticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/google-callback/google-callback.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/google-callback/google-callback.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/google-callback/google-callback.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : {} as Subscription\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/google-callback/google-callback.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/google-callback/google-callback.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/google-callback/google-callback.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { Subscription } from 'rxjs';\nimport { ProjectService } from '../../../services/project.service';\n\n@Component({\n  selector: 'app-google-callback',\n  standalone: true,\n  imports: [],\n  templateUrl: './google-callback.component.html',\n  styleUrl: './google-callback.component.css'\n})\nexport class GoogleCallbackComponent implements OnInit,OnDestroy{\n  token:string|null=null;\n  user:any = {};\n  sub:Subscription={} as Subscription;\n  constructor(\n    public _projectService:ProjectService,\n    private _activatedRoute:ActivatedRoute,\n    private _autehnticationService:AuthenticationService,\n    private _router:Router\n  ){\n\n  }\n\n  ngOnInit(): void {\n    this.sub =this._activatedRoute.queryParams.subscribe(params => { \n      this.token = params['token'];\n      this.user = params['user'];\n      this.user = JSON.parse(decodeURIComponent(this.user))\n      this._autehnticationService.setUser(this.user,this.token??\"\");\n\n      if(this._projectService.projectID){\n        this._router.navigateByUrl(`/authorize/${this._projectService.projectID}`);\n      }else{\n        this._router.navigateByUrl('/home');\n      }\n    }); \n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  \n}\n\n    \n\n    \n        google-callback works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'google-callback works!'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GoogleCallbackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                PricingComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { trigger, state, style, animate, transition, keyframes } from '@angular/animations';\nimport { PricingComponent } from '../pricing/pricing.component';\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [PricingComponent],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.css',\n  animations: [\n    trigger('upDownAnimation', [\n      transition('* => *', [\n        animate('2s infinite', keyframes([\n          style({ transform: 'translateY(0)', offset: 0 }),\n          style({ transform: 'translateY(-50px)', offset: 0.5 }),\n          style({ transform: 'translateY(0)', offset: 1 })\n        ]))\n      ])\n    ])\n  ]\n})\nexport class HomeComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        Welcome to AuthGate \n                    \n                    \n                        we deliver secure and efficient authentication solutions.\n                    \n                \n            \n            \n                \n            \n        \n        \n    \n\n\n    \n        Services\n        \n            \n                \n                    Single login\n                    Lorem ipsum, dolor sit amet consectetur adipisicing elit. \n                        Maiores officiis iste nihil, alias corporis illum accusantium? Fuga,\n                         exercitationem officiis modi animi ipsa aliquid. Vitae sint, tenetur corporis autem animi voluptatem?\n                \n            \n            \n                \n                    \n                \n            \n        \n\n        \n            \n                \n                    \n                \n            \n            \n                \n                    Single login\n                    Lorem ipsum, dolor sit amet consectetur adipisicing elit. \n                        Maiores officiis iste nihil, alias corporis illum accusantium? Fuga,\n                         exercitationem officiis modi animi ipsa aliquid. Vitae sint, tenetur corporis autem animi voluptatem?\n                \n            \n        \n      \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    Welcome to AuthGate                                                                 we deliver secure and efficient authentication solutions.                                                                                                                        Services                                                        Single login                    Lorem ipsum, dolor sit amet consectetur adipisicing elit.                         Maiores officiis iste nihil, alias corporis illum accusantium? Fuga,                         exercitationem officiis modi animi ipsa aliquid. Vitae sint, tenetur corporis autem animi voluptatem?                                                                                                                                                                                                                                                    Single login                    Lorem ipsum, dolor sit amet consectetur adipisicing elit.                         Maiores officiis iste nihil, alias corporis illum accusantium? Fuga,                         exercitationem officiis modi animi ipsa aliquid. Vitae sint, tenetur corporis autem animi voluptatem?                                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Core/loader/loader.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loader.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_loaderService: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/components/Core/loader/loader.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _loaderService\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Core/loader/loader.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Core/loader/loader.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Core/loader/loader.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/components/Core/loader/loader.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { LoaderService } from '../../../services/loader.service';\n\n@Component({\n  selector: 'app-loader',\n  standalone: true,\n  imports: [],\n  templateUrl: './loader.component.html',\n  styleUrl: './loader.component.css'\n})\nexport class LoaderComponent implements OnInit,OnDestroy{\n  isLoading:boolean = false;\n  sub:Subscription = new Subscription();\n  constructor(private _loaderService:LoaderService){}\n\n  ngOnInit(): void {\n      this.sub = this._loaderService.loading.subscribe(loader=>{\n        this.isLoading = loader;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n@if(isLoading){\n    \n        \n    \n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if(isLoading){                }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _globalLoaderCounter\n                            \n                            \n                                    Public\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setLoader\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/loader.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setLoader\n                        \n                    \n                \n            \n            \n                \nsetLoader(show: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/loader.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                show\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _globalLoaderCounter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/services/loader.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/services/loader.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n  public _globalLoaderCounter:number = 0;\n  public loading: BehaviorSubject = new BehaviorSubject(false);\n  constructor() { }\n  setLoader(show: boolean) {\n    if (show) {\n      this._globalLoaderCounter++;\n      \n    } else if(this._globalLoaderCounter>0) {\n      this._globalLoaderCounter--;\n    }\n    \n    if(this._globalLoaderCounter>0 && !this.loading.value){\n      this.loading.next(true);\n    } else if(this._globalLoaderCounter==0 && this.loading.value){\n     this.loading.next(false);\n    }\n    // console.log(this._globalLoaderCounter,this.loading.value);\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Authorization/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            DialogModule\n                            ReactiveFormsModule\n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _projectService\n                            \n                            \n                                isShowPassword\n                            \n                            \n                                loginForm\n                            \n                            \n                                resetPasswordForm\n                            \n                            \n                                showErrors\n                            \n                            \n                                showResetPasswordDialog\n                            \n                            \n                                showResetPasswordErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                register\n                            \n                            \n                                resetPassword\n                            \n                            \n                                signInWithGitHub\n                            \n                            \n                                signInWithGoogle\n                            \n                            \n                                toggleShowPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_messageService: MessageService, _authService: AuthenticationService, _projectService: ProjectService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/components/Authorization/login/login.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/login/login.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n            \n                \nresetPassword(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/login/login.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInWithGitHub\n                        \n                    \n                \n            \n            \n                \nsignInWithGitHub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/login/login.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInWithGoogle\n                        \n                    \n                \n            \n            \n                \nsignInWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/login/login.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShowPassword\n                        \n                    \n                \n            \n            \n                \ntoggleShowPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/login/login.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isShowPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/login/login.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    password: new FormControl('',Validators.required),\n    email: new FormControl('',[Validators.required,Validators.email]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/login/login.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl('',[Validators.required,Validators.email]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/login/login.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/login/login.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showResetPasswordDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showResetPasswordErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink, RouterLinkActive } from '@angular/router';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { ProjectService } from '../../../services/project.service';\nimport { DialogModule } from 'primeng/dialog';\n\nimport { MessageService } from 'primeng/api';\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [DialogModule,ReactiveFormsModule,RouterLink,RouterLinkActive],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css',\n  providers:[]\n})\nexport class LoginComponent {\n  isShowPassword:boolean = false;\n  showErrors:boolean = false;\n  showResetPasswordDialog: boolean = false;\n  showResetPasswordErrors:boolean = false;\n  constructor(\n    private _messageService: MessageService,\n    private _authService: AuthenticationService,\n    public _projectService:ProjectService,\n    private _router: Router\n  ){}\n\n \n\n  loginForm = new FormGroup({\n    password: new FormControl('',Validators.required),\n    email: new FormControl('',[Validators.required,Validators.email]),\n  });\n\n  resetPasswordForm = new FormGroup({\n    email: new FormControl('',[Validators.required,Validators.email]),\n  });\n\n  \n\n  register(formGroup: FormGroup) {    \n    if (formGroup.valid) {\n      this._authService.logIn(formGroup.value).subscribe({\n        next:(response) => {\n          this._authService.setUser(response.data.user,response.data.access_token);\n          if(this._projectService.projectID){\n            this._router.navigateByUrl(`/authorize/${this._projectService.projectID}`);\n          }else{\n            this._router.navigateByUrl('/home');\n          }\n          },\n        error: (err) => {\n          this._messageService.add({ severity: 'error', summary: 'Error', detail: 'your email or password is invalid' });\n        }\n      })\n    }else{\n      this.showErrors=true;\n    }\n  }\n\n  toggleShowPassword(){\n    this.isShowPassword=!this.isShowPassword;\n  }\n\n  signInWithGoogle(){\n    window.location.href=\"http://localhost:3000/auth/google\";\n  }\n\n\n  signInWithGitHub(){\n    window.location.href=\"http://localhost:3000/auth/github\";\n  }\n\n  resetPassword(formGroup: FormGroup){\n    if(formGroup.valid){\n      this._authService.resetPassword(formGroup.value).subscribe({\n        next:(res)=>{\n          this._messageService.add({ severity: 'success', summary: 'Success', detail: 'an email has been sent to you ' });\n          this.showResetPasswordDialog=false;\n          console.log(res);\n        },\n        error:(err)=>{\n          this._messageService.add({ severity: 'error', summary: 'Error', detail: 'there is a problem with your email' });\n          console.log(err);\n        }\n      });\n    }else{\n      this.showResetPasswordErrors=true;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                    \n                \n            \n            \n                Sign in\n                @if(this._projectService.projectID){\n                    you need to log in first to continue... \n                }\n                \n                    \n                    \n                    @if(loginForm.get('email')?.errors && (loginForm.get('email')?.touched)|| showErrors){\n                        \n                            @if(loginForm.get('email')?.getError('required')){\n                                \n                                Email is required\n                            }\n                            @if(loginForm.get('email')?.getError('email')){\n                                \n                                Email pattern is invalid\n                            }\n                        \n                    }\n                    \n                        \n                        \n                    \n                    @if((loginForm.get('password')?.errors && (loginForm.get('password')?.touched)|| showErrors)){\n                        \n                            @if(loginForm.get('password')?.getError('required')){\n                                \n                                Password is required\n                            }\n                            \n                        \n                    }\n                    Forgot Password ?\n                    \n\n                    \n                        \n                    \n                \n                \n                    \n                    OR\n                    \n                \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                Don't have an account ? Sign Up\n            \n        \n    \n\n    \n        \n        \n            \n                    @if(resetPasswordForm.get('email')?.errors && (resetPasswordForm.get('email')?.touched)|| showResetPasswordErrors){\n                        \n                            @if(resetPasswordForm.get('email')?.getError('required')){\n                                \n                                Email is required\n                            }\n                            @if(resetPasswordForm.get('email')?.getError('email')){\n                                \n                                Email pattern is invalid\n                            }\n                        \n                    }\n          \n          \n            \n              cancel\n            \n            \n              Send Email\n            \n          \n        \n       \n          \n        \n      \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                        Sign in                @if(this._projectService.projectID){                    you need to log in first to continue...                 }                                                                            @if(loginForm.get(\\'email\\')?.errors && (loginForm.get(\\'email\\')?.touched)|| showErrors){                                                    @if(loginForm.get(\\'email\\')?.getError(\\'required\\')){                                                                Email is required                            }                            @if(loginForm.get(\\'email\\')?.getError(\\'email\\')){                                                                Email pattern is invalid                            }                                            }                                                                                                            @if((loginForm.get(\\'password\\')?.errors && (loginForm.get(\\'password\\')?.touched)|| showErrors)){                                                    @if(loginForm.get(\\'password\\')?.getError(\\'required\\')){                                                                Password is required                            }                                                                        }                    Forgot Password ?                                                                                                                                                            OR                                                                                                                                                                                                                                                                                    Don\\'t have an account ? Sign Up                                                                            @if(resetPasswordForm.get(\\'email\\')?.errors && (resetPasswordForm.get(\\'email\\')?.touched)|| showResetPasswordErrors){                                                    @if(resetPasswordForm.get(\\'email\\')?.getError(\\'required\\')){                                                                Email is required                            }                            @if(resetPasswordForm.get(\\'email\\')?.getError(\\'email\\')){                                                                Email pattern is invalid                            }                                            }                                              cancel                                      Send Email                                                             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Core/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./navbar.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                subscriptions\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/components/Core/navbar/navbar.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Core/navbar/navbar.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Core/navbar/navbar.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Core/navbar/navbar.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Core/navbar/navbar.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/components/Core/navbar/navbar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/components/Core/navbar/navbar.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, RouterLink, RouterLinkActive } from '@angular/router';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { User } from '../../../interfaces/user';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-navbar',\n  standalone: true,\n  imports: [RouterLink,RouterLinkActive],\n  templateUrl: './navbar.component.html',\n  styleUrl: './navbar.component.css'\n})\nexport class NavbarComponent implements OnInit,OnDestroy{\n  isLoggedIn:boolean = false;\n  user:User={} as User;\n  subscriptions:Subscription[]=[];\n  constructor(\n    private _authService:AuthenticationService,\n    private _router:Router\n  ){}\n\n  ngOnInit(): void {\n    const sub =this._authService.user.subscribe(res=>{\n      if(res?._id){\n        this.isLoggedIn = true;\n        this.user = res;\n      }else{\n        this.isLoggedIn = false;\n      }\n    });\n    this.subscriptions.push(sub);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub=>sub.unsubscribe());\n  }\n  logOut(){\n    this._authService.logOut();\n    this._router.navigateByUrl('/home');\n  }\n}\n\n    \n\n    \n        \n  \n    \n      AuthGate\n      \n        \n      \n      \n        \n          \n            Home\n          \n          \n            Developers\n          \n          @if(isLoggedIn){\n                         \n              \n                \n                profile\n            \n            @if(user.role == 'admin'){\n                           \n                \n                  Dashboard\n              \n            }\n            \n            @if(user.role == 'tenant'){\n                           \n                \n                  \n                  Projects\n              \n            }\n            \n              log out\n            \n          }\n          @if(!isLoggedIn){\n            \n              sign up\n            \n            \n              login\n            \n          }\n\n          \n\n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            AuthGate                                                        Home                                Developers                    @if(isLoggedIn){                                                                       profile                        @if(user.role == \\'admin\\'){                                                             Dashboard                          }                        @if(user.role == \\'tenant\\'){                                                                               Projects                          }                          log out                      }          @if(!isLoggedIn){                          sign up                                      login                      }                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotFoundComponent.html":{"url":"components/NotFoundComponent.html","title":"component - NotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Core/not-found/not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-not-found\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./not-found.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  standalone: true,\n  imports: [],\n  templateUrl: './not-found.component.html',\n  styleUrl: './not-found.component.css'\n})\nexport class NotFoundComponent {\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    So Sorry! \n                    The page you are looking for cannot be found\n                \n                Possible Reasons\n                \n                    The address may have been typed incorrectly.\n                    it may be a broken or outdated link.\n                 \n            \n        \n        \n            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            So Sorry!                     The page you are looking for cannot be found                                Possible Reasons                                    The address may have been typed incorrectly.                    it may be a broken or outdated link.                                                                                                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PaginationPipe.html":{"url":"pipes/PaginationPipe.html","title":"pipe - PaginationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PaginationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/pagination.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        pagination\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(users: User[], pageSize: number, pageNumber: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pipes/pagination.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                users\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../interfaces/user';\n\n@Pipe({\n  name: 'pagination',\n  standalone: true\n})\nexport class PaginationPipe implements PipeTransform {\n\n  transform(users: User[],pageSize:number,pageNumber:number): User[] {\n    const startIndex = pageSize*(pageNumber-1);  //4\n    const endIndex = startIndex+pageSize-1; //5\n    return users.slice(startIndex,endIndex+1);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PricingComponent.html":{"url":"components/PricingComponent.html","title":"component - PricingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PricingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/pricing/pricing.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pricing\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./pricing.component.html\n            \n\n\n\n            \n                styleUrl\n                ./pricing.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/components/pricing/pricing.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { User } from '../../interfaces/user';\nimport { AuthenticationService } from '../../services/authentication.service';\n\n@Component({\n  selector: 'app-pricing',\n  standalone: true,\n  imports: [],\n  templateUrl: './pricing.component.html',\n  styleUrl: './pricing.component.css'\n})\nexport class PricingComponent {\n\nconstructor(\n  private _authService:AuthenticationService\n){\n  \n}\n}\n\n    \n\n    \n        \n    \n        \n            Intro\n            $19 /Month\n            For most business that want to optimise thier web queries\n            \n                All Limited Links\n                Own Analytics Platform\n                Chat Support\n                Optimise Hashtags\n                Unlimited Users\n            \n            Choose Plan\n        \n        \n            Intro\n            $19 /Month\n            For most business that want to optimise thier web queries\n            \n                All Limited Links\n                Own Analytics Platform\n                Chat Support\n                Optimise Hashtags\n                Unlimited Users\n            \n            Choose Plan\n        \n        \n            Intro\n            $19 /Month\n            For most business that want to optimise thier web queries\n            \n                All Limited Links\n                Own Analytics Platform\n                Chat Support\n                Optimise Hashtags\n                Unlimited Users\n            \n            Choose Plan\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Intro            $19 /Month            For most business that want to optimise thier web queries                            All Limited Links                Own Analytics Platform                Chat Support                Optimise Hashtags                Unlimited Users                        Choose Plan                            Intro            $19 /Month            For most business that want to optimise thier web queries                            All Limited Links                Own Analytics Platform                Chat Support                Optimise Hashtags                Unlimited Users                        Choose Plan                            Intro            $19 /Month            For most business that want to optimise thier web queries                            All Limited Links                Own Analytics Platform                Chat Support                Optimise Hashtags                Unlimited Users                        Choose Plan            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PricingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            DialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./profile.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isEditMode\n                            \n                            \n                                photoUrl\n                            \n                            \n                                showChangePasswordDialog\n                            \n                            \n                                showChangePasswordErrors\n                            \n                            \n                                subscriptions\n                            \n                            \n                                updateInfoForm\n                            \n                            \n                                updatePasswordForm\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleEditMode\n                            \n                            \n                                updateInfo\n                            \n                            \n                                updatePassword\n                            \n                            \n                                uploadPhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_messageService: MessageService, _authService: AuthenticationService, _tenantService: TenantService, _userService: UserService, _validationService: ValidationService)\n                    \n                \n                        \n                            \n                                Defined in src/components/profile/profile.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tenantService\n                                                  \n                                                        \n                                                                        TenantService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _validationService\n                                                  \n                                                        \n                                                                        ValidationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/profile/profile.component.ts:187\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/profile/profile.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleEditMode\n                        \n                    \n                \n            \n            \n                \ntoggleEditMode()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/profile/profile.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateInfo\n                        \n                    \n                \n            \n            \n                \nupdateInfo(form: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/profile/profile.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(form: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/profile/profile.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadPhoto\n                        \n                    \n                \n            \n            \n                \nuploadPhoto(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/profile/profile.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/profile/profile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"assets/default.png\"\n                    \n                \n                    \n                        \n                                Defined in src/components/profile/profile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showChangePasswordDialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/profile/profile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showChangePasswordErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/profile/profile.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/components/profile/profile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateInfoForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name : new FormControl('',Validators.required),\n    email : new FormControl('',[Validators.required,Validators.email]),\n    phone : new FormControl('',Validators.pattern(/^(?:\\+20|0)?1[0125]\\d{8}$/)),\n    role : new FormControl('',Validators.required),\n    age : new FormControl(15,[Validators.min(13),Validators.max(100)]),\n    address : new FormControl(''),\n    website : new FormControl('',Validators.pattern(/^www\\.[a-zA-Z0-9-]+(\\.[a-zA-Z]+)+$/))\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/profile/profile.component.ts:77\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    oldPassword : new FormControl('',Validators.required),\n    newPassword : new FormControl('',[Validators.required,Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]),\n    confirmNewPassword : new FormControl('',Validators.required),\n  },{validators: this._validationService.passwordMatchValidator('newPassword','confirmNewPassword')})\n                    \n                \n                    \n                        \n                                Defined in src/components/profile/profile.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {} as User\n                    \n                \n                    \n                        \n                                Defined in src/components/profile/profile.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { User } from '../../interfaces/user';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport { CommonModule } from '@angular/common';\nimport { TenantService } from '../../services/tenant.service';\nimport { UserService } from '../../services/user.service';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\nimport { DialogModule } from 'primeng/dialog';\nimport { Subscription } from 'rxjs';\nimport { ValidationService } from '../../services/validation.service';\n\n@Component({\n  selector: 'app-profile',\n  standalone: true,\n  imports: [CommonModule,ReactiveFormsModule,DialogModule],\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.css',\n  providers:[]\n})\nexport class ProfileComponent implements OnInit,OnDestroy{\n  user:User = {} as User;\n  isEditMode: boolean = false;\n  photoUrl:string=\"assets/default.png\";\n  showChangePasswordDialog: boolean = false;\n  subscriptions:Subscription[]=[];\n  showChangePasswordErrors:boolean = false;\n  constructor(\n    private _messageService: MessageService,\n    private _authService:AuthenticationService,\n    private _tenantService:TenantService,\n    private _userService:UserService,\n    private _validationService:ValidationService\n  ){\n    this.user = this._authService.user.value;\n    //console.log(this.user);\n    // console.log(this._authService.user.value._id);\n\n  }\n\n  ngOnInit(): void {\n    \n    const sub =this._authService.user.subscribe((newUser) =>{\n      this.user = newUser;\n      if(this.user?.image?.length){\n        this.photoUrl = this.user.image;\n      }\n      \n      \n    this.updateInfoForm.get('name')?.setValue(this.user.name??\"\")\n    this.updateInfoForm.get('email')?.setValue(this.user.email??\"\")\n    this.updateInfoForm.get('phone')?.setValue(this.user.phone??\"\")\n    this.updateInfoForm.get('role')?.setValue(this.user.role??\"\")\n    if(this.user.role != 'tenant' && this.user.role){\n      this.updateInfoForm.get('age')?.setValue(this.user.age??0)\n    }\n    this.updateInfoForm.get('address')?.setValue(this.user.address??\"\")\n    this.updateInfoForm.get('website')?.setValue(this.user.website??\"\")\n    this.updateInfoForm.disable();\n    });\n    this.subscriptions.push(sub);\n    \n  }\n\n  toggleEditMode() {\n    if(this.updateInfoForm.enabled){\n      this.updateInfoForm.disable();\n      this.isEditMode=false;\n    }else{\n      this.updateInfoForm.enable();\n      this.isEditMode=true;\n      this.updateInfoForm.get('role')?.disable();\n    }\n  }\n\n  updateInfoForm = new FormGroup({\n    name : new FormControl('',Validators.required),\n    email : new FormControl('',[Validators.required,Validators.email]),\n    phone : new FormControl('',Validators.pattern(/^(?:\\+20|0)?1[0125]\\d{8}$/)),\n    role : new FormControl('',Validators.required),\n    age : new FormControl(15,[Validators.min(13),Validators.max(100)]),\n    address : new FormControl(''),\n    website : new FormControl('',Validators.pattern(/^www\\.[a-zA-Z0-9-]+(\\.[a-zA-Z]+)+$/))\n  });\n\n  updatePasswordForm = new FormGroup({\n    oldPassword : new FormControl('',Validators.required),\n    newPassword : new FormControl('',[Validators.required,Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]),\n    confirmNewPassword : new FormControl('',Validators.required),\n  },{validators: this._validationService.passwordMatchValidator('newPassword','confirmNewPassword')});\n\n  uploadPhoto(event:any){\n    const file: File = event.target.files[0];\n      if (file){\n        let formData = new FormData();\n        formData.append('image',file);\n        if(this.user.role == 'tenant' && this.user._id){\n          this._tenantService.updateTenantImage(this.user._id,formData).subscribe({\n            next:(res)=>{console.log(res)\n              this._authService.setUser(res.data);\n              this._messageService.add({ severity: 'success', summary: 'Success', detail: 'your photo is updated successfully' }); \n            },\n            error:(err)=>{\n              this._messageService.add({ severity: 'error', summary: 'Error', detail: 'there was a problem updating your photo' });\n            }\n          })\n        }else if((this.user.role == 'user' ||this.user.role == 'admin') && this.user._id){\n          this._userService.updateUserImage(this.user._id,formData).subscribe({\n            next:(res)=>{console.log(res)\n              this._authService.setUser(res.data);\n              this._messageService.add({ severity: 'success', summary: 'Success', detail: 'your photo is updated successfully' }); \n            },\n            error:(err)=>{\n              this._messageService.add({ severity: 'error', summary: 'Error', detail: 'there was a problem updating your photo' });\n            }\n          })\n        }\n\n      }\n  }\n\n  updateInfo(form:FormGroup){\n    if(form.valid && this.user._id){\n      if((this.user.role == 'user' || this.user.role == 'admin')  && this.user._id){\n        this._userService.updateUser(form.value).subscribe({\n          next:res=>{\n            this._messageService.add({ severity: 'success', summary: 'Success', detail: 'your data is updated successfully' });\n            this._authService.user.next(res.data)\n          },\n          error:(err)=>{\n            console.log(err);\n            \n            this._messageService.add({ severity: 'error', summary: 'Error', detail: 'there was a problem updating your data' });\n          }\n        });\n      }else if (this.user.role == 'tenant'){\n        this._tenantService.updateTenant(form.value).subscribe({\n          next:res=>{\n            this._messageService.add({ severity: 'success', summary: 'Success', detail: 'your data is updated successfully' });\n            this._authService.user.next(res.data)\n          },\n          error:(err)=>{\n            this._messageService.add({ severity: 'error', summary: 'Error', detail: 'there was a problem updating your data' });\n          }\n        });\n      }\n      \n    }else{\n      console.log(form.value);\n    }\n  }\n\n  updatePassword(form:FormGroup){\n    if(form.valid && this.user._id){\n      console.log(form.value);\n      \n      if((this.user.role == 'user' || this.user.role == 'admin')  && this.user._id){\n        this._userService.updatePassword(form.value).subscribe({\n          next:res=>{\n            this._messageService.add({ severity: 'success', summary: 'Success', detail: 'your password is updated successfully' });\n          },\n          error:(err)=>{\n            this._messageService.add({ severity: 'error', summary: 'Error', detail: 'there was a problem updating your password' });\n          }\n        });\n      }else if (this.user.role == 'tenant'){\n        this._tenantService.updatePassword(form.value).subscribe({\n          next:res=>{\n            console.log(res);\n            \n            this._messageService.add({ severity: 'success', summary: 'Success', detail: 'your password is updated successfully' });\n          },\n          error:(err)=>{\n            console.log(err);\n            \n            this._messageService.add({ severity: 'error', summary: 'Error', detail: 'there was a problem updating your password' });\n          }\n        });\n      }\n      this.showChangePasswordDialog= false;\n    }else{\n      this.showChangePasswordErrors=true;\n    }\n  }\n\n  ngOnDestroy(): void {\n      this.subscriptions.forEach(sub=>sub.unsubscribe());\n  }\n  \n\n}\n\n    \n\n    \n        \n  \n    Profile\n\n    \n      \n        \n          \n            \n              \n                Name:\n                \n  \n                @if(updateInfoForm.get('name')?.errors &&\n                updateInfoForm.get('name')?.touched){\n                \n                  @if(updateInfoForm.get('name')?.getError('required')){\n                    \n                  name is required\n                  }\n                \n                }\n              \n  \n              \n                Email:\n                \n                @if(updateInfoForm.get('email')?.errors &&\n                updateInfoForm.get('email')?.touched ){\n                \n                  @if(updateInfoForm.get('email')?.getError('required')){\n                    \n                  email is required\n                  } @if(updateInfoForm.get('email')?.getError('email')){\n                    \n                  email pattern is invalid\n                  }\n                \n                }\n              \n  \n              \n                Role:\n                \n              \n  \n              \n                Phone:\n                \n  \n                @if(updateInfoForm.get('phone')?.errors &&\n                (updateInfoForm.get('phone')?.touched )){\n                \n                  @if(updateInfoForm.get('phone')?.getError('pattern')){\n                    \n                  Invalid Phone number\n                  }\n                \n                }\n              \n  \n              @if (user.role !='tenant') {\n              \n                Age:\n                \n                @if(updateInfoForm.get('age')?.errors &&\n            (updateInfoForm.get('age')?.touched)){\n            \n              @if(updateInfoForm.get('age')?.getError('min') || updateInfoForm.get('age')?.getError('max')){\n                \n              Age must be between 13 ad 100 \n              } \n            \n            }\n              \n              } @if(user.role =='tenant') {\n              \n                address:\n                \n              \n              \n                website:\n                \n                @if(updateInfoForm.get('website')?.errors &&\n                (updateInfoForm.get('website')?.touched )){\n                \n                  @if(updateInfoForm.get('website')?.getError('pattern')){\n                    \n                  Invalid URL\n                  }\n                \n                }\n              \n              }\n            \n          \n        \n        \n          \n            \n              \n                \n                \n                  \n                \n              \n              \n            \n            \n              \n                Edit\n              \n              \n                Save\n              \n              \n                Change Password\n              \n            \n          \n        \n      \n    \n    \n\n    \n      \n        \n          \n            \n            @if(updatePasswordForm.get('oldPassword')?.errors &&(\n            updatePasswordForm.get('oldPassword')?.touched ||\n            showChangePasswordErrors)){\n            \n              @if(updatePasswordForm.get('oldPassword')?.getError('required')){\n               old password is\n                required\n              \n              }\n            \n            }\n\n            \n            @if(updatePasswordForm.get('newPassword')?.errors &&(\n            updatePasswordForm.get('newPassword')?.touched ||\n            showChangePasswordErrors)){\n            \n              @if(updatePasswordForm.get('newPassword')?.getError('required')){\n               new password\n                required\n              } @if(updatePasswordForm.get('newPassword')?.getError('pattern')){\n              confirm Password pattern is invalid and must contain at least\n              \n              \n                one uppercase letter.\n                one digit.\n                special character.\n                minimum length is 8.\n              \n              }\n            \n            }\n\n            \n            @if(updatePasswordForm.get('confirmNewPassword')?.errors\n            &&(updatePasswordForm.get('confirmNewPassword')?.touched ||\n            showChangePasswordErrors)){\n            \n              @if(updatePasswordForm.get('confirmNewPassword')?.getError('required')){\n               confirm new\n                password required\n              }\n              @if(updatePasswordForm.get('confirmNewPassword')?.getError('passwordMismatch')){\n               confirm password\n                doesn't match password\n              }\n            \n            }\n          \n\n          \n            cancel\n          \n          \n            save\n          \n        \n      \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Profile                                                                      Name:                                  @if(updateInfoForm.get(\\'name\\')?.errors &&                updateInfoForm.get(\\'name\\')?.touched){                                  @if(updateInfoForm.get(\\'name\\')?.getError(\\'required\\')){                                      name is required                  }                                }                                              Email:                                @if(updateInfoForm.get(\\'email\\')?.errors &&                updateInfoForm.get(\\'email\\')?.touched ){                                  @if(updateInfoForm.get(\\'email\\')?.getError(\\'required\\')){                                      email is required                  } @if(updateInfoForm.get(\\'email\\')?.getError(\\'email\\')){                                      email pattern is invalid                  }                                }                                              Role:                                                              Phone:                                  @if(updateInfoForm.get(\\'phone\\')?.errors &&                (updateInfoForm.get(\\'phone\\')?.touched )){                                  @if(updateInfoForm.get(\\'phone\\')?.getError(\\'pattern\\')){                                      Invalid Phone number                  }                                }                              @if (user.role !=\\'tenant\\') {                              Age:                                @if(updateInfoForm.get(\\'age\\')?.errors &&            (updateInfoForm.get(\\'age\\')?.touched)){                          @if(updateInfoForm.get(\\'age\\')?.getError(\\'min\\') || updateInfoForm.get(\\'age\\')?.getError(\\'max\\')){                              Age must be between 13 ad 100               }                         }                            } @if(user.role ==\\'tenant\\') {                              address:                                                            website:                                @if(updateInfoForm.get(\\'website\\')?.errors &&                (updateInfoForm.get(\\'website\\')?.touched )){                                  @if(updateInfoForm.get(\\'website\\')?.getError(\\'pattern\\')){                                      Invalid URL                  }                                }                            }                                                                                                                                                                                                                              Edit                                            Save                                            Change Password                                                                                                              @if(updatePasswordForm.get(\\'oldPassword\\')?.errors &&(            updatePasswordForm.get(\\'oldPassword\\')?.touched ||            showChangePasswordErrors)){                          @if(updatePasswordForm.get(\\'oldPassword\\')?.getError(\\'required\\')){               old password is                required                            }                        }                        @if(updatePasswordForm.get(\\'newPassword\\')?.errors &&(            updatePasswordForm.get(\\'newPassword\\')?.touched ||            showChangePasswordErrors)){                          @if(updatePasswordForm.get(\\'newPassword\\')?.getError(\\'required\\')){               new password                required              } @if(updatePasswordForm.get(\\'newPassword\\')?.getError(\\'pattern\\')){              confirm Password pattern is invalid and must contain at least                                            one uppercase letter.                one digit.                special character.                minimum length is 8.                            }                        }                        @if(updatePasswordForm.get(\\'confirmNewPassword\\')?.errors            &&(updatePasswordForm.get(\\'confirmNewPassword\\')?.touched ||            showChangePasswordErrors)){                          @if(updatePasswordForm.get(\\'confirmNewPassword\\')?.getError(\\'required\\')){               confirm new                password required              }              @if(updatePasswordForm.get(\\'confirmNewPassword\\')?.getError(\\'passwordMismatch\\')){               confirm password                doesn\\'t match password              }                        }                                cancel                                save                                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Project.html":{"url":"interfaces/Project.html","title":"interface - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/project.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            callBackUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clientID\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            clientSECRET\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callBackUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callBackUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSECRET\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientSECRET:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Project {\n    _id?:string;\n    clientID?: string;\n    clientSECRET?: string;\n    name: string;\n    callBackUrl: string;\n    createdAt?:Date;\n    updatedAt?:Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectItemComponent.html":{"url":"components/ProjectItemComponent.html","title":"component - ProjectItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Projects/project-item/project-item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-project-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            DialogModule\n                            ButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./project-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./project-item.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DeleteDialogvisible\n                            \n                            \n                                showClientSecret\n                            \n                            \n                                sub\n                            \n                            \n                                UpdateDialogVisible\n                            \n                            \n                                updateProjectForm\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copyClientID\n                            \n                            \n                                copyClientSecret\n                            \n                            \n                                deleteProject\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showDeleteDialog\n                            \n                            \n                                showupdateDialog\n                            \n                            \n                                toggleShowClientSecret\n                            \n                            \n                                updateProject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_authenticationService: AuthenticationService, _messageService: MessageService, _projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/components/Projects/project-item/project-item.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authenticationService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        project\n                    \n                \n                \n                    \n                        Type :         Project\n\n                    \n                \n                \n                    \n                        Default value : {} as Project\n                    \n                \n                        \n                            \n                                    Defined in src/components/Projects/project-item/project-item.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        copyClientID\n                        \n                    \n                \n            \n            \n                \ncopyClientID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project-item/project-item.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        copyClientSecret\n                        \n                    \n                \n            \n            \n                \ncopyClientSecret()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project-item/project-item.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject(projectID: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project-item/project-item.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectID\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project-item/project-item.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project-item/project-item.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project-item/project-item.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDeleteDialog\n                        \n                    \n                \n            \n            \n                \nshowDeleteDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project-item/project-item.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showupdateDialog\n                        \n                    \n                \n            \n            \n                \nshowupdateDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project-item/project-item.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShowClientSecret\n                        \n                    \n                \n            \n            \n                \ntoggleShowClientSecret()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project-item/project-item.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProject\n                        \n                    \n                \n            \n            \n                \nupdateProject(projectID: string | undefined, formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project-item/project-item.component.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectID\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        DeleteDialogvisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Projects/project-item/project-item.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showClientSecret\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Projects/project-item/project-item.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : {} as Subscription\n                    \n                \n                    \n                        \n                                Defined in src/components/Projects/project-item/project-item.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateDialogVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Projects/project-item/project-item.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProjectForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('',[Validators.required]),\n    callBackUrl: new FormControl('',[Validators.required]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/Projects/project-item/project-item.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/components/Projects/project-item/project-item.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Project } from './../../../interfaces/project';\nimport { Component, ElementRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { MessageService } from 'primeng/api';\nimport { User } from '../../../interfaces/user';\nimport { Subscription } from 'rxjs';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { ProjectService } from '../../../services/project.service';\n@Component({\n  selector: 'app-project-item',\n  standalone: true,\n  imports: [ReactiveFormsModule,DialogModule,ButtonModule],\n  templateUrl: './project-item.component.html',\n  styleUrl: './project-item.component.css',\n  providers:[]\n})\nexport class ProjectItemComponent implements OnChanges,OnInit,OnDestroy{\n  \n@Input() project: Project = {} as Project;\nsub:Subscription={} as Subscription;\nuser:User = {};\n  constructor(\n    private _authenticationService: AuthenticationService,\n    private _messageService: MessageService,\n    private _projectService:ProjectService\n  ){\n    \n  }\n  showClientSecret:boolean = false;\n  DeleteDialogvisible: boolean = false;\n  UpdateDialogVisible:boolean = false;\n\n  showDeleteDialog() {\n        this.DeleteDialogvisible = true;\n        \n    }\n  showupdateDialog() {\n      this.UpdateDialogVisible = true;\n      \n  }\n  ngOnInit(): void {\n    this.sub = this._authenticationService.user.subscribe(\n      (newUser)=>{\n        this.user=newUser;\n      }\n    );\n  }\n  ngOnDestroy(): void {\n    this.sub.unsubscribe();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.updateProjectForm.get('name')?.setValue(this.project.name);\n    this.updateProjectForm.get('callBackUrl')?.setValue(this.project.callBackUrl);\n  }\n\n  updateProjectForm = new FormGroup({\n    name: new FormControl('',[Validators.required]),\n    callBackUrl: new FormControl('',[Validators.required]),\n  });\n\n  updateProject(projectID:string|undefined,formGroup: FormGroup){\n      if(formGroup.valid && projectID){\n        this._projectService.updateProject(projectID,formGroup.value).subscribe({\n          next:(res)=>{\n            this._messageService.add({ severity: 'success', summary: 'Success', detail: 'project updated successfully' }); \n            this._projectService.projectsArr.next(res.data);\n            \n          },error:(err)=>{\n            this._messageService.add({ severity: 'error', summary: 'Error', detail: 'there was an error updating your project' });\n          },complete:()=>{\n            this.UpdateDialogVisible=false;\n          }\n        });\n      }\n  }\n\n  deleteProject(projectID:string | undefined){\n    if(projectID){\n      this._projectService.deleteProject(projectID).subscribe({\n        next:(res)=>{\n          this._messageService.add({ severity: 'info', summary: 'Info', detail: 'successfully deleted your project' });\n          this._projectService.projectsArr.next(res.data);\n        },\n        error:(err)=>{\n          this._messageService.add({ severity: 'error', summary: 'Error', detail: 'there was an error deleting your project' });\n        },complete:()=>{this.DeleteDialogvisible=false;}\n      });\n    }\n\n  }\n\n  copyClientSecret(){\n    if(this.project.clientSECRET){\n      navigator.clipboard.writeText(this.project.clientSECRET).then(()=>{console.log(\"copied\")}).catch(err=>{console.log(err)});\n    }\n  }\n\n  copyClientID(){\n    if(this.project.clientID){\n      navigator.clipboard.writeText(this.project.clientID).then(()=>{console.log(\"copied\")}).catch(err=>{console.log(err)});\n    }\n  }\n\n  toggleShowClientSecret(){\n    this.showClientSecret = !this.showClientSecret;\n  }\n}\n\n\n    \n\n    \n        \n  name\n  {{ project.name }}\n  Callback URL\n  {{ project.callBackUrl }}\n  \n    client ID \n     \n  \n  {{ project.clientID }}\n  \n    Client Secret\n      \n    \n  \n  @if(this.showClientSecret){\n    {{ project.clientSECRET }}\n  }\n  \n  \n\n  \n    \n      \n    \n    @if(user.role == 'tenant'){\n      \n        \n      \n    } \n  \n\n\n\n  \n    \n      are you sure you want to delete this project ?\n      \n        No\n      \n      \n        Yes\n      \n    \n  \n\n\n\n  \n  \n\n    \n      \n         Client ID \n        \n        @if(updateProjectForm.get('name')?.errors &&\n        updateProjectForm.get('name')?.touched){\n        \n          @if(updateProjectForm.get('name')?.getError('required')){\n           project name is\n            required\n          }\n        \n        }\n         Callback URL\n        \n        @if(updateProjectForm.get('callBackUrl')?.errors &&\n        updateProjectForm.get('callBackUrl')?.touched){\n        \n          @if(updateProjectForm.get('callBackUrl')?.getError('required')){\n           callBack Url is\n            required\n          }\n        \n        }\n      \n      \n        No\n      \n      \n        Yes\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  name  {{ project.name }}  Callback URL  {{ project.callBackUrl }}      client ID          {{ project.clientID }}      Client Secret              @if(this.showClientSecret){    {{ project.clientSECRET }}  }                        @if(user.role == \\'tenant\\'){                        }               are you sure you want to delete this project ?              No                    Yes                                   Client ID                 @if(updateProjectForm.get(\\'name\\')?.errors &&        updateProjectForm.get(\\'name\\')?.touched){                  @if(updateProjectForm.get(\\'name\\')?.getError(\\'required\\')){           project name is            required          }                }         Callback URL                @if(updateProjectForm.get(\\'callBackUrl\\')?.errors &&        updateProjectForm.get(\\'callBackUrl\\')?.touched){                  @if(updateProjectForm.get(\\'callBackUrl\\')?.getError(\\'required\\')){           callBack Url is            required          }                }                    No                    Yes            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProjectService.html":{"url":"injectables/ProjectService.html","title":"injectable - ProjectService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProjectService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/project.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                projectID\n                            \n                            \n                                projectsArr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProject\n                            \n                            \n                                deleteProject\n                            \n                            \n                                getAllPerTenant\n                            \n                            \n                                getByID\n                            \n                            \n                                updateProject\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/project.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProject\n                        \n                    \n                \n            \n            \n                \naddProject(project: Project)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                project\n                                            \n                                                            Project\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteProject\n                        \n                    \n                \n            \n            \n                \ndeleteProject(projectID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllPerTenant\n                        \n                    \n                \n            \n            \n                \ngetAllPerTenant()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByID\n                        \n                    \n                \n            \n            \n                \ngetByID(projID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProject\n                        \n                    \n                \n            \n            \n                \nupdateProject(projectID: string, project: Project)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/project.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                project\n                                            \n                                                            Project\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `http://localhost:3000/projects/`\n                    \n                \n                    \n                        \n                                Defined in src/services/project.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectID\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/services/project.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectsArr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([] as Project[])\n                    \n                \n                    \n                        \n                                Defined in src/services/project.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { Project } from '../interfaces/project';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  projectID:string|null = null;\n  baseUrl:string = `http://localhost:3000/projects/`;\n  projectsArr:BehaviorSubject = new BehaviorSubject([] as Project[]);\n  constructor(private _http: HttpClient) { }\n\n  getByID(projID:string):Observable{\n    return this._http.get(this.baseUrl+projID);\n  }\n\n\n  getAllPerTenant():Observable{\n    return this._http.get(this.baseUrl);\n  }\n\n  // assingUserToProject(projID:string){\n\n  // }\n\n  addProject(project:Project):Observable{\n    return this._http.post(this.baseUrl,project);\n  }\n\n  updateProject(projectID:string,project:Project):Observable{\n    return this._http.put(this.baseUrl+projectID,project);\n  }\n\n  deleteProject(projectID:string):Observable{\n    return this._http.delete(this.baseUrl+projectID);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProjectsComponent.html":{"url":"components/ProjectsComponent.html","title":"component - ProjectsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProjectsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Projects/project/projects.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-projects\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                                ProjectItemComponent\n                            DialogModule\n                            ButtonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./projects.component.html\n            \n\n\n\n            \n                styleUrl\n                ./projects.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addProjectForm\n                            \n                            \n                                projectsArr\n                            \n                            \n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProject\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_messageService: MessageService, _projectService: ProjectService)\n                    \n                \n                        \n                            \n                                Defined in src/components/Projects/project/projects.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProject\n                        \n                    \n                \n            \n            \n                \naddProject(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project/projects.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project/projects.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Projects/project/projects.component.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addProjectForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('',[Validators.required]),\n    callBackUrl: new FormControl('',[Validators.required]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/components/Projects/project/projects.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        projectsArr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Project[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/components/Projects/project/projects.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/components/Projects/project/projects.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ProjectItemComponent } from '../project-item/project-item.component';\nimport { Project } from '../../../interfaces/project';\nimport { DialogModule } from 'primeng/dialog';\nimport { ButtonModule } from 'primeng/button';\nimport { ToastModule } from 'primeng/toast';\nimport { MessageService } from 'primeng/api';\nimport { ProjectService } from '../../../services/project.service';\nimport { Subscription } from 'rxjs';\n@Component({\n  selector: 'app-projects',\n  standalone: true,\n  imports: [ReactiveFormsModule, ProjectItemComponent,DialogModule,ButtonModule],\n  templateUrl: './projects.component.html',\n  styleUrl: './projects.component.css',\n  providers:[]\n})\nexport class ProjectsComponent implements OnInit,OnDestroy{\n  projectsArr:Project[] = [];\n  subscriptions:Subscription[] = [];\n  constructor(\n    private _messageService: MessageService,\n    private _projectService: ProjectService\n  ){}\n  \n\n\nngOnInit(): void {\n    this._projectService.getAllPerTenant().subscribe({\n      next:(res)=>{\n        this.projectsArr=res.data;\n        console.log(res);\n      },\n      error:(err)=>{\n        console.log(err);\n      }\n    })\n    const sub =this._projectService.projectsArr.subscribe(newArr=>{\n      this.projectsArr=newArr;\n    });\n    this.subscriptions.push(sub); \n}\n\n    \n\n  addProjectForm = new FormGroup({\n    name: new FormControl('',[Validators.required]),\n    callBackUrl: new FormControl('',[Validators.required]),\n  });\n\n\n  addProject(formGroup: FormGroup) {   \n    if (formGroup.valid) {\n        this._projectService.addProject(formGroup.value).subscribe({\n          next:(res)=>{\n            this._messageService.add({ severity: 'success', summary: 'Success', detail: 'project added successfully' }); \n            this._projectService.projectsArr.next(res.data);\n            this.addProjectForm.get('name')?.reset();\n            this.addProjectForm.get('callBackUrl')?.reset();\n          },\n          error:(err)=>{\n            this._messageService.add({ severity: 'error', summary: 'Error', detail: 'there was an error adding your project' }); \n          }\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n      this.subscriptions.forEach(sub=>sub.unsubscribe());\n  }\n\n\n}\n\n    \n\n    \n        \n  Projects\n    \n      @if(projectsArr.length ==0){\n        you currently have no projects want to add one ?\n      }\n        \n          @for(item of projectsArr; track item){\n            \n                  \n            \n          } \n        \n        Add Project\n        \n    \n\n\n\n  \n  \n    \n      \n        \n          Add Project\n          \n        \n        \n           \n            \n            @if(addProjectForm.get('name')?.errors && addProjectForm.get('name')?.touched){\n                \n                    @if(addProjectForm.get('name')?.getError('required')){\n                         project name is required\n                    }\n                \n            }\n            \n            @if(addProjectForm.get('callBackUrl')?.errors && addProjectForm.get('callBackUrl')?.touched){\n                \n                    @if(addProjectForm.get('callBackUrl')?.getError('required')){\n                         callBack Url is required\n                    }\n                \n            }\n          \n        \n        \n          Close\n          Save changes\n        \n      \n    \n  \n\n \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Projects          @if(projectsArr.length ==0){        you currently have no projects want to add one ?      }                  @for(item of projectsArr; track item){                                                    }                 Add Project                                            Add Project                                                             @if(addProjectForm.get(\\'name\\')?.errors && addProjectForm.get(\\'name\\')?.touched){                                    @if(addProjectForm.get(\\'name\\')?.getError(\\'required\\')){                         project name is required                    }                            }                        @if(addProjectForm.get(\\'callBackUrl\\')?.errors && addProjectForm.get(\\'callBackUrl\\')?.touched){                                    @if(addProjectForm.get(\\'callBackUrl\\')?.getError(\\'required\\')){                         callBack Url is required                    }                            }                                    Close          Save changes                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProjectsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Authorization/reset-password/reset-password.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isShowConfirmPassword\n                            \n                            \n                                isShowPassword\n                            \n                            \n                                resetPassword\n                            \n                            \n                                showErrors\n                            \n                            \n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                register\n                            \n                            \n                                toggleShowConfirmPassword\n                            \n                            \n                                toggleShowPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_validationService: ValidationService, _activateRoute: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/components/Authorization/reset-password/reset-password.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _validationService\n                                                  \n                                                        \n                                                                        ValidationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _activateRoute\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/reset-password/reset-password.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister(form: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/reset-password/reset-password.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShowConfirmPassword\n                        \n                    \n                \n            \n            \n                \ntoggleShowConfirmPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/reset-password/reset-password.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShowPassword\n                        \n                    \n                \n            \n            \n                \ntoggleShowPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/reset-password/reset-password.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isShowConfirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/reset-password/reset-password.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isShowPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/reset-password/reset-password.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    newPassword : new FormControl('',[Validators.required,Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]),\n    confirmNewPassword : new FormControl('',Validators.required),\n    token : new FormControl('')\n  },{validators: this._validationService.passwordMatchValidator('newPassword','confirmNewPassword')})\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/reset-password/reset-password.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/reset-password/reset-password.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/reset-password/reset-password.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { ValidationService } from '../../../services/validation.service';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [ReactiveFormsModule],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.css'\n})\nexport class ResetPasswordComponent implements OnInit{\n  isShowPassword:boolean = false;\n  isShowConfirmPassword:boolean = false;\n  showErrors:boolean = false;\n  token:string | null=null;\n\n  constructor(\n    private _validationService:ValidationService,\n    private _activateRoute: ActivatedRoute,\n  ){}\n\n\n ngOnInit(): void {\n     this._activateRoute.paramMap.subscribe(params => {\n      this.token = params.get('token');\n      console.log(this.token);\n     })\n }\n\n  resetPassword = new FormGroup({\n    newPassword : new FormControl('',[Validators.required,Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]),\n    confirmNewPassword : new FormControl('',Validators.required),\n    token : new FormControl('')\n  },{validators: this._validationService.passwordMatchValidator('newPassword','confirmNewPassword')});\n\n  register(form:FormGroup){\n    if(form.valid){\n      form.get('token')?.setValue(this.token);\n      console.log(form.value);\n    }else{\n      this.showErrors = true;\n    }\n  }\n\n  toggleShowPassword(){\n    this.isShowPassword=!this.isShowPassword;\n  }\n  \n  toggleShowConfirmPassword(){\n    this.isShowConfirmPassword=!this.isShowConfirmPassword;\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        \n                    \n                \n                \n                    Reset Password\n                    \n                        \n                        \n                            \n                                \n                                \n                            \n                            \n                                @if(resetPassword.get('newPassword')?.errors &&(resetPassword.get('newPassword')?.touched || showErrors)){\n                                    \n                                        @if(resetPassword.get('newPassword')?.getError('required')){\n                                         new password\n                                            required\n                                        } @if(resetPassword.get('newPassword')?.getError('pattern')){\n                                        confirm Password pattern is invalid and must contain at least\n                                        \n                                        \n                                            one uppercase letter.\n                                            one digit.\n                                            special character.\n                                            minimum length is 8.\n                                        \n                                        }\n                                    \n                                }\n                            \n                            \n                        \n                        \n                        \n                            \n                          \n                            \n                            \n                        \n                          \n                                @if(resetPassword.get('confirmNewPassword')?.errors\n                            &&(resetPassword.get('confirmNewPassword')?.touched ||\n                            showErrors)){\n                            \n                                @if(resetPassword.get('confirmNewPassword')?.getError('required')){\n                                 confirm new\n                                password required\n                                }\n                                @if(resetPassword.get('confirmNewPassword')?.getError('passwordMismatch')){\n                                 confirm password\n                                doesn't match password\n                                }\n                            \n                            }\n                          \n                          \n                        \n                        \n                        \n\n                    \n\n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                            Reset Password                                                                                                                                                                                                                                                        @if(resetPassword.get(\\'newPassword\\')?.errors &&(resetPassword.get(\\'newPassword\\')?.touched || showErrors)){                                                                            @if(resetPassword.get(\\'newPassword\\')?.getError(\\'required\\')){                                         new password                                            required                                        } @if(resetPassword.get(\\'newPassword\\')?.getError(\\'pattern\\')){                                        confirm Password pattern is invalid and must contain at least                                                                                                                            one uppercase letter.                                            one digit.                                            special character.                                            minimum length is 8.                                                                                }                                                                    }                                                                                                                                                                                                                                                                                                                                @if(resetPassword.get(\\'confirmNewPassword\\')?.errors                            &&(resetPassword.get(\\'confirmNewPassword\\')?.touched ||                            showErrors)){                                                            @if(resetPassword.get(\\'confirmNewPassword\\')?.getError(\\'required\\')){                                 confirm new                                password required                                }                                @if(resetPassword.get(\\'confirmNewPassword\\')?.getError(\\'passwordMismatch\\')){                                 confirm password                                doesn\\'t match password                                }                                                        }                                                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/SearchUsersPipe.html":{"url":"pipes/SearchUsersPipe.html","title":"pipe - SearchUsersPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  SearchUsersPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/search-users.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        searchUsers\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(users: User[], str: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pipes/search-users.pipe.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                users\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                str\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { User } from '../interfaces/user';\n\n@Pipe({\n  name: 'searchUsers',\n  standalone: true\n})\nexport class SearchUsersPipe implements PipeTransform {\n\n  transform( users: User[],str: string): User[] {\n    return users.filter(user =>user.name?.toLocaleLowerCase().includes(str.toLowerCase()));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignIn.html":{"url":"interfaces/SignIn.html","title":"interface - SignIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/sign-in.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignIn {\n    email: string;\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TenantService.html":{"url":"injectables/TenantService.html","title":"injectable - TenantService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TenantService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/tenant.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                tenantsList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getByID\n                            \n                            \n                                updatePassword\n                            \n                            \n                                updateTenant\n                            \n                            \n                                updateTenantImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/tenant.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(userID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tenant.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tenant.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByID\n                        \n                    \n                \n            \n            \n                \ngetByID(userID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tenant.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(updateForm: UpdatePassword)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tenant.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateForm\n                                            \n                                                            UpdatePassword\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTenant\n                        \n                    \n                \n            \n            \n                \nupdateTenant(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tenant.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateTenantImage\n                        \n                    \n                \n            \n            \n                \nupdateTenantImage(teantID: string, photo: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/tenant.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teantID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                photo\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `http://localhost:3000/tenants/`\n                    \n                \n                    \n                        \n                                Defined in src/services/tenant.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tenantsList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/services/tenant.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from '../interfaces/user';\nimport { UpdatePassword } from '../interfaces/update-password';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TenantService {\n  baseUrl:string = `http://localhost:3000/tenants/`;\n  tenantsList:BehaviorSubject = new BehaviorSubject([]);\n\n  constructor(private _http: HttpClient) { }\n\n  updateTenantImage(teantID:string,photo:any):Observable{\n    return this._http.post(this.baseUrl+`image/${teantID}`,photo)\n  }\n  updateTenant(user:User):Observable{\n    return this._http.patch(this.baseUrl,user)\n  }\n\n  delete(userID:string):Observable{\n    return this._http.delete(this.baseUrl+userID);\n  }\n\n  getByID(userID:string):Observable{\n    return this._http.get(this.baseUrl+userID);\n  }\n\n  getAll():Observable{\n    return this._http.get(this.baseUrl);\n  }\n\n  updatePassword(updateForm:UpdatePassword):Observable{\n    return this._http.patch(this.baseUrl+\"updateWithPassword\",updateForm);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TenantSignup.html":{"url":"interfaces/TenantSignup.html","title":"interface - TenantSignup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TenantSignup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/tenant-signup.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            website\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TenantSignup {\n    name:string;\n    password:string;\n    email:string;\n    phone?: string;\n    image?: string;\n    address?:string;\n    website?:string;\n    confirmPassword:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TenantsComponent.html":{"url":"components/TenantsComponent.html","title":"component - TenantsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TenantsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Admin/tenants/tenants.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tenants\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UserItemComponent\n                                SearchUsersPipe\n                            FormsModule\n                            PaginationPipe\n                            TimesPipe\n                            DeleteFilterPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./tenants.component.html\n            \n\n\n\n            \n                styleUrl\n                ./tenants.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cureentPage\n                            \n                            \n                                deleteValue\n                            \n                            \n                                numberOfPages\n                            \n                            \n                                pageSize\n                            \n                            \n                                searchKey\n                            \n                            \n                                sub\n                            \n                            \n                                tenants\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                jumpToPage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDeleteFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_tenantService: TenantService, _messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/components/Admin/tenants/tenants.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _tenantService\n                                                  \n                                                        \n                                                                        TenantService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        jumpToPage\n                        \n                    \n                \n            \n            \n                \njumpToPage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Admin/tenants/tenants.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Admin/tenants/tenants.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Admin/tenants/tenants.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDeleteFilter\n                        \n                    \n                \n            \n            \n                \nsetDeleteFilter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Admin/tenants/tenants.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cureentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/tenants/tenants.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"all\"\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/tenants/tenants.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/tenants/tenants.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/tenants/tenants.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/tenants/tenants.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : {} as Subscription\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/tenants/tenants.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tenants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/tenants/tenants.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { User } from '../../../interfaces/user';\nimport { MessageService } from 'primeng/api';\nimport { UserItemComponent } from '../user-item/user-item.component';\nimport { Subscription } from 'rxjs';\nimport { TenantService } from '../../../services/tenant.service';\nimport { SearchUsersPipe } from '../../../pipes/search-users.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { PaginationPipe } from '../../../pipes/pagination.pipe';\nimport { TimesPipe } from '../../../pipes/times.pipe';\nimport { DeleteFilterPipe } from '../../../pipes/delete-filter.pipe';\n@Component({\n  selector: 'app-tenants',\n  standalone: true,\n  imports: [UserItemComponent,SearchUsersPipe,FormsModule,PaginationPipe,TimesPipe,DeleteFilterPipe],\n  templateUrl: './tenants.component.html',\n  styleUrl: './tenants.component.css',\n  providers:[]\n})\nexport class TenantsComponent {\n  tenants:User[] = [];\n  searchKey:string=\"\";\n  sub:Subscription={} as Subscription;\n  numberOfPages:number=0;\n  pageSize:number=8;\n  cureentPage:number=1;\n  deleteValue:string=\"all\";\n  constructor(\n    private _tenantService:TenantService,\n    private _messageService: MessageService\n  ){}\n\n  ngOnInit(): void {\n      this._tenantService.getAll().subscribe({\n        next:(res)=>{\n          this._tenantService.tenantsList.next(res.data);\n          this.tenants = res.data;\n          this.numberOfPages=Math.ceil(this.tenants.length /this.pageSize);\n        },\n        error:(err)=>{\n          this._messageService.add({ severity: 'error', summary: 'Error', detail: 'There was an Error getting users' });\n        }\n      });\n    this.sub = this._tenantService.tenantsList.subscribe((newList)=>{\n      this.tenants=newList;\n    });\n  }\n  \n  setDeleteFilter(value:string){\n    this.deleteValue = value;\n  }\n\n  jumpToPage(page: number) {\n    this.cureentPage = page; \n  }\n\nngOnDestroy(): void {\n    this.sub.unsubscribe();\n}\n}\n\n    \n\n    \n        \n    Tenants\n\n\n    \n        \n            \n            All\n        \n        \n            \n            Deleted\n        \n        \n            \n            Not Deleted\n        \n\n    \n    \n\n\n    @for(item of tenants | searchUsers:searchKey |deleteFilter:deleteValue | pagination:pageSize:cureentPage;track item){\n    \n            \n    \n    }\n    \n        @for(i of numberOfPages |times;track i){\n            \n                {{i}}\n            \n        }\n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Tenants                                    All                                        Deleted                                        Not Deleted                    @for(item of tenants | searchUsers:searchKey |deleteFilter:deleteValue | pagination:pageSize:cureentPage;track item){                        }            @for(i of numberOfPages |times;track i){                            {{i}}                    }            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TenantsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimesPipe.html":{"url":"pipes/TimesPipe.html","title":"pipe - TimesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pipes/times.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        times\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/pipes/times.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'times',\n  standalone: true\n})\nexport class TimesPipe implements PipeTransform {\n\n  transform(value: number): any {\n    const iterable = > {};\n    iterable[Symbol.iterator] = function* () {\n      let n = 0;\n      while (n \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdatePassword.html":{"url":"interfaces/UpdatePassword.html","title":"interface - UpdatePassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdatePassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/update-password.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            confirmNewPassword\n                                        \n                                \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                                \n                                        \n                                            oldPassword\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmNewPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmNewPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oldPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oldPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdatePassword {\n    oldPassword:string;\n    newPassword:string;\n    confirmNewPassword:string;\n    token?:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/user.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            deleted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            oldPassword\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projects\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            website\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        oldPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        oldPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projects\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projects:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        website\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        website:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    _id?:string;\n    name?: string;\n    email?: string;\n    phone?: string;\n    image?: string;\n    role?: string;\n    age?:number;\n    address?: string;\n    website?: string;\n    oldPassword?:string;\n    password?:string;\n    confirmPassword?: string;\n    deleted?:boolean;\n    projects?:any;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserItemComponent.html":{"url":"components/UserItemComponent.html","title":"component - UserItemComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserItemComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Admin/user-item/user-item.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-item\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            DialogModule\n                                ProjectItemComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-item.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-item.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                photoUrl\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                showDialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_messageService: MessageService, _tenantService: TenantService, _userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/components/Admin/user-item/user-item.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tenantService\n                                                  \n                                                        \n                                                                        TenantService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in src/components/Admin/user-item/user-item.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(userId: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Admin/user-item/user-item.component.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Admin/user-item/user-item.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showDialog\n                        \n                    \n                \n            \n            \n                \nshowDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Admin/user-item/user-item.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        photoUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"assets/default.png\"\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/user-item/user-item.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/user-item/user-item.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ProjectItemComponent } from './../../Projects/project-item/project-item.component';\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { User } from '../../../interfaces/user';\nimport { UserService } from '../../../services/user.service';\nimport { MessageService } from 'primeng/api';\nimport { TenantService } from '../../../services/tenant.service';\nimport { DialogModule } from 'primeng/dialog';\n@Component({\n  selector: 'app-user-item',\n  standalone: true,\n  imports: [DialogModule,ProjectItemComponent],\n  templateUrl: './user-item.component.html',\n  styleUrl: './user-item.component.css',\n  providers:[]\n})\nexport class UserItemComponent implements OnChanges{\n  @Input() user:User={};\n  photoUrl:string=\"assets/default.png\";\n  visible: boolean = false;\n  constructor(\n    private _messageService: MessageService,\n    private _tenantService:TenantService,\n    private _userService:UserService\n  ){\n   \n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if(this.user.image?.length){\n      this.photoUrl = this.user.image;\n    }\n  }\n  deleteUser(userId:string|undefined){\n    if(userId && this.user.role == 'user'){\n      this._userService.delete(userId).subscribe({\n        next:(res)=>{\n          console.log(res);\n          this._userService.usersList.next(res.data);\n          this._messageService.add({ severity: 'info', summary: 'Deleted', detail: 'user deleted successfully' });\n        },\n        error:(err)=>{\n          console.log(err);\n          this._messageService.add({ severity: 'error', summary: 'Error', detail: 'there was a problem deleting the user' });\n        }\n      })\n    }else if(userId && this.user.role == 'tenant'){\n      this._tenantService.delete(userId).subscribe({\n        next:(res)=>{\n          this._tenantService.tenantsList.next(res.data);\n          this._messageService.add({ severity: 'info', summary: 'Deleted', detail: 'user deleted successfully' });\n        },\n        error:(err)=>{\n          console.log(err);\n          this._messageService.add({ severity: 'error', summary: 'Error', detail: 'there was a problem deleting the user' });\n        }\n      })\n    }\n  }\n\n  \n\n    showDialog() {\n        this.visible = true;\n    }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        \n          \n            @if(!user.deleted){\n              \n                \n                Delete\n              \n            }\n            \n              \n              view Projects\n            \n          \n        \n      \n    \n    \n      \n        Name: {{ user.name }}\n        Email: {{ user.email }}\n        Phone: {{ user.phone }}\n        Role: {{ user.role }}\n        \n          number of projects:\n          {{ user.projects.length }}\n        \n        @if(user.role == 'tenant'){\n          \n            address: {{ user.address }}\n          \n          \n            website: {{ user.website }}\n          \n        } @if(user.role == 'user'){\n           Age: {{ user.age }}\n        } @if(user.deleted){\n            Deleted\n        }\n      \n    \n  \n\n\n\n\n\n\n  \n    @if(user.role == 'tenant'){\n      @for(item of user.projects;track item){\n        \n          \n        \n        }\n    }@if(user.role == 'user'){\n      @for(item of user.projects;track item){\n        \n          Project: {{item.name}} \n        \n      }\n    }\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  @if(!user.deleted){                                              Delete                          }                                        view Projects                                                          Name: {{ user.name }}        Email: {{ user.email }}        Phone: {{ user.phone }}        Role: {{ user.role }}                  number of projects:          {{ user.projects.length }}                @if(user.role == \\'tenant\\'){                      address: {{ user.address }}                                website: {{ user.website }}                  } @if(user.role == \\'user\\'){           Age: {{ user.age }}        } @if(user.deleted){            Deleted        }                  @if(user.role == \\'tenant\\'){      @for(item of user.projects;track item){                                  }    }@if(user.role == \\'user\\'){      @for(item of user.projects;track item){                  Project: {{item.name}}               }    }  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserItemComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                usersList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUserToProject\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getByID\n                            \n                            \n                                updatePassword\n                            \n                            \n                                updateUser\n                            \n                            \n                                updateUserImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUserToProject\n                        \n                    \n                \n            \n            \n                \naddUserToProject(projectId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                projectId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(userID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByID\n                        \n                    \n                \n            \n            \n                \ngetByID(userID: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePassword\n                        \n                    \n                \n            \n            \n                \nupdatePassword(updateForm: UpdatePassword)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updateForm\n                                            \n                                                            UpdatePassword\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserImage\n                        \n                    \n                \n            \n            \n                \nupdateUserImage(teantID: string, photo: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/user.service.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                teantID\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                photo\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `http://localhost:3000/users/`\n                    \n                \n                    \n                        \n                                Defined in src/services/user.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        usersList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/services/user.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from '../interfaces/user';\nimport { UpdatePassword } from '../interfaces/update-password';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  usersList:BehaviorSubject = new BehaviorSubject([]);\n  baseUrl:string = `http://localhost:3000/users/`;\n  constructor(private _http: HttpClient) { }\n\n  updateUserImage(teantID:string,photo:any):Observable{\n    return this._http.post(this.baseUrl+`image/${teantID}`,photo)\n  }\n\n  updateUser(user:User):Observable{\n    return this._http.patch(this.baseUrl,user)\n  }\n\n  addUserToProject(projectId:string):Observable{\n    return this._http.post(this.baseUrl,{\n      projectId\n    });\n  }\n\n  getByID(userID:string):Observable{\n    return this._http.get(this.baseUrl+userID);\n  }\n\n  getAll():Observable{\n    return this._http.get(this.baseUrl);\n  }\n\n\n  delete(userID:string):Observable{\n    return this._http.delete(this.baseUrl+userID);\n  }\n\n  updatePassword(updateForm:UpdatePassword):Observable{\n    return this._http.patch(this.baseUrl+\"updateWithPassword\",updateForm);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserSignup.html":{"url":"interfaces/UserSignup.html","title":"interface - UserSignup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserSignup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/interfaces/user-signup.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            confirmPassword\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            phone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        phone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        phone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserSignup {\n    name:string;\n    password:string;\n    email:string;\n    phone?: string;\n    image?: string;\n    age?:number;\n    confirmPassword:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserSignupComponent.html":{"url":"components/UserSignupComponent.html","title":"component - UserSignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserSignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Authorization/user-signup/user-signup.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-signup\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            RouterLink\n                            RouterLinkActive\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./user-signup.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-signup.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _projectService\n                            \n                            \n                                isShowConfirmPassword\n                            \n                            \n                                isShowPassword\n                            \n                            \n                                isUser\n                            \n                            \n                                registerTenantForm\n                            \n                            \n                                registerUserForm\n                            \n                            \n                                showTenantErrors\n                            \n                            \n                                showUserErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerTenant\n                            \n                            \n                                registerUser\n                            \n                            \n                                signInWithGitHub\n                            \n                            \n                                signInWithGoogle\n                            \n                            \n                                toggleShowConfirmPassword\n                            \n                            \n                                toggleShowPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_messageService: MessageService, _projectService: ProjectService, _authService: AuthenticationService, _router: Router, _validationService: ValidationService)\n                    \n                \n                        \n                            \n                                Defined in src/components/Authorization/user-signup/user-signup.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _projectService\n                                                  \n                                                        \n                                                                        ProjectService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _authService\n                                                  \n                                                        \n                                                                        AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _validationService\n                                                  \n                                                        \n                                                                        ValidationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        registerTenant\n                        \n                    \n                \n            \n            \n                \nregisterTenant(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/user-signup/user-signup.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/user-signup/user-signup.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInWithGitHub\n                        \n                    \n                \n            \n            \n                \nsignInWithGitHub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/user-signup/user-signup.component.ts:100\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInWithGoogle\n                        \n                    \n                \n            \n            \n                \nsignInWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/user-signup/user-signup.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShowConfirmPassword\n                        \n                    \n                \n            \n            \n                \ntoggleShowConfirmPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/user-signup/user-signup.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShowPassword\n                        \n                    \n                \n            \n            \n                \ntoggleShowPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Authorization/user-signup/user-signup.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        _projectService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProjectService\n\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/user-signup/user-signup.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isShowConfirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/user-signup/user-signup.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isShowPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/user-signup/user-signup.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/user-signup/user-signup.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerTenantForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('',Validators.required),\n    password: new FormControl('',[Validators.required,Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]),\n    email: new FormControl('',[Validators.required,Validators.email]),\n    phone: new FormControl('',Validators.pattern(/^(?:\\+20|0)?1[0125]\\d{8}$/)),\n    image: new FormControl(),\n    address: new FormControl(),\n    website: new FormControl('',Validators.pattern(/^www\\.[a-zA-Z0-9-]+(\\.[a-zA-Z]+)+$/)),\n    confirmPassword: new FormControl('',[Validators.required,Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]),\n  },{validators: this._validationService.passwordMatchValidator('password','confirmPassword')})\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/user-signup/user-signup.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUserForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('',Validators.required),\n    password: new FormControl('',[Validators.required,Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]),\n    email: new FormControl('',[Validators.required,Validators.email]),\n    phone: new FormControl('',Validators.pattern(/^(?:\\+20|0)?1[0125]\\d{8}$/)),\n    image: new FormControl(),\n    age: new FormControl('',[Validators.min(13),Validators.max(100)]),\n    confirmPassword: new FormControl('',[Validators.required,Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)])\n    \n  },{validators: this._validationService.passwordMatchValidator('password','confirmPassword')})\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/user-signup/user-signup.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showTenantErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/user-signup/user-signup.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUserErrors\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/components/Authorization/user-signup/user-signup.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ValidationService } from './../../../services/validation.service';\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterLink, RouterLinkActive } from '@angular/router';\nimport { AuthenticationService } from '../../../services/authentication.service';\nimport { ProjectService } from '../../../services/project.service';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-user-signup',\n  standalone: true,\n  imports: [ReactiveFormsModule,RouterLink,RouterLinkActive],\n  templateUrl: './user-signup.component.html',\n  styleUrl: './user-signup.component.css',\n  providers:[]\n})\nexport class UserSignupComponent {\n  isUser: boolean = true;\n  isShowPassword:boolean = false;\n  isShowConfirmPassword:boolean = false;\n  showUserErrors:boolean = false;\n  showTenantErrors:boolean = false;\n\n  constructor(\n    private _messageService: MessageService,\n    public _projectService:ProjectService,\n    private _authService: AuthenticationService,\n    private _router: Router,\n    private _validationService:ValidationService\n  ){}\n\n  registerUserForm = new FormGroup({\n    name: new FormControl('',Validators.required),\n    password: new FormControl('',[Validators.required,Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]),\n    email: new FormControl('',[Validators.required,Validators.email]),\n    phone: new FormControl('',Validators.pattern(/^(?:\\+20|0)?1[0125]\\d{8}$/)),\n    image: new FormControl(),\n    age: new FormControl('',[Validators.min(13),Validators.max(100)]),\n    confirmPassword: new FormControl('',[Validators.required,Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)])\n    \n  },{validators: this._validationService.passwordMatchValidator('password','confirmPassword')});\n\n  registerTenantForm = new FormGroup({\n    name: new FormControl('',Validators.required),\n    password: new FormControl('',[Validators.required,Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]),\n    email: new FormControl('',[Validators.required,Validators.email]),\n    phone: new FormControl('',Validators.pattern(/^(?:\\+20|0)?1[0125]\\d{8}$/)),\n    image: new FormControl(),\n    address: new FormControl(),\n    website: new FormControl('',Validators.pattern(/^www\\.[a-zA-Z0-9-]+(\\.[a-zA-Z]+)+$/)),\n    confirmPassword: new FormControl('',[Validators.required,Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/)]),\n  },{validators: this._validationService.passwordMatchValidator('password','confirmPassword')});\n\n  registerUser(formGroup: FormGroup) {    \n    if (formGroup.valid) {\n      this._authService.userSingup(formGroup.value).subscribe({\n        next:(response) => {\n          this._authService.setUser(response.data.user,response.data.access_token);\n          if(this._projectService.projectID){\n            this._router.navigateByUrl(`/authorize/${this._projectService.projectID}`);\n          }else{\n            this._router.navigateByUrl('/home');\n          }\n          },\n        error: (err) => {\n          this._messageService.add({ severity: 'error', summary: 'Error', detail: 'something went wrong signing you up' });\n        }\n      })\n    }else{\n      this.showUserErrors=true;\n    }\n  }\n\n  registerTenant(formGroup: FormGroup) {\n    if (formGroup.valid) {\n      this._authService.tenantSingup (formGroup.value).subscribe({\n        next:(response) => {\n          this._authService.setUser(response.data.user,response.data.access_token);\n          this._router.navigateByUrl('/home');\n          },\n        error: (err) => {\n          this._messageService.add({ severity: 'error', summary: 'Error', detail: 'something went wrong signing you up' });\n        }\n      })\n    }else{\n      this.showTenantErrors=true;\n    }\n  }\n  toggleShowPassword(){\n    this.isShowPassword=!this.isShowPassword;\n  }\n  toggleShowConfirmPassword(){\n    this.isShowConfirmPassword=!this.isShowConfirmPassword;\n  }\n  signInWithGoogle(){\n    window.location.href=\"http://localhost:3000/auth/google\";\n  }\n\n\n  signInWithGitHub(){\n    window.location.href=\"http://localhost:3000/auth/github\";\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n        \n      \n      \n        @if(isUser){\n        Register as a User\n        @if(this._projectService.projectID){\n        you need to sing up first to continue...\n        }\n        \n          \n          @if(registerUserForm.get('name')?.errors &&\n          (registerUserForm.get('name')?.touched || showUserErrors)){\n          \n            @if(registerUserForm.get('name')?.getError('required')){\n              \n            name is required\n            }\n          \n          }\n          \n          @if(registerUserForm.get('email')?.errors &&\n          (registerUserForm.get('email')?.touched ||showUserErrors)){\n          \n            \n            @if(registerUserForm.get('email')?.getError('required')){\n            email is required\n            } @if(registerUserForm.get('email')?.getError('email')){\n              \n            email pattern is invalid\n            }\n          \n          }\n          \n            \n            \n          \n\n          @if(registerUserForm.get('password')?.errors &&\n          (registerUserForm.get('password')?.touched || showUserErrors)){\n          \n            \n            @if(registerUserForm.get('password')?.getError('required')){\n              \n            password is required\n            } @if(registerUserForm.get('password')?.getError('pattern')){\n              \n            Password pattern is invalid and must contain at least\n            \n            \n              one uppercase letter.\n              one digit.\n              special character.\n              minimum length is 8.\n            \n            }\n          \n          }\n          \n            \n            \n          \n\n          @if(registerUserForm.get('confirmPassword')?.errors &&\n          (registerUserForm.get('confirmPassword')?.touched ||showUserErrors)){\n          \n            @if(registerUserForm.get('confirmPassword')?.getError('required')){\n              \n            confirm password is required\n            } @if(registerUserForm.get('confirmPassword')?.getError('pattern')){\n              \n            confirm Password pattern is invalid and must contain at least\n            \n            \n              one uppercase letter.\n              one digit.\n              special character.\n              minimum length is 8.\n            \n            }\n            @if(registerUserForm.get('confirmPassword')?.getError('passwordMismatch')){\n              \n              confirm password doesn't match password\n            }\n          \n          }\n          \n          @if(registerUserForm.get('phone')?.errors &&\n          (registerUserForm.get('phone')?.touched )){\n          \n            @if(registerUserForm.get('phone')?.getError('pattern')){\n              \n            Invalid Phone number\n            }\n          \n          }\n          \n          @if(registerUserForm.get('age')?.errors &&\n          (registerUserForm.get('age')?.touched)){\n          \n            @if(registerUserForm.get('age')?.getError('min') || registerUserForm.get('age')?.getError('max')){\n              \n            Age must be between 13 ad 100 \n            } \n          \n          }\n          \n            Sign up as a Tenant ?  -->\n\n        \n        } @if(!isUser){\n        Register as a Tenant\n        \n          \n          @if(registerTenantForm.get('name')?.errors &&\n          (registerTenantForm.get('name')?.touched || showTenantErrors)){\n          \n            @if(registerTenantForm.get('name')?.getError('required')){\n              \n            name is required\n            }\n          \n          }\n          \n          @if(registerTenantForm.get('email')?.errors &&\n          (registerTenantForm.get('email')?.touched || showTenantErrors)){\n          \n            @if(registerTenantForm.get('email')?.getError('required')){\n              \n            email is required\n            } @if(registerTenantForm.get('email')?.getError('email')){\n              \n            email pattern is invalid\n            }\n          \n          }\n          \n            \n            \n          \n          @if(registerTenantForm.get('password')?.errors &&\n          (registerTenantForm.get('password')?.touched || showTenantErrors)){\n          \n            @if(registerTenantForm.get('password')?.getError('required')){\n              \n            password is required\n            } @if(registerTenantForm.get('password')?.getError('pattern')){\n              \n            Password pattern is invalid and must contain at least\n            \n            \n              one uppercase letter.\n              one digit.\n              special character.\n              minimum length is 8.\n            \n            }\n          \n          }\n          \n            \n            \n          \n          @if(registerTenantForm.get('confirmPassword')?.errors &&\n          (registerTenantForm.get('confirmPassword')?.touched ||\n          showTenantErrors)){\n          \n            @if(registerTenantForm.get('confirmPassword')?.getError('required')){\n              \n            confirm password is required\n            }\n            @if(registerTenantForm.get('confirmPassword')?.getError('pattern')){\n              \n            confirm Password pattern is invalid and must contain at least\n            \n            \n              one uppercase letter.\n              one digit.\n              special character.\n              minimum length is 8.\n            \n            }\n            @if(registerTenantForm.get('confirmPassword')?.getError('passwordMismatch')){\n              \n              confirm password doesn't match password\n            }\n          \n          }\n          \n          @if(registerTenantForm.get('phone')?.errors &&\n          (registerTenantForm.get('phone')?.touched )){\n          \n            @if(registerTenantForm.get('phone')?.getError('pattern')){\n              \n            Invalid Phone number\n            }\n          \n          }\n          \n          \n          @if(registerTenantForm.get('website')?.errors &&\n          (registerTenantForm.get('website')?.touched )){\n          \n            @if(registerTenantForm.get('website')?.getError('pattern')){\n              \n            Invalid URL\n            }\n          \n          }\n\n          \n        \n        }\n        \n          \n            \n              @if(isUser){\n                sign up as Tenant ?\n              }\n              @if(!isUser){\n                sign up as user ? \n              }\n            \n          \n          Have account already? Login here\n          \n          \n            \n              OR use\n          \n          \n              \n                  \n              \n              \n                  \n              \n              \n                  \n              \n          \n          \n        \n\n\n      \n    \n  \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          @if(isUser){        Register as a User        @if(this._projectService.projectID){        you need to sing up first to continue...        }                            @if(registerUserForm.get(\\'name\\')?.errors &&          (registerUserForm.get(\\'name\\')?.touched || showUserErrors)){                      @if(registerUserForm.get(\\'name\\')?.getError(\\'required\\')){                          name is required            }                    }                    @if(registerUserForm.get(\\'email\\')?.errors &&          (registerUserForm.get(\\'email\\')?.touched ||showUserErrors)){                                  @if(registerUserForm.get(\\'email\\')?.getError(\\'required\\')){            email is required            } @if(registerUserForm.get(\\'email\\')?.getError(\\'email\\')){                          email pattern is invalid            }                    }                                                      @if(registerUserForm.get(\\'password\\')?.errors &&          (registerUserForm.get(\\'password\\')?.touched || showUserErrors)){                                  @if(registerUserForm.get(\\'password\\')?.getError(\\'required\\')){                          password is required            } @if(registerUserForm.get(\\'password\\')?.getError(\\'pattern\\')){                          Password pattern is invalid and must contain at least                                      one uppercase letter.              one digit.              special character.              minimum length is 8.                        }                    }                                                      @if(registerUserForm.get(\\'confirmPassword\\')?.errors &&          (registerUserForm.get(\\'confirmPassword\\')?.touched ||showUserErrors)){                      @if(registerUserForm.get(\\'confirmPassword\\')?.getError(\\'required\\')){                          confirm password is required            } @if(registerUserForm.get(\\'confirmPassword\\')?.getError(\\'pattern\\')){                          confirm Password pattern is invalid and must contain at least                                      one uppercase letter.              one digit.              special character.              minimum length is 8.                        }            @if(registerUserForm.get(\\'confirmPassword\\')?.getError(\\'passwordMismatch\\')){                            confirm password doesn\\'t match password            }                    }                    @if(registerUserForm.get(\\'phone\\')?.errors &&          (registerUserForm.get(\\'phone\\')?.touched )){                      @if(registerUserForm.get(\\'phone\\')?.getError(\\'pattern\\')){                          Invalid Phone number            }                    }                    @if(registerUserForm.get(\\'age\\')?.errors &&          (registerUserForm.get(\\'age\\')?.touched)){                      @if(registerUserForm.get(\\'age\\')?.getError(\\'min\\') || registerUserForm.get(\\'age\\')?.getError(\\'max\\')){                          Age must be between 13 ad 100             }                     }                      Sign up as a Tenant ?  -->                } @if(!isUser){        Register as a Tenant                            @if(registerTenantForm.get(\\'name\\')?.errors &&          (registerTenantForm.get(\\'name\\')?.touched || showTenantErrors)){                      @if(registerTenantForm.get(\\'name\\')?.getError(\\'required\\')){                          name is required            }                    }                    @if(registerTenantForm.get(\\'email\\')?.errors &&          (registerTenantForm.get(\\'email\\')?.touched || showTenantErrors)){                      @if(registerTenantForm.get(\\'email\\')?.getError(\\'required\\')){                          email is required            } @if(registerTenantForm.get(\\'email\\')?.getError(\\'email\\')){                          email pattern is invalid            }                    }                                                      @if(registerTenantForm.get(\\'password\\')?.errors &&          (registerTenantForm.get(\\'password\\')?.touched || showTenantErrors)){                      @if(registerTenantForm.get(\\'password\\')?.getError(\\'required\\')){                          password is required            } @if(registerTenantForm.get(\\'password\\')?.getError(\\'pattern\\')){                          Password pattern is invalid and must contain at least                                      one uppercase letter.              one digit.              special character.              minimum length is 8.                        }                    }                                                      @if(registerTenantForm.get(\\'confirmPassword\\')?.errors &&          (registerTenantForm.get(\\'confirmPassword\\')?.touched ||          showTenantErrors)){                      @if(registerTenantForm.get(\\'confirmPassword\\')?.getError(\\'required\\')){                          confirm password is required            }            @if(registerTenantForm.get(\\'confirmPassword\\')?.getError(\\'pattern\\')){                          confirm Password pattern is invalid and must contain at least                                      one uppercase letter.              one digit.              special character.              minimum length is 8.                        }            @if(registerTenantForm.get(\\'confirmPassword\\')?.getError(\\'passwordMismatch\\')){                            confirm password doesn\\'t match password            }                    }                    @if(registerTenantForm.get(\\'phone\\')?.errors &&          (registerTenantForm.get(\\'phone\\')?.touched )){                      @if(registerTenantForm.get(\\'phone\\')?.getError(\\'pattern\\')){                          Invalid Phone number            }                    }                              @if(registerTenantForm.get(\\'website\\')?.errors &&          (registerTenantForm.get(\\'website\\')?.touched )){                      @if(registerTenantForm.get(\\'website\\')?.getError(\\'pattern\\')){                          Invalid URL            }                    }                          }                                            @if(isUser){                sign up as Tenant ?              }              @if(!isUser){                sign up as user ?               }                                Have account already? Login here                                              OR use                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserSignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersComponent.html":{"url":"components/UsersComponent.html","title":"component - UsersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/components/Admin/users/users.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                UserItemComponent\n                                SearchUsersPipe\n                            FormsModule\n                            PaginationPipe\n                            TimesPipe\n                            DeleteFilterPipe\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./users.component.html\n            \n\n\n\n            \n                styleUrl\n                ./users.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cureentPage\n                            \n                            \n                                deleteValue\n                            \n                            \n                                numberOfPages\n                            \n                            \n                                pageSize\n                            \n                            \n                                searchKey\n                            \n                            \n                                sub\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                jumpToPage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setDeleteFilter\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_userService: UserService, _messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/components/Admin/users/users.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        jumpToPage\n                        \n                    \n                \n            \n            \n                \njumpToPage(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Admin/users/users.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Admin/users/users.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Admin/users/users.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setDeleteFilter\n                        \n                    \n                \n            \n            \n                \nsetDeleteFilter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/components/Admin/users/users.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cureentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/users/users.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"all\"\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/users/users.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        numberOfPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/users/users.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/users/users.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/users/users.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : {} as Subscription\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/users/users.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/components/Admin/users/users.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { User } from '../../../interfaces/user';\nimport { UserService } from '../../../services/user.service';\nimport { MessageService } from 'primeng/api';\nimport { UserItemComponent } from '../user-item/user-item.component';\nimport { Subscription } from 'rxjs';\nimport { SearchUsersPipe } from '../../../pipes/search-users.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { PaginationPipe } from '../../../pipes/pagination.pipe';\nimport { TimesPipe } from '../../../pipes/times.pipe';\nimport { DeleteFilterPipe } from '../../../pipes/delete-filter.pipe';\n\n@Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [UserItemComponent,SearchUsersPipe,FormsModule,PaginationPipe,TimesPipe,DeleteFilterPipe],\n  templateUrl: './users.component.html',\n  styleUrl: './users.component.css',\n  providers:[]\n})\nexport class UsersComponent implements OnInit,OnDestroy{\n  users:User[] = [];\n  searchKey:string=\"\";\n  sub:Subscription={} as Subscription;\n  numberOfPages:number=0;\n  pageSize:number=8;\n  cureentPage:number=1;\n\n  deleteValue:string=\"all\";\n\n  constructor(\n    private _userService:UserService,\n    private _messageService: MessageService\n  ){}\n\n  ngOnInit(): void {\n      this._userService.getAll().subscribe({\n        next:(res)=>{\n          this._userService.usersList.next(res.data);\n          this.users = res.data;\n          this.numberOfPages=Math.ceil(this.users.length /this.pageSize);\n        },\n        error:(err)=>{\n          this._messageService.add({ severity: 'error', summary: 'Error', detail: 'There was an Error getting users' });\n        }\n      });\n    this.sub = this._userService.usersList.subscribe((newList)=>{\n      this.users=newList;\n    });\n  }\n\nngOnDestroy(): void {\n    this.sub.unsubscribe();\n}\n\nsetDeleteFilter(value:string){\n  this.deleteValue = value;\n}\n\njumpToPage(page: number) {\n  this.cureentPage = page; \n}\n}\n\n    \n\n    \n        \n    Users\n\n\n    \n        \n            \n            All\n        \n        \n            \n            Deleted\n        \n        \n            \n            Not Deleted\n        \n\n    \n    \n\n\n\n    @for(item of users | searchUsers:searchKey |deleteFilter:deleteValue | pagination:pageSize:cureentPage;track item){\n    \n            \n    \n    }\n    \n        @for(i of numberOfPages |times;track i){\n            \n                {{i}}\n            \n        }\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Users                                    All                                        Deleted                                        Not Deleted                    @for(item of users | searchUsers:searchKey |deleteFilter:deleteValue | pagination:pageSize:cureentPage;track item){                        }            @for(i of numberOfPages |times;track i){                            {{i}}                    }            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthorizeComponent', 'selector': 'app-authorize'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'DeveloperComponent', 'selector': 'app-developer'},{'name': 'ErrorComponent', 'selector': 'app-error'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GithubCallbackComponent', 'selector': 'app-github-callback'},{'name': 'GoogleCallbackComponent', 'selector': 'app-google-callback'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'NotFoundComponent', 'selector': 'app-not-found'},{'name': 'PricingComponent', 'selector': 'app-pricing'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'ProjectItemComponent', 'selector': 'app-project-item'},{'name': 'ProjectsComponent', 'selector': 'app-projects'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'TenantsComponent', 'selector': 'app-tenants'},{'name': 'UserItemComponent', 'selector': 'app-user-item'},{'name': 'UsersComponent', 'selector': 'app-users'},{'name': 'UserSignupComponent', 'selector': 'app-user-signup'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationService.html":{"url":"injectables/ValidationService.html","title":"injectable - ValidationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ValidationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/validation.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/services/validation.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator(passwordControlName: string, confirmPasswordControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/services/validation.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                passwordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                confirmPasswordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidatorFn } from '@angular/forms';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n\n  constructor() { }\n\n  passwordMatchValidator(passwordControlName: string, confirmPasswordControlName: string): ValidatorFn {\n    return (formGroup: AbstractControl): { [key: string]: any } | null => {\n      const passwordControl = formGroup.get(passwordControlName);\n      const confirmPasswordControl = formGroup.get(confirmPasswordControlName);\n  \n      if (!passwordControl || !confirmPasswordControl) {\n        return null;\n      }\n  \n      const password = passwordControl.value;\n      const confirmPassword = confirmPasswordControl.value;\n  \n      if (password !== confirmPassword) {\n        confirmPasswordControl.setErrors({ passwordMismatch: true });\n        return { passwordMismatch: true };\n      } else {\n        //confirmPasswordControl.setErrors(null);\n        return null;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Interceptors/authentication.interceptor.ts\n            \n            variable\n            authenticationInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/Admin/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/Admin/tenants/tenants.component.ts\n            \n            component\n            TenantsComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/components/Admin/user-item/user-item.component.ts\n            \n            component\n            UserItemComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/Admin/users/users.component.ts\n            \n            component\n            UsersComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/components/Authorization/authorize/authorize.component.ts\n            \n            component\n            AuthorizeComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/components/Authorization/github-callback/github-callback.component.ts\n            \n            component\n            GithubCallbackComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/Authorization/google-callback/google-callback.component.ts\n            \n            component\n            GoogleCallbackComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/Authorization/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/components/Authorization/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/components/Authorization/user-signup/user-signup.component.ts\n            \n            component\n            UserSignupComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/components/Core/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/Core/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/components/Core/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/components/Core/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/Core/not-found/not-found.component.ts\n            \n            component\n            NotFoundComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/Information/developer/developer.component.ts\n            \n            component\n            DeveloperComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/components/Projects/project-item/project-item.component.ts\n            \n            component\n            ProjectItemComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/components/Projects/project/projects.component.ts\n            \n            component\n            ProjectsComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/components/pricing/pricing.component.ts\n            \n            component\n            PricingComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/components/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/guards/is-admin.guard.ts\n            \n            variable\n            isAdminGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/is-logged-in.guard.ts\n            \n            variable\n            isLoggedInGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/is-tenant.guard.ts\n            \n            variable\n            isTenantGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/interfaces/project.ts\n            \n            interface\n            Project\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/interfaces/sign-in.ts\n            \n            interface\n            SignIn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/interfaces/tenant-signup.ts\n            \n            interface\n            TenantSignup\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/interfaces/update-password.ts\n            \n            interface\n            UpdatePassword\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/interfaces/user-signup.ts\n            \n            interface\n            UserSignup\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/interfaces/user.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/pipes/delete-filter.pipe.ts\n            \n            pipe\n            DeleteFilterPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipes/pagination.pipe.ts\n            \n            pipe\n            PaginationPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipes/search-users.pipe.ts\n            \n            pipe\n            SearchUsersPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pipes/times.pipe.ts\n            \n            pipe\n            TimesPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/services/authentication.service.ts\n            \n            injectable\n            AuthenticationService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/services/project.service.ts\n            \n            injectable\n            ProjectService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/services/tenant.service.ts\n            \n            injectable\n            TenantService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/services/validation.service.ts\n            \n            injectable\n            ValidationService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.3.0\n        \n            @angular/common : ^17.3.0\n        \n            @angular/compiler : ^17.3.0\n        \n            @angular/core : ^17.3.0\n        \n            @angular/forms : ^17.3.0\n        \n            @angular/platform-browser : ^17.3.0\n        \n            @angular/platform-browser-dynamic : ^17.3.0\n        \n            @angular/router : ^17.3.0\n        \n            @fortawesome/fontawesome-free : ^6.5.2\n        \n            bootstrap : ^5.3.3\n        \n            primeng : ^17.18.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAuthGate-Angular\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    22 Components\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            authenticationInterceptor   (src/.../authentication.interceptor.ts)\n                        \n                        \n                            isAdminGuard   (src/.../is-admin.guard.ts)\n                        \n                        \n                            isLoggedInGuard   (src/.../is-logged-in.guard.ts)\n                        \n                        \n                            isTenantGuard   (src/.../is-tenant.guard.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideRouter(routes),provideHttpClient(withInterceptors([authenticationInterceptor])),provideAnimationsAsync()]\n}\n                    \n                \n\n\n        \n    \n\n    src/Interceptors/authentication.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authenticationInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n  const _loader = inject(LoaderService);\n  _loader.setLoader(true);\n  let token:string =`${localStorage.getItem(\"token\")}`;\n  let modifiedRequest = req.clone({\n    headers: req.headers.set(\"authorization\", `Bearer ${token}`)\n  }) \n  return next(modifiedRequest).pipe(\n    finalize(()=>{\n      _loader.setLoader(false);\n    })\n  )\n}\n                    \n                \n\n\n        \n    \n\n    src/guards/is-admin.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAdminGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  let authService = inject(AuthenticationService);\n    let router = inject(Router);\n    if(authService.user.value.role !='admin') {\n      router.navigateByUrl('/home');\n      return false;\n    }\n  return true;\n}\n                    \n                \n\n\n        \n    \n\n    src/guards/is-logged-in.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isLoggedInGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n  let token = localStorage.getItem(\"token\");\n  if(token == null) {\n    let router = inject(Router);\n    router.navigateByUrl(\"/login\");\n    return false;\n  }\n  return true;\n}\n                    \n                \n\n\n        \n    \n\n    src/guards/is-tenant.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isTenantGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n    let authService = inject(AuthenticationService);\n    let router = inject(Router);\n    if(authService.user.value.role !='tenant') {\n      router.navigateByUrl('/home');\n      return false;\n    }\n  return true;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
